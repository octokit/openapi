{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.0-development",
    "title": "GitHub's official OpenAPI spec + Octokit extension",
    "description": "OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT"
    },
    "termsOfService": "https://docs.github.com/articles/github-terms-of-service",
    "contact": {
      "name": "Support",
      "url": "https://github.com/octokit/openapi"
    },
    "x-github-plan": "ghes",
    "x-github-release": 3.8
  },
  "tags": [
    {
      "name": "actions",
      "description": "Endpoints to manage GitHub Actions using the REST API."
    },
    {
      "name": "activity",
      "description": "Activity APIs provide access to notifications, subscriptions, and timelines."
    },
    {
      "name": "apps",
      "description": "Information for integrations and installations."
    },
    {
      "name": "billing",
      "description": "Monitor charges and usage from Actions and Packages."
    },
    {
      "name": "checks",
      "description": "Rich interactions with checks run by your integrations."
    },
    {
      "name": "code-scanning",
      "description": "Retrieve code scanning alerts from a repository."
    },
    {
      "name": "codes-of-conduct",
      "description": "Insight into codes of conduct for your communities."
    },
    {
      "name": "codespaces",
      "description": "Endpoints to manage Codespaces using the REST API."
    },
    {
      "name": "emojis",
      "description": "List emojis available to use on GitHub."
    },
    {
      "name": "dependabot",
      "description": "Endpoints to manage Dependabot."
    },
    {
      "name": "dependency-graph",
      "description": "Endpoints to access Dependency Graph features."
    },
    {
      "name": "gists",
      "description": "View, modify your gists."
    },
    {
      "name": "git",
      "description": "Raw Git functionality."
    },
    {
      "name": "gitignore",
      "description": "View gitignore templates"
    },
    {
      "name": "interactions",
      "description": "Owner or admin management of users interactions."
    },
    {
      "name": "issues",
      "description": "Interact with GitHub Issues."
    },
    {
      "name": "licenses",
      "description": "View various OSS licenses."
    },
    {
      "name": "markdown",
      "description": "Render GitHub flavored markdown"
    },
    {
      "name": "merge-queue",
      "description": "Interact with GitHub Merge Queues."
    },
    {
      "name": "meta",
      "description": "Endpoints that give information about the API."
    },
    {
      "name": "migrations",
      "description": "Move projects to or from GitHub."
    },
    {
      "name": "oidc",
      "description": "Endpoints to manage GitHub OIDC configuration using the REST API."
    },
    {
      "name": "orgs",
      "description": "Interact with GitHub Orgs."
    },
    {
      "name": "packages",
      "description": "Manage packages for authenticated users and organizations."
    },
    {
      "name": "projects",
      "description": "Interact with GitHub Projects."
    },
    {
      "name": "pulls",
      "description": "Interact with GitHub Pull Requests."
    },
    {
      "name": "rate-limit",
      "description": "Check your current rate limit status"
    },
    {
      "name": "reactions",
      "description": "Interact with reactions to various GitHub entities."
    },
    {
      "name": "repos",
      "description": "Interact with GitHub Repos."
    },
    {
      "name": "search",
      "description": "Look for stuff on GitHub."
    },
    {
      "name": "secret-scanning",
      "description": "Retrieve secret scanning alerts from a repository."
    },
    {
      "name": "security-advisories",
      "description": "Manage security advisories."
    },
    {
      "name": "teams",
      "description": "Interact with GitHub Teams."
    },
    {
      "name": "users",
      "description": "Interact with and view information about users and also current user."
    },
    {
      "name": "scim",
      "description": "Provisioning of GitHub organization membership for SCIM-enabled providers."
    },
    {
      "name": "enterprise-admin",
      "description": "Enterprise Administration"
    }
  ],
  "servers": [
    {
      "url": "{protocol}://{hostname}/api/v3",
      "variables": {
        "hostname": {
          "description": "Self-hosted Enterprise Server hostname",
          "default": "HOSTNAME"
        },
        "protocol": {
          "description": "Self-hosted Enterprise Server protocol",
          "default": "http"
        }
      }
    }
  ],
  "externalDocs": {
    "description": "GitHub Enterprise Developer Docs",
    "url": "https://docs.github.com/enterprise-server@3.8/rest/"
  },
  "paths": {
    "/admin/tokens": {
      "get": {
        "summary": "List personal access tokens",
        "description": "Lists personal access tokens for all users, including admin users.",
        "operationId": "enterprise-admin/list-personal-access-tokens",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-personal-access-tokens"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/authorization"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/admin/users/{username}/authorizations": {
      "post": {
        "summary": "Create an impersonation OAuth token",
        "description": "",
        "operationId": "enterprise-admin/create-impersonation-o-auth-token",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#create-an-impersonation-oauth-token"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/username"
          }
        ],
        "responses": {
          "200": {
            "description": "Response when getting an existing impersonation OAuth token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Response when creating a new impersonation OAuth token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "description": "A list of [scopes](https://docs.github.com/enterprise-server@3.8/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "scopes"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "scopes": [
                      "public_repo"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/app/installations": {
      "get": {
        "summary": "List installations for the authenticated app",
        "description": "You must use a [JWT](https://docs.github.com/enterprise-server@3.8/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/list-installations",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/apps#list-installations-for-the-authenticated-app"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/since"
          },
          {
            "name": "outdated",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The permissions the installation has are included under the `permissions` key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/installation"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/base-installation-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/app/installations/{installation_id}": {
      "get": {
        "summary": "Get an installation for the authenticated app",
        "description": "Enables an authenticated GitHub App to find an installation's information using the installation id.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.8/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/get-installation",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/apps#get-an-installation-for-the-authenticated-app"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/installation-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/base-installation"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/app/installations/{installation_id}/access_tokens": {
      "post": {
        "summary": "Create an installation access token for an app",
        "description": "Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.8/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/create-installation-access-token",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/apps/#create-an-installation-access-token-for-an-app"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/installation-id"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositories": {
                    "description": "List of repository names that the token should have access to",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "rails"
                    }
                  },
                  "repository_ids": {
                    "description": "List of repository IDs that the token should have access to",
                    "example": [
                      1
                    ],
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "permissions": {
                    "$ref": "#/components/schemas/app-permissions"
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "repository": "Hello-World",
                    "permissions": {
                      "issues": "write",
                      "contents": "read"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation-token"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/installation-token"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/applications/{client_id}/token": {
      "post": {
        "summary": "Check a token",
        "description": "OAuth applications and GitHub applications with OAuth authorizations can use this API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.8/rest/overview/other-authentication-methods#basic-authentication) to use this endpoint, where the username is the application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/check-token",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/apps#check-a-token"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/client-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "access_token": {
                    "description": "The access_token of the OAuth or GitHub application.",
                    "type": "string"
                  }
                },
                "required": [
                  "access_token"
                ],
                "type": "object"
              },
              "examples": {
                "default": {
                  "value": {
                    "access_token": "e72e16c7e42f292c6912e7710c838347ae178b4a"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-with-user"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "apps",
          "subcategory": "oauth-applications"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      },
      "patch": {
        "summary": "Reset a token",
        "description": "OAuth applications and GitHub applications with OAuth authorizations can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.8/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/reset-token",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/apps#reset-a-token"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/client-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "access_token": {
                    "description": "The access_token of the OAuth or GitHub application.",
                    "type": "string"
                  }
                },
                "required": [
                  "access_token"
                ],
                "type": "object"
              },
              "examples": {
                "default": {
                  "value": {
                    "access_token": "e72e16c7e42f292c6912e7710c838347ae178b4a"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-with-user"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "apps",
          "subcategory": "oauth-applications"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/applications/{client_id}/token/scoped": {
      "post": {
        "summary": "Create a scoped access token",
        "description": "Use a non-scoped user-to-server access token to create a repository scoped and/or permission scoped user-to-server access token. You can specify which repositories the token can access and which permissions are granted to the token. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.8/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the `client_id` and `client_secret` of the GitHub App as the username and password. Invalid tokens will return `404 NOT FOUND`.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/scope-token",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/apps/apps#create-a-scoped-access-token"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/client-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string",
                    "description": "The access token used to authenticate to the GitHub API.",
                    "example": "e72e16c7e42f292c6912e7710c838347ae178b4a"
                  },
                  "target": {
                    "description": "The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is specified.",
                    "type": "string",
                    "example": "octocat"
                  },
                  "target_id": {
                    "description": "The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specified.",
                    "example": 1,
                    "type": "integer"
                  },
                  "repositories": {
                    "description": "The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `repository_ids` is specified.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "rails"
                    }
                  },
                  "repository_ids": {
                    "description": "The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `repositories` is specified.",
                    "example": [
                      1
                    ],
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "permissions": {
                    "$ref": "#/components/schemas/app-permissions"
                  }
                },
                "required": [
                  "access_token"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "access_token": "e72e16c7e42f292c6912e7710c838347ae178b4a",
                    "target": "octocat",
                    "permissions": {
                      "metadata": "read",
                      "issues": "write",
                      "contents": "read"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/scope-token"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "apps",
          "subcategory": "apps"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/authorizations": {
      "get": {
        "summary": "List your authorizations",
        "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.8/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
        "tags": [
          "oauth-authorizations"
        ],
        "operationId": "oauth-authorizations/list-authorizations",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations#list-your-authorizations"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": false,
            "description": "The client ID of your GitHub app.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/authorization"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "removalDate": "2020-11-13",
          "deprecationDate": "2020-02-14",
          "category": "oauth-authorizations",
          "subcategory": null
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new authorization",
        "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.8/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@3.8/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates OAuth tokens using [Basic Authentication](https://docs.github.com/enterprise-server@3.8/rest/overview/other-authentication-methods#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@3.8/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub Enterprise Server from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://docs.github.com/enterprise-server@3.8/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://docs.github.com/enterprise-server@3.8/articles/about-identity-and-access-management-with-saml-single-sign-on).",
        "tags": [
          "oauth-authorizations"
        ],
        "operationId": "oauth-authorizations/create-authorization",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations#create-a-new-authorization"
        },
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "description": "A list of scopes that this authorization is in.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "public_repo",
                      "user"
                    ],
                    "nullable": true
                  },
                  "note": {
                    "description": "A note to remind you what the OAuth token is for.",
                    "type": "string",
                    "example": "Update all gems"
                  },
                  "note_url": {
                    "description": "A URL to remind you what app the OAuth token is for.",
                    "type": "string"
                  },
                  "client_id": {
                    "description": "The OAuth app client key for which to create the token.",
                    "maxLength": 20,
                    "type": "string"
                  },
                  "client_secret": {
                    "description": "The OAuth app client secret for which to create the token.",
                    "maxLength": 40,
                    "type": "string"
                  },
                  "fingerprint": {
                    "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                    "type": "string"
                  }
                }
              },
              "examples": {
                "default": {
                  "summary": "Create an authorization",
                  "value": {
                    "scopes": [
                      "public_repo"
                    ],
                    "note": "optional note",
                    "note_url": "http://optional/note/url",
                    "client_id": "abcde12345fghij67890",
                    "client_secret": "3ef4ad510c59ad37bac6bb4f80047fb3aee3cc7f"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "example": "https://api.github.com/authorizations/1",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "410": {
            "$ref": "#/components/responses/gone"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "removalDate": "2020-11-13",
          "deprecationDate": "2020-02-14",
          "category": "oauth-authorizations",
          "subcategory": null
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/authorizations/clients/{client_id}": {
      "put": {
        "summary": "Get-or-create an authorization for a specific app",
        "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.8/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@3.8/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@3.8/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\n**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.8/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
        "tags": [
          "oauth-authorizations"
        ],
        "operationId": "oauth-authorizations/get-or-create-authorization-for-app",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/oauth-client-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "client_secret": {
                    "description": "The OAuth app client secret for which to create the token.",
                    "maxLength": 40,
                    "type": "string"
                  },
                  "scopes": {
                    "description": "A list of scopes that this authorization is in.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "public_repo",
                      "user"
                    ],
                    "nullable": true
                  },
                  "note": {
                    "description": "A note to remind you what the OAuth token is for.",
                    "type": "string",
                    "example": "Update all gems"
                  },
                  "note_url": {
                    "description": "A URL to remind you what app the OAuth token is for.",
                    "type": "string"
                  },
                  "fingerprint": {
                    "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                    "type": "string"
                  }
                },
                "required": [
                  "client_secret"
                ],
                "type": "object"
              },
              "examples": {
                "default": {
                  "summary": "Create an authorization for an app",
                  "value": {
                    "client_secret": "3ef4ad510c59ad37bac6bb4f80047fb3aee3cc7f",
                    "scopes": [
                      "public_repo"
                    ],
                    "note": "optional note",
                    "note_url": "http://optional/note/url"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "if returning an existing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "response-if-returning-an-existing-token": {
                    "$ref": "#/components/examples/authorization-response-if-returning-an-existing-token-2"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "example": "https://api.github.com/authorizations/1",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.8/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "example": "https://api.github.com/authorizations/1",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "removalDate": "2020-11-13",
          "deprecationDate": "2020-02-14",
          "category": "oauth-authorizations",
          "subcategory": null
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/authorizations/clients/{client_id}/{fingerprint}": {
      "put": {
        "summary": "Get-or-create an authorization for a specific app and fingerprint",
        "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.8/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@3.8/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nThis method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@3.8/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"",
        "tags": [
          "oauth-authorizations"
        ],
        "operationId": "oauth-authorizations/get-or-create-authorization-for-app-and-fingerprint",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app-and-fingerprint"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/oauth-client-id"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "client_secret": {
                    "description": "The OAuth app client secret for which to create the token.",
                    "maxLength": 40,
                    "type": "string"
                  },
                  "scopes": {
                    "description": "A list of scopes that this authorization is in.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "public_repo",
                      "user"
                    ],
                    "nullable": true
                  },
                  "note": {
                    "description": "A note to remind you what the OAuth token is for.",
                    "type": "string",
                    "example": "Update all gems"
                  },
                  "note_url": {
                    "description": "A URL to remind you what app the OAuth token is for.",
                    "type": "string"
                  }
                },
                "required": [
                  "client_secret"
                ],
                "type": "object"
              },
              "examples": {
                "default": {
                  "summary": "Create an authorization for an app and fingerprint",
                  "value": {
                    "client_secret": "3ef4ad510c59ad37bac6bb4f80047fb3aee3cc7f",
                    "scopes": [
                      "public_repo"
                    ],
                    "note": "optional note",
                    "note_url": "http://optional/note/url"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "if returning an existing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "response-if-returning-an-existing-token": {
                    "$ref": "#/components/examples/authorization-response-if-returning-an-existing-token"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "example": "https://api.github.com/authorizations/1",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Response if returning a new token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-3"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "example": "https://api.github.com/authorizations/1",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "removalDate": "2020-11-13",
          "deprecationDate": "2020-02-14",
          "category": "oauth-authorizations",
          "subcategory": null
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/authorizations/{authorization_id}": {
      "get": {
        "summary": "Get a single authorization",
        "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.8/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
        "tags": [
          "oauth-authorizations"
        ],
        "operationId": "oauth-authorizations/get-authorization",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations#get-a-single-authorization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-2"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "removalDate": "2020-11-13",
          "deprecationDate": "2020-02-14",
          "category": "oauth-authorizations",
          "subcategory": null
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      },
      "patch": {
        "summary": "Update an existing authorization",
        "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.8/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@3.8/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.",
        "tags": [
          "oauth-authorizations"
        ],
        "operationId": "oauth-authorizations/update-authorization",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/oauth-authorizations#update-an-existing-authorization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization-id"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "description": "A list of scopes that this authorization is in.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "public_repo",
                      "user"
                    ],
                    "nullable": true
                  },
                  "add_scopes": {
                    "description": "A list of scopes to add to this authorization.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "remove_scopes": {
                    "description": "A list of scopes to remove from this authorization.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "note": {
                    "description": "A note to remind you what the OAuth token is for.",
                    "type": "string",
                    "example": "Update all gems"
                  },
                  "note_url": {
                    "description": "A URL to remind you what app the OAuth token is for.",
                    "type": "string"
                  },
                  "fingerprint": {
                    "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                    "type": "string"
                  }
                }
              },
              "examples": {
                "default": {
                  "summary": "Example of updating scopes and note",
                  "value": {
                    "add_scopes": [
                      "public_repo"
                    ],
                    "remove_scopes": [
                      "user"
                    ],
                    "note": "optional note"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-2"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "removalDate": "2020-11-13",
          "deprecationDate": "2020-02-14",
          "category": "oauth-authorizations",
          "subcategory": null
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/code_security_and_analysis": {
      "get": {
        "summary": "Get code security and analysis features for an enterprise",
        "description": "Gets code security and analysis settings for the specified enterprise.\nTo use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "secret-scanning/get-security-analysis-settings-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/enterprise-admin#get-code-security-analysis-features-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-security-analysis-settings"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/enterprise-security-analysis-settings"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "code-security-and-analysis"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      },
      "patch": {
        "summary": "Update code security and analysis features for an enterprise",
        "description": "Updates the settings for advanced security, secret scanning, and push protection for new repositories in an enterprise.\nTo use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "secret-scanning/patch-security-analysis-settings-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/enterprise-admin#update-code-security-and-analysis-features-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dependabot_alerts_enabled_for_new_repositories": {
                    "type": "boolean",
                    "description": "Whether Dependabot alerts are automatically enabled for new repositories. For more information, see \"[About Dependabot alerts](https://docs.github.com/enterprise-server@3.8/code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\""
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "advanced_security_enabled_for_new_repositories": true,
                    "dependabot_alerts_enabled_for_new_repositories": true,
                    "secret_scanning_enabled_for_new_repositories": true,
                    "secret_scanning_push_protection_enabled_for_new_repositories": true,
                    "secret_scanning_push_protection_custom_link": "https://github.com/test-org/test-repo/blob/main/README.md"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Action started"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "description": "The action could not be taken due to an in progress enablement, or a policy is preventing enablement"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "code-security-and-analysis"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/{security_product}/{enablement}": {
      "post": {
        "summary": "Enable or disable a security feature",
        "description": "Enables or disables the specified security feature for all repositories in an enterprise.\n\nTo use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "secret-scanning/post-security-product-enablement-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/enterprise-admin#enable-or-disable-a-security-feature"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/enterprise-security-product"
          },
          {
            "$ref": "#/components/parameters/enterprise-security-product-enablement"
          }
        ],
        "responses": {
          "204": {
            "description": "Action started"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "description": "The action could not be taken due to an in progress enablement, or a policy is preventing enablement"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "code-security-and-analysis"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/custom_roles": {
      "get": {
        "summary": "List custom repository roles in an organization",
        "description": "List the custom repository roles available in this organization. In order to see custom\nrepository roles in an organization, the authenticated user must be an organization owner.\n\nTo use this endpoint the authenticated user must be an administrator for the organization or of an repository of the organization and must use an access token with `admin:org repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-server@3.8/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/list-custom-roles",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/orgs#deprecated-list-custom-repository-roles-in-an-organization"
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "The unique identifier of the organization.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response - list of custom role names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "description": "The number of custom roles in this organization",
                      "example": 3,
                      "type": "integer"
                    },
                    "custom_roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization-custom-repository-role"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-custom-repository-role-example-old"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "removalDate": "2025-02-15",
          "deprecationDate": "2023-02-15",
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/installation": {
      "get": {
        "summary": "Get an organization installation for the authenticated app",
        "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.8/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/get-org-installation",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/apps#get-an-organization-installation-for-the-authenticated-app"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/installation"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/installations": {
      "get": {
        "summary": "List app installations for an organization",
        "description": "Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in the organization. You must be an organization owner with `admin:read` scope to use this endpoint.",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/list-app-installations",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/orgs#list-app-installations-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "installations"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "installations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/installation"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/installation-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/{security_product}/{enablement}": {
      "post": {
        "summary": "Enable or disable a security feature for an organization",
        "description": "Enables or disables the specified security feature for all eligible repositories in an organization.\n\nTo use this endpoint, you must be an organization owner or be member of a team with the security manager role.\nA token with the 'write:org' scope is also required.\n\nGitHub Apps must have the `organization_administration:write` permission to use this endpoint.\n\nFor more information, see \"[Managing security managers in your organization](https://docs.github.com/enterprise-server@3.8/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/enable-or-disable-security-product-on-all-org-repos",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/orgs#enable-or-disable-security-product-on-all-org-repos"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/security-product"
          },
          {
            "$ref": "#/components/parameters/org-security-product-enablement"
          }
        ],
        "responses": {
          "204": {
            "description": "Action started"
          },
          "422": {
            "description": "The action could not be taken due to an in progress enablement, or a policy is preventing enablement"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "orgs",
          "subcategory": "orgs"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}": {
      "patch": {
        "summary": "Update a repository",
        "description": "**Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/enterprise-server@3.8/rest/reference/repos#replace-all-repository-topics) endpoint.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/update",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/repos/repos#update-a-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the repository."
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description of the repository."
                  },
                  "homepage": {
                    "type": "string",
                    "description": "A URL with more information about the repository."
                  },
                  "private": {
                    "type": "boolean",
                    "description": "Either `true` to make the repository private or `false` to make it public. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/enterprise-server@3.8/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.",
                    "default": false
                  },
                  "visibility": {
                    "type": "string",
                    "description": "The visibility of the repository.",
                    "enum": [
                      "public",
                      "private",
                      "internal"
                    ]
                  },
                  "has_issues": {
                    "type": "boolean",
                    "description": "Either `true` to enable issues for this repository or `false` to disable them.",
                    "default": true
                  },
                  "has_projects": {
                    "type": "boolean",
                    "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
                    "default": true
                  },
                  "has_wiki": {
                    "type": "boolean",
                    "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
                    "default": true
                  },
                  "is_template": {
                    "type": "boolean",
                    "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
                    "default": false
                  },
                  "default_branch": {
                    "type": "string",
                    "description": "Updates the default branch for this repository."
                  },
                  "allow_squash_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
                    "default": true
                  },
                  "allow_merge_commit": {
                    "type": "boolean",
                    "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
                    "default": true
                  },
                  "allow_rebase_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
                    "default": true
                  },
                  "delete_branch_on_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
                    "default": false
                  },
                  "allow_update_branch": {
                    "type": "boolean",
                    "description": "Either `true` to always allow a pull request head branch that is behind its base branch to be updated even if it is not required to be up to date before merging, or false otherwise.",
                    "default": false
                  },
                  "use_squash_pr_title_as_default": {
                    "type": "boolean",
                    "description": "Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
                    "default": false,
                    "deprecated": true
                  },
                  "squash_merge_commit_title": {
                    "type": "string",
                    "enum": [
                      "PR_TITLE",
                      "COMMIT_OR_PR_TITLE"
                    ],
                    "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
                  },
                  "squash_merge_commit_message": {
                    "type": "string",
                    "enum": [
                      "PR_BODY",
                      "COMMIT_MESSAGES",
                      "BLANK"
                    ],
                    "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
                  },
                  "merge_commit_title": {
                    "type": "string",
                    "enum": [
                      "PR_TITLE",
                      "MERGE_MESSAGE"
                    ],
                    "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
                  },
                  "merge_commit_message": {
                    "type": "string",
                    "enum": [
                      "PR_BODY",
                      "PR_TITLE",
                      "BLANK"
                    ],
                    "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether to archive this repository. `false` will unarchive a previously archived repository.",
                    "default": false
                  },
                  "allow_forking": {
                    "type": "boolean",
                    "description": "Either `true` to allow private forks, or `false` to prevent private forks.",
                    "default": false
                  },
                  "web_commit_signoff_required": {
                    "type": "boolean",
                    "description": "Either `true` to require contributors to sign off on web-based commits, or `false` to not require contributors to sign off on web-based commits.",
                    "default": false
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Hello-World",
                    "description": "This is your first repository",
                    "homepage": "https://github.com",
                    "private": true,
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/full-repository"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/full-repository"
                  }
                }
              }
            }
          },
          "307": {
            "$ref": "#/components/responses/temporary_redirect"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "previews": [
            {
              "required": false,
              "name": "nebula",
              "note": "You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://docs.github.com/enterprise-server@3.8/rest/reference/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).\n\nTo access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.8/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.nebula-preview+json\n```"
            },
            {
              "required": false,
              "name": "baptiste",
              "note": "The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://docs.github.com/enterprise-server@3.8/rest/reference/repos#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.8/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.baptiste-preview+json\n```"
            }
          ]
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/actions/jobs/{job_id}": {
      "get": {
        "summary": "Get a job for a workflow run",
        "description": "Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/get-job-for-workflow-run",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/actions#get-a-job-for-a-workflow-run"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/job-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/job"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "actions",
          "subcategory": "workflow-jobs"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs": {
      "get": {
        "summary": "List jobs for a workflow run attempt",
        "description": "Lists jobs for a specific workflow run attempt. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@3.8/rest/overview/resources-in-the-rest-api#parameters).",
        "tags": [
          "actions"
        ],
        "operationId": "actions/list-jobs-for-workflow-run-attempt",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/actions#list-jobs-for-a-workflow-run-attempt"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/run-id"
          },
          {
            "$ref": "#/components/parameters/attempt-number"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "jobs"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/job"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/job-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "actions",
          "subcategory": "workflow-jobs"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs": {
      "get": {
        "summary": "List jobs for a workflow run",
        "description": "Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@3.8/rest/overview/resources-in-the-rest-api#parameters).",
        "tags": [
          "actions"
        ],
        "operationId": "actions/list-jobs-for-workflow-run",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/actions#list-jobs-for-a-workflow-run"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/run-id"
          },
          {
            "name": "filter",
            "description": "Filters jobs by their `completed_at` timestamp. `latest` returns jobs from the most recent execution of the workflow run. `all` returns all jobs for a workflow run, including from old executions of the workflow run.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "latest",
                "all"
              ],
              "default": "latest"
            }
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "jobs"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/job"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/job-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "actions",
          "subcategory": "workflow-jobs"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts": {
      "post": {
        "summary": "Add status check contexts",
        "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/enterprise-server@3.8/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/add-status-check-contexts",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/branches/branch-protection#add-status-check-contexts"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/branch"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "contexts": {
                        "type": "array",
                        "description": "The name of the status checks",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "contexts"
                    ],
                    "example": {
                      "contexts": [
                        "contexts"
                      ]
                    }
                  }
                ],
                "type": "array",
                "description": "The name of the status checks",
                "items": {
                  "type": "string"
                }
              },
              "examples": {
                "default": {
                  "summary": "Example adding status checks to a branch protection rule",
                  "value": [
                    "continuous-integration/travis-ci",
                    "continuous-integration/jenkins"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "examples": {
                  "default": {
                    "value": [
                      "continuous-integration/travis-ci",
                      "continuous-integration/jenkins"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "requestBodyParameterName": "contexts",
          "category": "branches",
          "subcategory": "branch-protection"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      },
      "put": {
        "summary": "Set status check contexts",
        "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/enterprise-server@3.8/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/set-status-check-contexts",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/branches/branch-protection#set-status-check-contexts"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/branch"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "contexts": {
                        "type": "array",
                        "description": "The name of the status checks",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "contexts"
                    ],
                    "example": {
                      "contexts": [
                        "contexts"
                      ]
                    }
                  }
                ],
                "type": "array",
                "description": "The name of the status checks",
                "items": {
                  "type": "string"
                }
              },
              "examples": {
                "default": {
                  "summary": "Example updating status checks for a branch protection rule",
                  "value": [
                    "continuous-integration/travis-ci"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "examples": {
                  "default": {
                    "value": [
                      "continuous-integration/travis-ci"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "requestBodyParameterName": "contexts",
          "category": "branches",
          "subcategory": "branch-protection"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams": {
      "post": {
        "summary": "Add team access restrictions",
        "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/enterprise-server@3.8/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified teams push access for this branch. You can also give push access to child teams.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/add-team-access-restrictions",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/branches/branch-protection#add-team-access-restrictions"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/branch"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "teams": {
                        "type": "array",
                        "description": "The slug values for teams",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "teams"
                    ],
                    "example": {
                      "teams": [
                        "my-team"
                      ]
                    }
                  }
                ],
                "type": "array",
                "description": "The slug values for teams",
                "items": {
                  "type": "string"
                }
              },
              "examples": {
                "default": {
                  "summary": "Example adding a team in a branch protection rule",
                  "value": [
                    "justice-league"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/team-items"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "requestBodyParameterName": "teams",
          "category": "branches",
          "subcategory": "branch-protection"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      },
      "put": {
        "summary": "Set team access restrictions",
        "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/enterprise-server@3.8/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/set-team-access-restrictions",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/branches/branch-protection#set-team-access-restrictions"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/branch"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "teams": {
                        "type": "array",
                        "description": "The slug values for teams",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "teams"
                    ],
                    "example": {
                      "teams": [
                        "justice-league"
                      ]
                    }
                  }
                ],
                "type": "array",
                "description": "The slug values for teams",
                "items": {
                  "type": "string"
                }
              },
              "examples": {
                "default": {
                  "summary": "Example replacing a team in a branch protection rule",
                  "value": [
                    "justice-league"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/team-items"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "requestBodyParameterName": "teams",
          "category": "branches",
          "subcategory": "branch-protection"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/git/refs": {
      "post": {
        "summary": "Create a reference",
        "description": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.",
        "tags": [
          "git"
        ],
        "operationId": "git/create-ref",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/git#create-a-reference"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ref": {
                    "type": "string",
                    "description": "The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected."
                  },
                  "sha": {
                    "type": "string",
                    "description": "The SHA1 value for this reference."
                  },
                  "key": {
                    "type": "string",
                    "example": "\"refs/heads/newbranch\""
                  }
                },
                "required": [
                  "ref",
                  "sha"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "ref": "refs/heads/featureA",
                    "sha": "aa218f56b14c9653891f9e74264a383fa43fefbd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/git-ref"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/git-ref"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "example": "https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "git",
          "subcategory": "refs"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/installation": {
      "get": {
        "summary": "Get a repository installation for the authenticated app",
        "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.8/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/get-repo-installation",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/apps#get-a-repository-installation-for-the-authenticated-app"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/installation"
                  }
                }
              }
            }
          },
          "301": {
            "$ref": "#/components/responses/moved_permanently"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/pulls/{pull_number}/comments": {
      "post": {
        "summary": "Create a review comment for a pull request",
        "description": "\nCreates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"[Create an issue comment](https://docs.github.com/enterprise-server@3.8/rest/reference/issues#create-an-issue-comment).\" We recommend creating a review comment using `line`, `side`, and optionally `start_line` and `start_side` if your comment applies to more than one line in the pull request diff.\n\nThe `position` parameter is deprecated. If you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required.\n\n**Note:** The position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nThis endpoint triggers [notifications](https://docs.github.com/enterprise-server@3.8/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@3.8/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@3.8/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.",
        "tags": [
          "pulls"
        ],
        "operationId": "pulls/create-review-comment",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/pulls#create-a-review-comment-for-a-pull-request"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/pull-number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string",
                    "description": "The text of the review comment."
                  },
                  "commit_id": {
                    "type": "string",
                    "description": "The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the `position`."
                  },
                  "path": {
                    "type": "string",
                    "description": "The relative path to the file that necessitates a comment."
                  },
                  "position": {
                    "type": "integer",
                    "description": "**This parameter is deprecated. Use `line` instead**. The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note above.",
                    "deprecated": true,
                    "x-github": {
                      "deprecationDate": "2022-11-01"
                    }
                  },
                  "side": {
                    "type": "string",
                    "description": "In a split diff view, the side of the diff that the pull request's changes appear on. Can be `LEFT` or `RIGHT`. Use `LEFT` for deletions that appear in red. Use `RIGHT` for additions that appear in green or unchanged lines that appear in white and are shown for context. For a multi-line comment, side represents whether the last line of the comment range is a deletion or addition. For more information, see \"[Diff view options](https://docs.github.com/enterprise-server@3.8/articles/about-comparing-branches-in-pull-requests#diff-view-options)\" in the GitHub Help documentation.",
                    "enum": [
                      "LEFT",
                      "RIGHT"
                    ]
                  },
                  "line": {
                    "type": "integer",
                    "description": "The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of the range that your comment applies to."
                  },
                  "start_line": {
                    "type": "integer",
                    "description": "**Required when using multi-line comments unless using `in_reply_to`**. The `start_line` is the first line in the pull request diff that your multi-line comment applies to. To learn more about multi-line comments, see \"[Commenting on a pull request](https://docs.github.com/enterprise-server@3.8/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)\" in the GitHub Help documentation."
                  },
                  "start_side": {
                    "type": "string",
                    "description": "**Required when using multi-line comments unless using `in_reply_to`**. The `start_side` is the starting side of the diff that the comment applies to. Can be `LEFT` or `RIGHT`. To learn more about multi-line comments, see \"[Commenting on a pull request](https://docs.github.com/enterprise-server@3.8/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)\" in the GitHub Help documentation. See `side` in this table for additional context.",
                    "enum": [
                      "LEFT",
                      "RIGHT",
                      "side"
                    ]
                  },
                  "in_reply_to": {
                    "type": "integer",
                    "example": 2,
                    "description": "The ID of the review comment to reply to. To find the ID of a review comment with [\"List review comments on a pull request\"](#list-review-comments-on-a-pull-request). When specified, all parameters other than `body` in the request body are ignored."
                  }
                },
                "required": [
                  "body",
                  "commit_id",
                  "path",
                  "line"
                ]
              },
              "examples": {
                "example-for-a-multi-line-comment": {
                  "summary": "Example for a multi-line comment",
                  "value": {
                    "body": "Great stuff!",
                    "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                    "path": "file1.txt",
                    "start_line": 1,
                    "start_side": "RIGHT",
                    "line": 2,
                    "side": "RIGHT"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pull-request-review-comment"
                },
                "examples": {
                  "example-for-a-multi-line-comment": {
                    "$ref": "#/components/examples/pull-request-review-comment-example-for-a-multi-line-comment"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "triggersNotification": true,
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "pulls",
          "subcategory": "comments"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/user/installations": {
      "get": {
        "summary": "List app installations accessible to the user access token",
        "description": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@3.8/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/list-installations-for-authenticated-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/apps#list-app-installations-accessible-to-the-user-access-token"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "You can find the permissions for the installation under the `permissions` key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "installations"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "installations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/installation"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/base-installation-for-auth-user-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "apps",
          "subcategory": "installations"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/users/{username}/installation": {
      "get": {
        "summary": "Get a user installation for the authenticated app",
        "description": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.8/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "tags": [
          "apps"
        ],
        "operationId": "apps/get-user-installation",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.8/rest/reference/apps#get-a-user-installation-for-the-authenticated-app"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/username"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/installation"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.9": {
              "type": "changed"
            }
          }
        }
      }
    }
  },
  "x-webhooks": {
    "branch-protection-rule-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to branch protection rules. For more information, see \"[About protected branches](https://docs.github.com/enterprise-server@3.8/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches).\" For information about the APIs to manage branch protection rules, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#branchprotectionrule) or \"[Branch protection](https://docs.github.com/enterprise-server@3.8/rest/branches/branch-protection)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" repository permission",
        "description": "A branch protection rule was created.",
        "operationId": "branch-protection-rule/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#branch-protection-rule"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-branch-protection-rule-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "branch-protection-rule",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "branch-protection-rule-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to branch protection rules. For more information, see \"[About protected branches](https://docs.github.com/enterprise-server@3.8/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches).\" For information about the APIs to manage branch protection rules, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#branchprotectionrule) or \"[Branch protection](https://docs.github.com/enterprise-server@3.8/rest/branches/branch-protection)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" repository permission.",
        "description": "A branch protection rule was deleted.",
        "operationId": "branch-protection-rule/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#branch-protection-rule"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-branch-protection-rule-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "branch-protection-rule",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "branch-protection-rule-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to branch protection rules. For more information, see \"[About protected branches](https://docs.github.com/enterprise-server@3.8/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches).\" For information about the APIs to manage branch protection rules, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#branchprotectionrule) or \"[Branch protection](https://docs.github.com/enterprise-server@3.8/rest/branches/branch-protection)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" repository permission.",
        "description": "A branch protection rule was edited.",
        "operationId": "branch-protection-rule/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#branch-protection-rule"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-branch-protection-rule-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "branch-protection-rule",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "cache-sync": {
      "post": {
        "summary": "This event occurs when a Git ref has been successfully synced to a cache replica. For more information, see \"[About repository caching](https://docs.github.com/enterprise-server@3.8/admin/enterprise-management/caching-repositories/about-repository-caching).\"",
        "operationId": "cache-sync",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#cache-sync"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-cache-sync"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "cache-sync",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-run-completed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check run. For information about check runs, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-server@3.8/rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check runs, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#checkrun) or \"[Check Runs](https://docs.github.com/enterprise-server@3.8/rest/checks/runs)\" in the REST API documentation.\n\nFor activity relating to check suites, use the `check-suite` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" repository permission. To receive the `rerequested` and `requested_action` event types, the app must have at least write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `created` and `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check run was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "A check run was completed, and a conclusion is available.",
        "operationId": "check-run/completed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check_run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-completed"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-completed"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-completed-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-completed-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "check_run",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-run-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check run. For information about check runs, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-server@3.8/rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check runs, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#checkrun) or \"[Check Runs](https://docs.github.com/enterprise-server@3.8/rest/checks/runs)\" in the REST API documentation.\n\nFor activity relating to check suites, use the `check-suite` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" repository permission. To receive the `rerequested` and `requested_action` event types, the app must have at least write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `created` and `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check run was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "A new check run was created.",
        "operationId": "check-run/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check_run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-created"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-created"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-created-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-created-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "check_run",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-run-requested-action": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check run. For information about check runs, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-server@3.8/rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check runs, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#checkrun) or \"[Check Runs](https://docs.github.com/enterprise-server@3.8/rest/checks/runs)\" in the REST API documentation.\n\nFor activity relating to check suites, use the `check-suite` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" repository permission. To receive the `rerequested` and `requested_action` event types, the app must have at least write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `created` and `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check run was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "A check run completed, and someone requested a followup action that your app provides. Only the GitHub App someone requests to perform an action will receive the `requested_action` payload. For more information, see \"[Creating CI tests with the Checks API](https://docs.github.com/enterprise-server@3.8/developers/apps/guides/creating-ci-tests-with-the-checks-api).\"",
        "operationId": "check-run/requested-action",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check_run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-requested-action"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-requested-action"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-requested-action-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-requested-action-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "check_run",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-run-rerequested": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check run. For information about check runs, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-server@3.8/rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check runs, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#checkrun) or \"[Check Runs](https://docs.github.com/enterprise-server@3.8/rest/checks/runs)\" in the REST API documentation.\n\nFor activity relating to check suites, use the `check-suite` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" repository permission. To receive the `rerequested` and `requested_action` event types, the app must have at least write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `created` and `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check run was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "Someone requested to re-run a check run. Only the GitHub App that someone requests to re-run the check will receive the `rerequested` payload.",
        "operationId": "check-run/rerequested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check_run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-rerequested"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-rerequested"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-rerequested-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-rerequested-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "check_run",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-suite-completed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check suite. For information about check suites, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-server@3.8/rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check suites, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#checksuite) or \"[Check Suites](https://docs.github.com/enterprise-server@3.8/rest/checks/suites)\" in the REST API documentation.\n\nFor activity relating to check runs, use the `check_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" permission. To receive the `requested` and `rerequested` event types, the app must have at lease write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check suite was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "All check runs in a check suite have completed, and a conclusion is available.",
        "operationId": "check-suite/completed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check-suite"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-suite-completed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "check-suite",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-suite-requested": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check suite. For information about check suites, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-server@3.8/rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check suites, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#checksuite) or \"[Check Suites](https://docs.github.com/enterprise-server@3.8/rest/checks/suites)\" in the REST API documentation.\n\nFor activity relating to check runs, use the `check_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" permission. To receive the `requested` and `rerequested` event types, the app must have at lease write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check suite was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "Someone requested to run a check suite. By default, check suites are automatically created when you create a check run. For more information, see [the GraphQL API documentation for creating a check run](https://docs.github.com/enterprise-server@3.8/graphql/reference/mutations#createcheckrun) or \"[Create a check run](https://docs.github.com/enterprise-server@3.8/rest/checks/runs#create-a-check-run)\" in the REST API documentation.",
        "operationId": "check-suite/requested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check-suite"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-suite-requested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "check-suite",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-suite-rerequested": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check suite. For information about check suites, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-server@3.8/rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check suites, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#checksuite) or \"[Check Suites](https://docs.github.com/enterprise-server@3.8/rest/checks/suites)\" in the REST API documentation.\n\nFor activity relating to check runs, use the `check_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" permission. To receive the `requested` and `rerequested` event types, the app must have at lease write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check suite was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "Someone requested to re-run the check runs in a check suite. For more information, see [the GraphQL API documentation for creating a check suite](https://docs.github.com/enterprise-server@3.8/graphql/reference/mutations#createchecksuite) or \"[Create a check suite](https://docs.github.com/enterprise-server@3.8/rest/checks/suites#create-a-check-suite)\" in the REST API documentation.",
        "operationId": "check-suite/rerequested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check-suite"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-suite-rerequested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "check-suite",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-appeared-in-branch": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-server@3.8/rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "A previously created code scanning alert appeared in another branch. This can happen when a branch is merged into or created from a branch with a pre-existing code scanning alert.",
        "operationId": "code-scanning-alert/appeared-in-branch",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-appeared-in-branch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-closed-by-user": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-server@3.8/rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "Someone closed a code scanning alert.",
        "operationId": "code-scanning-alert/closed-by-user",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-closed-by-user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-server@3.8/rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "A code scanning alert was created in a repository.",
        "operationId": "code-scanning-alert/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-fixed": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-server@3.8/rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "A code scanning alert was fixed in a branch by a commit.",
        "operationId": "code-scanning-alert/fixed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-fixed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-server@3.8/rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "A previously fixed code scanning alert reappeared in a branch.",
        "operationId": "code-scanning-alert/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-reopened-by-user": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-server@3.8/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-server@3.8/rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "Someone reopened a code scanning alert.",
        "operationId": "code-scanning-alert/reopened-by-user",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-reopened-by-user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "commit-comment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to commit comments. For more information about commit comments, see \"[Commenting on a pull request](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request).\" For information about the APIs to manage commit comments, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#commitcomment) or \"[Commit comments](https://docs.github.com/enterprise-server@3.8/rest/commits/comments)\" in the REST API documentation.\n\nFor activity relating to comments on pull request reviews, use the `pull_request_review_comment` event. For activity relating to issue comments, use the `issue_comment` event. For activity relating to discussion comments, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "Someone commented on a commit.",
        "operationId": "commit-comment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#commit-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-commit-comment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "commit-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "create": {
      "post": {
        "summary": "This event occurs when a Git branch or tag is created.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.\n\n**Note**: This event will not occur when more than three tags are created at once.",
        "operationId": "create",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#create"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "create",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "delete": {
      "post": {
        "summary": "This event occurs when a Git branch or tag is deleted.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.\n\n**Note**: This event will not occur when more than three tags are deleted at once.",
        "operationId": "delete",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#delete"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "delete",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-server@3.8/code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-server@3.8/rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A manifest file change introduced a vulnerable dependency, or a GitHub Security Advisory was published and an existing dependency was found to be vulnerable.",
        "operationId": "dependabot-alert/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-dismissed": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-server@3.8/code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-server@3.8/rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A Dependabot alert was manually closed.",
        "operationId": "dependabot-alert/dismissed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-dismissed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-fixed": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-server@3.8/code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-server@3.8/rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A manifest file change removed a vulnerability.",
        "operationId": "dependabot-alert/fixed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-fixed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-reintroduced": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-server@3.8/code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-server@3.8/rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A manifest file change introduced a vulnerable dependency that had previously been fixed.",
        "operationId": "dependabot-alert/reintroduced",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-reintroduced"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-server@3.8/code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-server@3.8/rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A Dependabot alert was manually reopened.",
        "operationId": "dependabot-alert/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "deploy-key-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to deploy keys. For more information, see \"[Managing deploy keys](https://docs.github.com/enterprise-server@3.8/developers/overview/managing-deploy-keys).\" For information about the APIs to manage deploy keys, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#deploykey) or \"[Deploy keys](https://docs.github.com/enterprise-server@3.8/rest/deploy-keys)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Deployments\" repository permission.",
        "description": "A deploy key was created.",
        "operationId": "deploy-key/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deploy-key"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-deploy-key-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "deploy-key",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "deploy-key-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to deploy keys. For more information, see \"[Managing deploy keys](https://docs.github.com/enterprise-server@3.8/developers/overview/managing-deploy-keys).\" For information about the APIs to manage deploy keys, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#deploykey) or \"[Deploy keys](https://docs.github.com/enterprise-server@3.8/rest/deploy-keys)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Deployments\" repository permission.",
        "description": "A deploy key was deleted.",
        "operationId": "deploy-key/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deploy-key"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-deploy-key-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "deploy-key",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "deployment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to deployments. For more information, see \"[About deployments](https://docs.github.com/enterprise-server@3.8/actions/deployment/about-deployments).\" For information about the APIs to manage deployments, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#deployment) or \"[Deployments](https://docs.github.com/enterprise-server@3.8/rest/deployments/deployments)\" in the REST API documentation.\n\nFor activity relating to deployment status, use the `deployment_status` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Deployments\" repository permission.",
        "description": "A deployment was created.",
        "operationId": "deployment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deployment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-deployment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "deployment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "deployment-status-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to deployment statuses. For more information, see \"[About deployments](https://docs.github.com/enterprise-server@3.8/actions/deployment/about-deployments).\" For information about the APIs to manage deployments, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#deployment) or \"[Deployments](https://docs.github.com/enterprise-server@3.8/rest/deployments/deployments)\" in the REST API documentation.\n\nFor activity relating to deployment creation, use the `deployment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Deployments\" repository permission.",
        "description": "A new deployment status was created.",
        "operationId": "deployment-status/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deployment-status"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-deployment-status-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "deployment-status",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-answered": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on the discussion was marked as the answer.",
        "operationId": "discussion/answered",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-answered"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-category-changed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "The category of a discussion was changed.",
        "operationId": "discussion/category-changed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-category-changed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-comment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a discussion as opposed to comments on a discussion, use the `discussion` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on a discussion was created.",
        "operationId": "discussion-comment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-comment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-comment-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a discussion as opposed to comments on a discussion, use the `discussion` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on a discussion was deleted.",
        "operationId": "discussion-comment/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-comment-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-comment-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a discussion as opposed to comments on a discussion, use the `discussion` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on a discussion was edited.",
        "operationId": "discussion-comment/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-comment-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was created.",
        "operationId": "discussion/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was deleted.",
        "operationId": "discussion/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "The title or body on a discussion was edited, or the category of the discussion was changed.",
        "operationId": "discussion/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-labeled": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A label was added to a discussion.",
        "operationId": "discussion/labeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-labeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-locked": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was locked.",
        "operationId": "discussion/locked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-locked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-pinned": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was pinned.",
        "operationId": "discussion/pinned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-pinned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-transferred": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was transferred to another repository.",
        "operationId": "discussion/transferred",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-transferred"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-unanswered": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on the discussion was unmarked as the answer.",
        "operationId": "discussion/unanswered",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-unanswered"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-unlabeled": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A label was removed from a discussion.",
        "operationId": "discussion/unlabeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-unlabeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-unlocked": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was unlocked.",
        "operationId": "discussion/unlocked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-unlocked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-unpinned": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-server@3.8/discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was unpinned.",
        "operationId": "discussion/unpinned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-unpinned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "enterprise-anonymous-access-disabled": {
      "post": {
        "summary": "This event occurs when there is activity relating to anonymous Git read access in an enterprise. For more information, see \"[Enforcing repository management policies in your enterprise](https://docs.github.com/enterprise-server@3.8/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#configuring-anonymous-git-read-access).\"",
        "description": "Anonymous Git read access was disabled.",
        "operationId": "enterprise/anonymous-access-disabled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#enterprise"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-enterprise-anonymous-access-disabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "enterprise",
          "supported-webhook-types": [
            "business"
          ]
        }
      }
    },
    "enterprise-anonymous-access-enabled": {
      "post": {
        "summary": "This event occurs when there is activity relating to anonymous Git read access in an enterprise. For more information, see \"[Enforcing repository management policies in your enterprise](https://docs.github.com/enterprise-server@3.8/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#configuring-anonymous-git-read-access).\"",
        "description": "Anonymous Git read access was enabled.",
        "operationId": "enterprise/anonymous-access-enabled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#enterprise"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-enterprise-anonymous-access-enabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "enterprise",
          "supported-webhook-types": [
            "business"
          ]
        }
      }
    },
    "fork": {
      "post": {
        "summary": "This event occurs when someone forks a repository. For more information, see \"[Fork a repo](https://docs.github.com/enterprise-server@3.8/get-started/quickstart/fork-a-repo).\" For information about the API to manage forks, see \"[Forks](https://docs.github.com/enterprise-server@3.8/rest/repos/forks)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "operationId": "fork",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#fork"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-fork"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "fork",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "github-app-authorization-revoked": {
      "post": {
        "summary": "This event occurs when a user revokes their authorization of a GitHub App. For more information, see \"[About apps](https://docs.github.com/enterprise-server@3.8/developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the API to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-server@3.8/rest/apps)\" in the REST API documentation.\n\nA GitHub App receives this webhook by default and cannot unsubscribe from this event.\n\nAnyone can revoke their authorization of a GitHub App from their [GitHub account settings page](https://github.com/settings/apps/authorizations). Revoking the authorization of a GitHub App does not uninstall the GitHub App. You should program your GitHub App so that when it receives this webhook, it stops calling the API on behalf of the person who revoked the token. If your GitHub App continues to use a revoked access token, it will receive the `401 Bad Credentials` error. For details about user-to-server requests, which require GitHub App authorization, see \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-server@3.8/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/).\"",
        "description": "Someone revoked their authorization of a GitHub App.",
        "operationId": "github-app-authorization/revoked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#github-app-authorization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-github-app-authorization-revoked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "github-app-authorization",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "gollum": {
      "post": {
        "summary": "This event occurs when someone creates or updates a wiki page. For more information, see \"[About wikis](https://docs.github.com/enterprise-server@3.8/communities/documenting-your-project-with-wikis/about-wikis).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "operationId": "gollum",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#gollum"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-gollum"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "gollum",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "installation-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-server@3.8/developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-server@3.8/rest/reference/apps)\" in the REST API documentation.",
        "description": "Someone installed a GitHub App on a user or organization account.",
        "operationId": "installation/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-server@3.8/developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-server@3.8/rest/reference/apps)\" in the REST API documentation.",
        "description": "Someone uninstalled a GitHub App from their user or organization account.",
        "operationId": "installation/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-new-permissions-accepted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-server@3.8/developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-server@3.8/rest/reference/apps)\" in the REST API documentation.",
        "description": "Someone granted new permissions to a GitHub App.",
        "operationId": "installation/new-permissions-accepted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-new-permissions-accepted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-repositories-added": {
      "post": {
        "summary": "This event occurs when there is activity relating to which repositories a GitHub App installation can access. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-server@3.8/developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-server@3.8/rest/reference/apps)\" in the REST API documentation.",
        "description": "A GitHub App installation was granted access to one or more repositories.",
        "operationId": "installation-repositories/added",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation-repositories"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-repositories-added"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation-repositories",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-repositories-removed": {
      "post": {
        "summary": "This event occurs when there is activity relating to which repositories a GitHub App installation can access. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-server@3.8/developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-server@3.8/rest/reference/apps)\" in the REST API documentation.",
        "description": "Access to one or more repositories was revoked for a GitHub App installation.",
        "operationId": "installation-repositories/removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation-repositories"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-repositories-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation-repositories",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-suspend": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-server@3.8/developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-server@3.8/rest/reference/apps)\" in the REST API documentation.",
        "description": "Someone blocked access by a GitHub App to their user or organization account.",
        "operationId": "installation/suspend",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-suspend"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-target-renamed": {
      "post": {
        "summary": "This event occurs when there is activity relating to the user or organization account that a GitHub App is installed on. For more information, see \"[About apps](https://docs.github.com/enterprise-server@3.8/developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-server@3.8/rest/reference/apps)\" in the REST API documentation.",
        "description": "Somebody renamed the user or organization account that a GitHub App is installed on.",
        "operationId": "installation-target/renamed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation-target"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-target-renamed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation-target",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-unsuspend": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-server@3.8/developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-server@3.8/rest/reference/apps)\" in the REST API documentation.",
        "description": "A GitHub App that was blocked from accessing a user or organization account was given access the account again.",
        "operationId": "installation/unsuspend",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-unsuspend"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "issue-comment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on an issue or pull request. For more information about issues and pull requests, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues)\" and \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage issue comments, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issuecomment) or \"[Issue comments](https://docs.github.com/enterprise-server@3.8/rest/issues/comments)\" in the REST API documentation.\n\nFor activity relating to an issue as opposed to comments on an issue, use the `issue` event. For activity related to pull request reviews or pull request review comments, use the `pull_request_review` or `pull_request_review_comment` events. For more information about the different types of pull request comments, see \"[Working with comments](https://docs.github.com/enterprise-server@3.8/rest/guides/working-with-comments).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A comment on an issue or pull request was created.",
        "operationId": "issue-comment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issue-comment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issue-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issue-comment-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on an issue or pull request. For more information about issues and pull requests, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues)\" and \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage issue comments, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issuecomment) or \"[Issue comments](https://docs.github.com/enterprise-server@3.8/rest/issues/comments)\" in the REST API documentation.\n\nFor activity relating to an issue as opposed to comments on an issue, use the `issue` event. For activity related to pull request reviews or pull request review comments, use the `pull_request_review` or `pull_request_review_comment` events. For more information about the different types of pull request comments, see \"[Working with comments](https://docs.github.com/enterprise-server@3.8/rest/guides/working-with-comments).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A comment on an issue or pull request was deleted.",
        "operationId": "issue-comment/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issue-comment-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issue-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issue-comment-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on an issue or pull request. For more information about issues and pull requests, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues)\" and \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage issue comments, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issuecomment) or \"[Issue comments](https://docs.github.com/enterprise-server@3.8/rest/issues/comments)\" in the REST API documentation.\n\nFor activity relating to an issue as opposed to comments on an issue, use the `issue` event. For activity related to pull request reviews or pull request review comments, use the `pull_request_review` or `pull_request_review_comment` events. For more information about the different types of pull request comments, see \"[Working with comments](https://docs.github.com/enterprise-server@3.8/rest/guides/working-with-comments).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A comment on an issue or pull request was edited.",
        "operationId": "issue-comment/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issue-comment-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issue-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-assigned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was assigned to a user.",
        "operationId": "issues/assigned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-assigned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-closed": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was closed.",
        "operationId": "issues/closed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was deleted.",
        "operationId": "issues/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-demilestoned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was removed from a milestone.",
        "operationId": "issues/demilestoned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-demilestoned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "The title or body on an issue was edited.",
        "operationId": "issues/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-labeled": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "A label was added to an issue.",
        "operationId": "issues/labeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-labeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-locked": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "Conversation on an issue was locked. For more information, see \"[Locking conversations](https://docs.github.com/enterprise-server@3.8/communities/moderating-comments-and-conversations/locking-conversations).\"",
        "operationId": "issues/locked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-locked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-milestoned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was added to a milestone.",
        "operationId": "issues/milestoned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-milestoned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-opened": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was created. When a closed issue is reopened, the action will be `reopened` instead.",
        "operationId": "issues/opened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-opened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-pinned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was pinned to a repository. For more information, see \"[Pinning an issue to your repository](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository).\"",
        "operationId": "issues/pinned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-pinned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "A closed issue was reopened.",
        "operationId": "issues/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-transferred": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was transferred to another repository. For more information, see \"[Transferring an issue to another repository](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/transferring-an-issue-to-another-repository).\"",
        "operationId": "issues/transferred",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-transferred"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-unassigned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "A user was unassigned from an issue.",
        "operationId": "issues/unassigned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-unassigned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-unlabeled": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "A label was removed from an issue.",
        "operationId": "issues/unlabeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-unlabeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-unlocked": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "Conversation on an issue was locked. For more information, see \"[Locking conversations](https://docs.github.com/enterprise-server@3.8/communities/moderating-comments-and-conversations/locking-conversations).\"",
        "operationId": "issues/unlocked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-unlocked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-unpinned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-server@3.8/rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was unpinned from a repository. For more information, see \"[Pinning an issue to your repository](https://docs.github.com/enterprise-server@3.8/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository).\"",
        "operationId": "issues/unpinned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-unpinned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "label-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to labels. For more information, see \"[Managing labels](https://docs.github.com/enterprise-server@3.8/issues/using-labels-and-milestones-to-track-work/managing-labels).\" For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#label) or \"[Labels](https://docs.github.com/enterprise-server@3.8/rest/issues/labels)\" in the REST API documentation.\n\nIf you want to receive an event when a label is added to or removed from an issue, pull request, or discussion, use the `labeled` or `unlabeled` action type for the `issues`, `pull_request`, or `discussion` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A label was created.",
        "operationId": "label/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#label"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-label-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "label",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "label-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to labels. For more information, see \"[Managing labels](https://docs.github.com/enterprise-server@3.8/issues/using-labels-and-milestones-to-track-work/managing-labels).\" For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#label) or \"[Labels](https://docs.github.com/enterprise-server@3.8/rest/issues/labels)\" in the REST API documentation.\n\nIf you want to receive an event when a label is added to or removed from an issue, pull request, or discussion, use the `labeled` or `unlabeled` action type for the `issues`, `pull_request`, or `discussion` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A label was deleted.",
        "operationId": "label/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#label"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-label-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "label",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "label-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to labels. For more information, see \"[Managing labels](https://docs.github.com/enterprise-server@3.8/issues/using-labels-and-milestones-to-track-work/managing-labels).\" For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#label) or \"[Labels](https://docs.github.com/enterprise-server@3.8/rest/issues/labels)\" in the REST API documentation.\n\nIf you want to receive an event when a label is added to or removed from an issue, pull request, or discussion, use the `labeled` or `unlabeled` action type for the `issues`, `pull_request`, or `discussion` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A label's name, description, or color was changed.",
        "operationId": "label/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#label"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-label-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "label",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "member-added": {
      "post": {
        "summary": "This event occurs when there is activity relating to collaborators in a repository. For more information, see \"[Adding outside collaborators to repositories in your organization](https://docs.github.com/enterprise-server@3.8/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization).\" For more information about the API to manage repository collaborators, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repositorycollaboratorconnection) or \"[Collaborators](https://docs.github.com/enterprise-server@3.8/rest/collaborators/collaborators)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A GitHub user accepted an invitation to a repository.",
        "operationId": "member/added",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#member"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-member-added"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "member",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "member-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to collaborators in a repository. For more information, see \"[Adding outside collaborators to repositories in your organization](https://docs.github.com/enterprise-server@3.8/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization).\" For more information about the API to manage repository collaborators, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repositorycollaboratorconnection) or \"[Collaborators](https://docs.github.com/enterprise-server@3.8/rest/collaborators/collaborators)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "Permissions were changed for a collaborator on a repository.",
        "operationId": "member/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#member"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-member-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "member",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "member-removed": {
      "post": {
        "summary": "This event occurs when there is activity relating to collaborators in a repository. For more information, see \"[Adding outside collaborators to repositories in your organization](https://docs.github.com/enterprise-server@3.8/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization).\" For more information about the API to manage repository collaborators, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repositorycollaboratorconnection) or \"[Collaborators](https://docs.github.com/enterprise-server@3.8/rest/collaborators/collaborators)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A collaborator was removed from a repository.",
        "operationId": "member/removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#member"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-member-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "member",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "membership-added": {
      "post": {
        "summary": "This event occurs when there is activity relating to team membership. For more information, see \"[About teams](https://docs.github.com/enterprise-server@3.8/organizations/organizing-members-into-teams/about-teams).\" For more information about the APIs to manage team memberships, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#team) or \"[Team members](https://docs.github.com/enterprise-server@3.8/rest/teams/members)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "An organization member was added to a team.",
        "operationId": "membership/added",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#membership"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-membership-added"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "membership",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "membership-removed": {
      "post": {
        "summary": "This event occurs when there is activity relating to team membership. For more information, see \"[About teams](https://docs.github.com/enterprise-server@3.8/organizations/organizing-members-into-teams/about-teams).\" For more information about the API to manage team memberships, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#team) or \"[Team members](https://docs.github.com/enterprise-server@3.8/rest/teams/members)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "An organization member was removed from a team.",
        "operationId": "membership/removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#membership"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-membership-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "membership",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "meta-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a webhook itself.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Meta\" app permission.",
        "description": "The webhook was deleted.",
        "operationId": "meta/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#meta"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-meta-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "meta",
          "supported-webhook-types": [
            "marketplace",
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-closed": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-server@3.8/issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-server@3.8/rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was closed.",
        "operationId": "milestone/closed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-server@3.8/issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-server@3.8/rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was created.",
        "operationId": "milestone/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-server@3.8/issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-server@3.8/rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was deleted.",
        "operationId": "milestone/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-server@3.8/issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-server@3.8/rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was edited.",
        "operationId": "milestone/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-opened": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-server@3.8/issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-server@3.8/rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was opened.",
        "operationId": "milestone/opened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-opened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "organization-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-server@3.8/organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-server@3.8/rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "An organization was deleted.",
        "operationId": "organization/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "organization-member-added": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-server@3.8/organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-server@3.8/rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A member accepted an invitation to join an organization.",
        "operationId": "organization/member-added",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-member-added"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "organization-member-invited": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-server@3.8/organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-server@3.8/rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A member was invited to join the organization.",
        "operationId": "organization/member-invited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-member-invited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "organization-member-removed": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-server@3.8/organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-server@3.8/rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A member was removed from the organization.",
        "operationId": "organization/member-removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-member-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "organization-renamed": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-server@3.8/organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-server@3.8/rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "The name of an organization was changed.",
        "operationId": "organization/renamed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-renamed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "package-published": {
      "post": {
        "summary": "This event occurs when there is activity relating to GitHub Packages. For more information, see \"[Introduction to GitHub Packages](https://docs.github.com/enterprise-server@3.8/packages/learn-github-packages/introduction-to-github-packages).\" For information about the APIs to manage GitHub Packages, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#package) or \"[Packages](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the \"Packages\" repository permission.",
        "description": "A package was published to a registry.",
        "operationId": "package/published",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#package"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-package-published"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "package",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "package-updated": {
      "post": {
        "summary": "This event occurs when there is activity relating to GitHub Packages. For more information, see \"[Introduction to GitHub Packages](https://docs.github.com/enterprise-server@3.8/packages/learn-github-packages/introduction-to-github-packages).\" For information about the APIs to manage GitHub Packages, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#package) or \"[Packages](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the \"Packages\" repository permission.",
        "description": "A previously published package was updated.",
        "operationId": "package/updated",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#package"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-package-updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "package",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "page-build": {
      "post": {
        "summary": "This event occurs when there is an attempted build of a GitHub Pages site. This event occurs regardless of whether the build is successful. For more information, see \"[Configuring a publishing source for your GitHub Pages site](https://docs.github.com/enterprise-server@3.8/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site).\" For information about the API to manage GitHub Pages, see \"[Pages](https://docs.github.com/enterprise-server@3.8/rest/pages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pages\" repository permission.",
        "operationId": "page-build",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#page-build"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-page-build"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "page-build",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "ping": {
      "post": {
        "summary": "This event occurs when you create a new webhook. The ping event is a confirmation from GitHub that you configured the webhook correctly.",
        "operationId": "ping",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#ping"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-ping"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/ping"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-ping-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/ping-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "ping",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app",
            "business",
            "marketplace"
          ]
        }
      }
    },
    "project-card-converted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A note in a classic project was converted to an issue.",
        "operationId": "project-card/converted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-converted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-card-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A card was added to a classic project.",
        "operationId": "project-card/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-card-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A card on a classic project was deleted.",
        "operationId": "project-card/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-card-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A note on a classic project was edited.",
        "operationId": "project-card/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-card-moved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A card on a classic project was moved to another column or to another position in its column.",
        "operationId": "project-card/moved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-moved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-closed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A classic project was closed.",
        "operationId": "project/closed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-column-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a column on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a card on a project, use the `project` and `project_card` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A column was added to a classic project.",
        "operationId": "project-column/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-column"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-column-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-column",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-column-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a column on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a card on a project, use the `project` and `project_card` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A column was deleted from a classic project.",
        "operationId": "project-column/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-column"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-column-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-column",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-column-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a column on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a card on a project, use the `project` and `project_card` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "The name of a column on a classic project was changed.",
        "operationId": "project-column/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-column"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-column-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-column",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-column-moved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a column on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a card on a project, use the `project` and `project_card` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A column was moved to a new position on a classic project.",
        "operationId": "project-column/moved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-column"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-column-moved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-column",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A classic project was created.",
        "operationId": "project/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A classic project was deleted.",
        "operationId": "project/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "The name or description of a classic project was changed.",
        "operationId": "project/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-server@3.8/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-server@3.8/rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A classic project was closed.",
        "operationId": "project/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "projects-v2-item-archived": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-server@3.8/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "An item on an organization project was archived. For more information, see \"[Archiving items from your project](https://docs.github.com/enterprise-server@3.8/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project).\"",
        "operationId": "projects-v2-item/archived",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-archived"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-converted": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-server@3.8/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "A draft issue in an organization project was converted to an issue.",
        "operationId": "projects-v2-item/converted",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-converted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-server@3.8/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "An item was added to a project in the organization.",
        "operationId": "projects-v2-item/created",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-server@3.8/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "An item was deleted from a project in the organization.",
        "operationId": "projects-v2-item/deleted",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-server@3.8/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "The values or state of an item in an organization project were changed. For example, the value of a field was updated, the body of a draft issue was changed, or a draft issue was converted to an issue.",
        "operationId": "projects-v2-item/edited",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-reordered": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-server@3.8/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "The position of an item in an organization project was changed. For example, an item was moved above or below another item in the table or board layout.",
        "operationId": "projects-v2-item/reordered",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-reordered"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-restored": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-server@3.8/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "An archived item on an organization project was restored from the archive. For more information, see \"[Archiving items from your project](https://docs.github.com/enterprise-server@3.8/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project).\"",
        "operationId": "projects-v2-item/restored",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-restored"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "public": {
      "post": {
        "summary": "This event occurs when repository visibility changes from private to public. For more information, see \"[Setting repository visibility](https://docs.github.com/enterprise-server@3.8/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/setting-repository-visibility).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "operationId": "public",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#public"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-public"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "public",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-assigned": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was assigned to a user.",
        "operationId": "pull-request/assigned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-assigned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-auto-merge-disabled": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Auto merge was disabled for a pull request. For more information, see \"[Automatically merging a pull request](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request).\"",
        "operationId": "pull-request/auto-merge-disabled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-auto-merge-disabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-auto-merge-enabled": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Auto merge was enabled for a pull request. For more information, see \"[Automatically merging a pull request](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request).\"",
        "operationId": "pull-request/auto-merge-enabled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-auto-merge-enabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-closed": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was closed. If `merged` is false in the webhook payload, the pull request was closed with unmerged commits. If `merged` is true in the webhook payload, the pull request was merged.",
        "operationId": "pull-request/closed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-converted-to-draft": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was converted to a draft. For more information, see \"[Changing the stage of a pull request](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request).\"",
        "operationId": "pull-request/converted-to-draft",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-converted-to-draft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-demilestoned": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was removed from a milestone.",
        "operationId": "pull-request/demilestoned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-demilestoned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-edited": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "The title or body of a pull request was edited.",
        "operationId": "pull-request/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-labeled": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A label was added to a pull request.",
        "operationId": "pull-request/labeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-labeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-locked": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Conversation on a pull request was locked. For more information, see \"[Locking conversations](https://docs.github.com/enterprise-server@3.8/communities/moderating-comments-and-conversations/locking-conversations).\"",
        "operationId": "pull-request/locked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-locked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-milestoned": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was added to a milestone.",
        "operationId": "pull-request/milestoned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-milestoned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-opened": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was created",
        "operationId": "pull-request/opened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-opened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-ready-for-review": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A draft pull request was marked as ready for review. For more information, see \"[Changing the stage of a pull request](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request).\"",
        "operationId": "pull-request/ready-for-review",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-ready-for-review"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-reopened": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments,or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A previously closed pull request was reopened.",
        "operationId": "pull-request/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-comment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review comment. A pull request review comment is a comment on a pull request's diff. For more information, see \"[Commenting on a pull request](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request).\" For information about the APIs to manage pull request review comments, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequestreviewcomment) or \"[Pull request review comments](https://docs.github.com/enterprise-server@3.8/rest/pulls/comments)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request comments, or pull request review threads, use the `pull_request_review`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A comment on a pull request diff was created.",
        "operationId": "pull-request-review-comment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-comment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-comment-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review comment. A pull request review comment is a comment on a pull request's diff. For more information, see \"[Commenting on a pull request](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request).\" For information about the APIs to manage pull request review comments, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequestreviewcomment) or \"[Pull request review comments](https://docs.github.com/enterprise-server@3.8/rest/pulls/comments)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request comments, or pull request review threads, use the `pull_request_review`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A comment on a pull request diff was deleted.",
        "operationId": "pull-request-review-comment/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-comment-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-comment-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review comment. A pull request review comment is a comment on a pull request's diff. For more information, see \"[Commenting on a pull request](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request).\" For information about the APIs to manage pull request review comments, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequestreviewcomment) or \"[Pull request review comments](https://docs.github.com/enterprise-server@3.8/rest/pulls/comments)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request comments, or pull request review threads, use the `pull_request_review`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "The content of a comment on a pull request diff was changed.",
        "operationId": "pull-request-review-comment/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-comment-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-dismissed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review. A pull request review is a group of pull request review comments in addition to a body comment and a state. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request reviews, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequestreview) or \"[Pull request reviews](https://docs.github.com/enterprise-server@3.8/rest/pulls/reviews)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A review on a pull request was dismissed.",
        "operationId": "pull-request-review/dismissed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-dismissed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review. A pull request review is a group of pull request review comments in addition to a body comment and a state. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request reviews, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequestreview) or \"[Pull request reviews](https://docs.github.com/enterprise-server@3.8/rest/pulls/reviews)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "The body comment on a pull request review was edited.",
        "operationId": "pull-request-review/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-request-removed": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A request for review by a person or team was removed from a pull request.",
        "operationId": "pull-request/review-request-removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-request-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-requested": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Review by a person or team was requested for a pull request. For more information, see \"[Requesting a pull request review](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review).\"",
        "operationId": "pull-request/review-requested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-requested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-submitted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review. A pull request review is a group of pull request review comments in addition to a body comment and a state. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request reviews, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequestreview) or \"[Pull request reviews](https://docs.github.com/enterprise-server@3.8/rest/pulls/reviews)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A review on a pull request was submitted.",
        "operationId": "pull-request-review/submitted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-submitted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-thread-resolved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment thread on a pull request. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request review comment threads, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequestreviewthread) or \"[Pull request reviews](https://docs.github.com/enterprise-server@3.8/rest/pulls/reviews)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request reviews, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A comment thread on a pull request was marked as resolved.",
        "operationId": "pull-request-review-thread/resolved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-thread"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-thread-resolved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-thread",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-thread-unresolved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment thread on a pull request. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request reviews, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequestreviewthread) or \"[Pull request review comments](https://docs.github.com/enterprise-server@3.8/rest/pulls/comments)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request reviews, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A previously resolved comment thread on a pull request was marked as unresolved.",
        "operationId": "pull-request-review-thread/unresolved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-thread"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-thread-unresolved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-thread",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-synchronize": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request's head branch was updated. For example, the head branch was updated from the base branch or new commits were pushed to the head branch.",
        "operationId": "pull-request/synchronize",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-synchronize"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-unassigned": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A user was unassigned from a pull request.",
        "operationId": "pull-request/unassigned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-unassigned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-unlabeled": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A label was removed from a pull request.",
        "operationId": "pull-request/unlabeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-unlabeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-unlocked": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-server@3.8/rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Conversation on a pull request was unlocked. For more information, see \"[Locking conversations](https://docs.github.com/enterprise-server@3.8/communities/moderating-comments-and-conversations/locking-conversations).\"",
        "operationId": "pull-request/unlocked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-unlocked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "push": {
      "post": {
        "summary": "This event occurs when a commit or tag is pushed.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.\n\n**Note**: An event will not be created when more than three tags are pushed at once.",
        "operationId": "push",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-push"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "push",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "registry-package-published": {
      "post": {
        "summary": "This event occurs when there is activity relating to GitHub Packages. For more information, see \"[Introduction to GitHub Packages](https://docs.github.com/enterprise-server@3.8/packages/learn-github-packages/introduction-to-github-packages).\" For information about the APIs to manage GitHub Packages, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#package) or \"[Packages](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the \"Packages\" repository permission.\n\n**Note**: GitHub recommends that you use the newer `package` event instead.",
        "description": "A package was published to a registry.",
        "operationId": "registry-package/published",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#registry-package"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-registry-package-published"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "registry-package",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "registry-package-updated": {
      "post": {
        "summary": "This event occurs when there is activity relating to GitHub Packages. For more information, see \"[Introduction to GitHub Packages](https://docs.github.com/enterprise-server@3.8/packages/learn-github-packages/introduction-to-github-packages).\" For information about the APIs to manage GitHub Packages, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#package) or \"[Packages](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the \"Packages\" repository permission.\n\n**Note**: GitHub recommends that you use the newer `package` event instead",
        "description": "A package that was previously published to a registry was updated.",
        "operationId": "registry-package/updated",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#registry-package"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-registry-package-updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "registry-package",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-server@3.8/repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-server@3.8/rest/releases)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A draft was saved, or a release or pre-release was published without previously being saved as a draft.",
        "operationId": "release/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-server@3.8/repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release, pre-release, or draft release was deleted.",
        "operationId": "release/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-server@3.8/repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "The details of a release, pre-release, or draft release were edited. For more information, see \"[Managing releases in a repository](https://docs.github.com/enterprise-server@3.8/repositories/releasing-projects-on-github/managing-releases-in-a-repository#editing-a-release).\"",
        "operationId": "release/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-prereleased": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-server@3.8/repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release was created and identified as a pre-release. A pre-release is a release that is not ready for production and may be unstable.",
        "operationId": "release/prereleased",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-prereleased"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-published": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-server@3.8/repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release, pre-release, or draft of a release was published.",
        "operationId": "release/published",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-published"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-released": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-server@3.8/repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release was published, or a pre-release was changed to a release.",
        "operationId": "release/released",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-released"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-unpublished": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-server@3.8/repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-server@3.8/rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release or pre-release was unpublished.",
        "operationId": "release/unpublished",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-unpublished"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-anonymous-access-disabled": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Someone disabled anonymous Git read access to the repository. For more information, see \"[Enabling anonymous Git read access for a repository](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/enabling-anonymous-git-read-access-for-a-repository).\"",
        "operationId": "repository/anonymous-access-disabled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#enterprise"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-anonymous-access-disabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "app",
            "business",
            "organization",
            "repository"
          ]
        }
      }
    },
    "repository-anonymous-access-enabled": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Someone enabled anonymous Git read access to the repository. For more information, see \"[Enabling anonymous Git read access for a repository](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/enabling-anonymous-git-read-access-for-a-repository).\"",
        "operationId": "repository/anonymous-access-enabled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#enterprise"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-anonymous-access-enabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "app",
            "business",
            "organization",
            "repository"
          ]
        }
      }
    },
    "repository-archived": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A repository was archived.",
        "operationId": "repository/archived",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-archived"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A repository was created.",
        "operationId": "repository/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A repository was deleted. GitHub Apps and repository webhooks will not receive this event.",
        "operationId": "repository/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-dispatch-sample.collected": {
      "post": {
        "summary": "This event occurs when a GitHub App sends a `POST` request to `/repos/{owner}/{repo}/dispatches`. For more information, see [the REST API documentation for creating a repository dispatch event](https://docs.github.com/enterprise-server@3.8/rest/repos/repos#create-a-repository-dispatch-event).\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "The `event_type` that was specified in the `POST /repos/{owner}/{repo}/dispatches` request body.",
        "operationId": "repository-dispatch/sample.collected",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-dispatch"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-dispatch-sample"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-dispatch",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "repository-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "The topics, default branch, description, or homepage of a repository was changed.",
        "operationId": "repository/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-privatized": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "The visibility of a repository was changed to `private`.",
        "operationId": "repository/privatized",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-privatized"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-publicized": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "The visibility of a repository was changed to `public`.",
        "operationId": "repository/publicized",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-publicized"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-renamed": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "The name of a repository was changed.",
        "operationId": "repository/renamed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-renamed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-transferred": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Ownership of the repository was transferred to a user or organization account. This event is only sent to the account where the ownership is transferred. To receive the `repository.transferred` event, the new owner account must have the GitHub App installed, and the App must be subscribed to \"Repository\" events.",
        "operationId": "repository/transferred",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-transferred"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-unarchived": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-server@3.8/repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-server@3.8/rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A previously archived repository was unarchived.",
        "operationId": "repository/unarchived",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-unarchived"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-vulnerability-alert-create": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security vulnerability alert in a repository.\n\n**Note**: This event is deprecated. Use the `dependabot_alert` event instead.",
        "description": "A repository vulnerability alert was created.",
        "operationId": "repository-vulnerability-alert/create",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-vulnerability-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-vulnerability-alert-create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-vulnerability-alert",
          "supported-webhook-types": [
            "repository",
            "organization"
          ]
        }
      }
    },
    "repository-vulnerability-alert-dismiss": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security vulnerability alert in a repository.\n\n**Note**: This event is deprecated. Use the `dependabot_alert` event instead.",
        "description": "A repository vulnerability alert was dismissed.",
        "operationId": "repository-vulnerability-alert/dismiss",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-vulnerability-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-vulnerability-alert-dismiss"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-vulnerability-alert",
          "supported-webhook-types": [
            "repository",
            "organization"
          ]
        }
      }
    },
    "repository-vulnerability-alert-reopen": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security vulnerability alert in a repository.\n\n**Note**: This event is deprecated. Use the `dependabot_alert` event instead.",
        "description": "A previously dismissed or resolved repository vulnerability alert was reopened.",
        "operationId": "repository-vulnerability-alert/reopen",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-vulnerability-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-vulnerability-alert-reopen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-vulnerability-alert",
          "supported-webhook-types": [
            "repository",
            "organization"
          ]
        }
      }
    },
    "repository-vulnerability-alert-resolve": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security vulnerability alert in a repository.\n\n**Note**: This event is deprecated. Use the `dependabot_alert` event instead.",
        "description": "A repository vulnerability alert was marked as resolved.",
        "operationId": "repository-vulnerability-alert/resolve",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-vulnerability-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-vulnerability-alert-resolve"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-vulnerability-alert",
          "supported-webhook-types": [
            "repository",
            "organization"
          ]
        }
      }
    },
    "secret-scanning-alert-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a secret scanning alert. For more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-server@3.8/code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-server@3.8/rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alert locations, use the `secret_scanning_alert_location` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A secret scanning alert was created.",
        "operationId": "secret-scanning-alert/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "secret-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "secret-scanning-alert-location-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to the locations of a secret in a secret scanning alert.\n\nFor more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-server@3.8/code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-server@3.8/rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alerts, use the `secret_scanning_alert` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A new instance of a previously detected secret was detected in a repository, and the location of the secret was added to the existing alert.",
        "operationId": "secret-scanning-alert-location/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret_scanning_alert_location"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-location-created"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/secret-scanning-alert-location-created"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-location-created-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/secret-scanning-alert-location-created-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "secret_scanning_alert_location",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "secret-scanning-alert-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to a secret scanning alert. For more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-server@3.8/code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-server@3.8/rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alert locations, use the `secret_scanning_alert_location` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A previously closed secret scanning alert was reopened.",
        "operationId": "secret-scanning-alert/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "secret-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "secret-scanning-alert-resolved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a secret scanning alert. For more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-server@3.8/code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-server@3.8/rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alert locations, use the `secret_scanning_alert_location` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A secret scanning alert was closed.",
        "operationId": "secret-scanning-alert/resolved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-resolved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "secret-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "secret-scanning-alert-revoked": {
      "post": {
        "summary": "This event occurs when there is activity relating to a secret scanning alert. For more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-server@3.8/code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-server@3.8/rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alert locations, use the `secret_scanning_alert_location` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A secret scanning alert was marked as revoked.",
        "operationId": "secret-scanning-alert/revoked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-revoked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "secret-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "security-advisory-published": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security advisory that was reviewed by GitHub. A GitHub-reviewed security advisory provides information about security-related vulnerabilities in software on GitHub. For more information about security advisories, see \"[About GitHub Security Advisories for repositories](https://docs.github.com/enterprise-server@3.8/code-security/repository-security-advisories/about-github-security-advisories-for-repositories).\" For information about the API to manage security advisories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#securityadvisory).\n\nGitHub Dependabot alerts are also powered by the security advisory dataset. For more information, see \"[About Dependabot alerts](https://docs.github.com/enterprise-server@3.8/code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\"",
        "description": "A security advisory was published to the GitHub community.",
        "operationId": "security-advisory/published",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#security-advisory"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-security-advisory-published"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "security-advisory",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "security-advisory-updated": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security advisory that was reviewed by GitHub. A GitHub-reviewed security advisory provides information about security-related vulnerabilities in software on GitHub. For more information about security advisories, see \"[About GitHub Security Advisories for repositories](https://docs.github.com/enterprise-server@3.8/code-security/repository-security-advisories/about-github-security-advisories-for-repositories).\" For information about the API to manage security advisories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#securityadvisory).\n\nGitHub Dependabot alerts are also powered by the security advisory dataset. For more information, see \"[About Dependabot alerts](https://docs.github.com/enterprise-server@3.8/code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\"",
        "description": "The metadata or description of a security advisory was changed, or the security advisory was withdrawn.",
        "operationId": "security-advisory/updated",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#security-advisory"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-security-advisory-updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "security-advisory",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "security-advisory-withdrawn": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security advisory that was reviewed by GitHub. A GitHub-reviewed security advisory provides information about security-related vulnerabilities in software on GitHub. For more information about security advisories, see \"[About GitHub Security Advisories for repositories](https://docs.github.com/enterprise-server@3.8/code-security/repository-security-advisories/about-github-security-advisories-for-repositories).\" For information about the API to manage security advisories, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#securityadvisory).\n\nGitHub Dependabot alerts are also powered by the security advisory dataset. For more information, see \"[About Dependabot alerts](https://docs.github.com/enterprise-server@3.8/code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\"",
        "description": "A previously published security advisory was withdrawn.",
        "operationId": "security-advisory/withdrawn",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#security-advisory"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-security-advisory-withdrawn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "security-advisory",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "security-and-analysis": {
      "post": {
        "summary": "This event occurs when code security and analysis features are enabled or disabled for a repository. For more information, see \"[GitHub security features](https://docs.github.com/enterprise-server@3.8/code-security/getting-started/github-security-features).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" repository permission.",
        "operationId": "security-and-analysis",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#security-and-analysis"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-security-and-analysis"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "security-and-analysis",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "sponsorship-cancelled": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-server@3.8/sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-server@3.8/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsorship was cancelled and the last billing cycle has ended.\n\nThis event is only sent when a recurring (monthly) sponsorship is cancelled; it is not sent for one-time sponsorships.",
        "operationId": "sponsorship/cancelled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-cancelled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-server@3.8/sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-server@3.8/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsor created a sponsorship for a sponsored account. This event occurs once the payment is successfully processed.",
        "operationId": "sponsorship/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-server@3.8/sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-server@3.8/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A monthly sponsor changed who can see their sponsorship. If you recognize your sponsors publicly, you may want to update your sponsor recognition to reflect the change when this event occurs.",
        "operationId": "sponsorship/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-pending-cancellation": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-server@3.8/sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-server@3.8/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsor scheduled a cancellation for their sponsorship. The cancellation will become effective on their next billing date.\n\nThis event is only sent when a recurring (monthly) sponsorship is cancelled; it is not sent for one-time sponsorships.",
        "operationId": "sponsorship/pending-cancellation",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-pending-cancellation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-pending-tier-change": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-server@3.8/sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-server@3.8/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsor scheduled a downgrade to a lower sponsorship tier. The new tier will become effective on their next billing date.",
        "operationId": "sponsorship/pending-tier-change",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-pending-tier-change"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-tier-changed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-server@3.8/sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-server@3.8/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsor changed the tier of their sponsorship and the change has taken effect. If a sponsor upgraded their tier, the change took effect immediately. If a sponsor downgraded their tier, the change took effect at the beginning of the sponsor's next billing cycle.",
        "operationId": "sponsorship/tier-changed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-tier-changed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "star-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to repository stars. For more information about stars, see \"[Saving repositories with stars](https://docs.github.com/enterprise-server@3.8/get-started/exploring-projects-on-github/saving-repositories-with-stars).\" For information about the APIs to manage stars, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#starredrepositoryconnection) or \"[Starring](https://docs.github.com/enterprise-server@3.8/rest/activity/starring)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Someone starred a repository.",
        "operationId": "star/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#star"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-star-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "star",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "star-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to repository stars. For more information about stars, see \"[Saving repositories with stars](https://docs.github.com/enterprise-server@3.8/get-started/exploring-projects-on-github/saving-repositories-with-stars).\" For information about the APIs to manage stars, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#starredrepositoryconnection) or \"[Starring](https://docs.github.com/enterprise-server@3.8/rest/activity/starring)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Someone unstarred the repository.",
        "operationId": "star/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#star"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-star-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "star",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "status": {
      "post": {
        "summary": "This event occurs when the status of a Git commit changes. For example, commits can be marked as `error`, `failure`, `pending`, or `success`. For more information, see \"[About status checks](https://docs.github.com/enterprise-server@3.8/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks).\" For information about the APIs to manage commit statuses, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#status) or \"[Statuses](https://docs.github.com/enterprise-server@3.8/rest/reference/commits#commit-statuses)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Commit statuses\" repository permission.",
        "operationId": "status",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#status"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "status",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "team-add": {
      "post": {
        "summary": "This event occurs when a team is added to a repository.\nFor more information, see \"[Managing teams and people with access to your repository](https://docs.github.com/enterprise-server@3.8/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository).\"\n\nFor activity relating to teams, see the `teams` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "operationId": "team-add",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team-add"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-add"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team-add",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "team-added-to-repository": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-server@3.8/organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A team was granted access to a repository.",
        "operationId": "team/added-to-repository",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-added-to-repository"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "team-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-server@3.8/organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A team was created.",
        "operationId": "team/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "team-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-server@3.8/organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A team was deleted.",
        "operationId": "team/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "team-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-server@3.8/organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "The name, description, or visibility of a team was changed.",
        "operationId": "team/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "team-removed-from-repository": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-server@3.8/organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A team's access to a repository was removed.",
        "operationId": "team/removed-from-repository",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-removed-from-repository"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "user-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to user accounts in an enterprise.",
        "description": "A user account was added to the enterprise.",
        "operationId": "user/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#user"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-user-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "user",
          "supported-webhook-types": [
            "business"
          ]
        }
      }
    },
    "user-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to user accounts in an enterprise.",
        "description": "A user account was removed from the enterprise.",
        "operationId": "user/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#user"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-user-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "user",
          "supported-webhook-types": [
            "business"
          ]
        }
      }
    },
    "watch-started": {
      "post": {
        "summary": "This event occurs when there is activity relating to watching, or subscribing to, a repository. For more information about watching, see \"[Managing your subscriptions](https://docs.github.com/enterprise-server@3.8/account-and-profile/managing-subscriptions-and-notifications-on-github/managing-subscriptions-for-activity-on-github/managing-your-subscriptions).\" For information about the APIs to manage watching, see \"[Watching](https://docs.github.com/enterprise-server@3.8/rest/activity/watching)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Someone started watching the repository.",
        "operationId": "watch/started",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#watch"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-watch-started"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "watch",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-dispatch": {
      "post": {
        "summary": "This event occurs when a GitHub Actions workflow is manually triggered. For more information, see \"[Manually running a workflow](https://docs.github.com/enterprise-server@3.8/actions/managing-workflow-runs/manually-running-a-workflow).\"\n\nFor activity relating to workflow runs, use the `workflow_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "operationId": "workflow-dispatch",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-dispatch"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-dispatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-dispatch",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "workflow-job-completed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a job in a GitHub Actions workflow. For more information, see \"[Using jobs in a workflow](https://docs.github.com/enterprise-server@3.8/actions/using-jobs/using-jobs-in-a-workflow).\" For information about the API to manage workflow jobs, see \"[Workflow jobs](https://docs.github.com/enterprise-server@3.8/rest/actions/workflow-jobs)\" in the REST API documentation.\n\nFor activity relating to a workflow run instead of a job in a workflow run, use the `workflow_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A job in a workflow run finished. This event occurs when a job in a workflow is completed, regardless of whether the job was successful or unsuccessful.",
        "operationId": "workflow-job/completed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-job"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-job-completed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-job",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-job-in-progress": {
      "post": {
        "summary": "This event occurs when there is activity relating to a job in a GitHub Actions workflow. For more information, see \"[Using jobs in a workflow](https://docs.github.com/enterprise-server@3.8/actions/using-jobs/using-jobs-in-a-workflow).\" For information about the API to manage workflow jobs, see \"[Workflow jobs](https://docs.github.com/enterprise-server@3.8/rest/actions/workflow-jobs)\" in the REST API documentation.\n\nFor activity relating to a workflow run instead of a job in a workflow run, use the `workflow_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A job in a workflow run started processing on a runner.",
        "operationId": "workflow-job/in-progress",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-job"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-job-in-progress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-job",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-job-queued": {
      "post": {
        "summary": "This event occurs when there is activity relating to a job in a GitHub Actions workflow. For more information, see \"[Using jobs in a workflow](https://docs.github.com/enterprise-server@3.8/actions/using-jobs/using-jobs-in-a-workflow).\" For information about the API to manage workflow jobs, see \"[Workflow jobs](https://docs.github.com/enterprise-server@3.8/rest/actions/workflow-jobs)\" in the REST API documentation.\n\nFor activity relating to a workflow run instead of a job in a workflow run, use the `workflow_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A job in a workflow run was created.",
        "operationId": "workflow-job/queued",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-job"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-job-queued"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-job",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-job-waiting": {
      "post": {
        "summary": "This event occurs when there is activity relating to a job in a GitHub Actions workflow.\n\nFor more information, see \"[Using jobs in a workflow](https://docs.github.com/enterprise-server@3.8/actions/using-jobs/using-jobs-in-a-workflow).\" For information about the API to manage workflow jobs, see [the REST API documentation](https://docs.github.com/enterprise-server@3.8/rest/actions/workflow-jobs).\n\nFor activity relating to a workflow run instead of a job in a workflow run, see the `workflow_run` event.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the Actions metadata permission.",
        "description": "A job in a workflow run was created and is waiting for approvals.",
        "operationId": "workflow-job/waiting",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-job"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-job-waiting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-job",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-run-completed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a run of a GitHub Actions workflow. For more information, see \"[About workflows](https://docs.github.com/enterprise-server@3.8/actions/using-workflows/about-workflows).\" For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#workflowrun) or \"[Workflow runs](https://docs.github.com/enterprise-server@3.8/rest/actions/workflow-runs)\" in the REST API documentation.\n\nFor activity relating to a job in a workflow run, use the `workflow_job` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A workflow run finished. This event occurs when a workflow run is completed, regardless of whether the workflow was successful or unsuccessful.",
        "operationId": "workflow-run/completed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-run-completed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-run",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-run-in-progress": {
      "post": {
        "summary": "This event occurs when there is activity relating to a run of a GitHub Actions workflow. For more information, see \"[About workflows](https://docs.github.com/enterprise-server@3.8/actions/using-workflows/about-workflows).\" For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#workflowrun) or \"[Workflow runs](https://docs.github.com/enterprise-server@3.8/rest/actions/workflow-runs)\" in the REST API documentation.\n\nFor activity relating to a job in a workflow run, use the `workflow_job` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A workflow run started processing on a runner.",
        "operationId": "workflow-run/in-progress",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-run-in-progress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-run",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-run-requested": {
      "post": {
        "summary": "This event occurs when there is activity relating to a run of a GitHub Actions workflow. For more information, see \"[About workflows](https://docs.github.com/enterprise-server@3.8/actions/using-workflows/about-workflows).\" For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/enterprise-server@3.8/graphql/reference/objects#workflowrun) or \"[Workflow runs](https://docs.github.com/enterprise-server@3.8/rest/actions/workflow-runs)\" in the REST API documentation.\n\nFor activity relating to a job in a workflow run, use the `workflow_job` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A workflow run was triggered.",
        "operationId": "workflow-run/requested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-server@3.8/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Version",
            "in": "header",
            "example": "3.1.9",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Enterprise-Host",
            "in": "header",
            "example": "ghes.github.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-run-requested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-run",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    }
  },
  "components": {
    "parameters": {
      "per-page": {
        "name": "per_page",
        "description": "The number of results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        }
      },
      "page": {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "username": {
        "name": "username",
        "description": "The handle for the GitHub user account.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "since": {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "installation-id": {
        "name": "installation_id",
        "description": "The unique identifier of the installation.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "examples": {
          "default": {
            "value": 1
          }
        }
      },
      "client-id": {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of the GitHub app.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "default": {
            "value": "Iv1.8a61f9b3a7aba766"
          }
        }
      },
      "oauth-client-id": {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of the OAuth app.",
        "schema": {
          "type": "string"
        },
        "examples": {
          "default": {
            "value": "abcde12345fghij67890"
          }
        }
      },
      "authorization-id": {
        "name": "authorization_id",
        "description": "The unique identifier of the authorization.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "enterprise": {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enterprise-security-product": {
        "name": "security_product",
        "in": "path",
        "description": "The security feature to enable or disable.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "advanced_security",
            "secret_scanning",
            "secret_scanning_push_protection"
          ]
        }
      },
      "enterprise-security-product-enablement": {
        "name": "enablement",
        "in": "path",
        "description": "The action to take.\n\n`enable_all` means to enable the specified security feature for all repositories in the enterprise.\n`disable_all` means to disable the specified security feature for all repositories in the enterprise.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "enable_all",
            "disable_all"
          ]
        }
      },
      "org": {
        "name": "org",
        "description": "The organization name. The name is not case sensitive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "security-product": {
        "name": "security_product",
        "in": "path",
        "description": "The security feature to enable or disable.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "dependency_graph",
            "dependabot_alerts",
            "dependabot_security_updates",
            "advanced_security",
            "secret_scanning",
            "secret_scanning_push_protection"
          ]
        }
      },
      "org-security-product-enablement": {
        "name": "enablement",
        "in": "path",
        "description": "The action to take.\n\n`enable_all` means to enable the specified security feature for all repositories in the organization.\n`disable_all` means to disable the specified security feature for all repositories in the organization.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "enable_all",
            "disable_all"
          ]
        }
      },
      "owner": {
        "name": "owner",
        "description": "The account owner of the repository. The name is not case sensitive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repo": {
        "name": "repo",
        "description": "The name of the repository. The name is not case sensitive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "job-id": {
        "name": "job_id",
        "description": "The unique identifier of the job.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "run-id": {
        "name": "run_id",
        "description": "The unique identifier of the workflow run.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "attempt-number": {
        "name": "attempt_number",
        "description": "The attempt number of the workflow run.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "branch": {
        "name": "branch",
        "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL API](https://docs.github.com/enterprise-server@3.8/graphql).",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true
      },
      "pull-number": {
        "name": "pull_number",
        "description": "The number that identifies the pull request.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "schemas": {
      "authorization": {
        "title": "Authorization",
        "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "scopes": {
            "description": "A list of scopes that this authorization is in.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "token": {
            "type": "string"
          },
          "token_last_eight": {
            "type": "string",
            "nullable": true
          },
          "hashed_token": {
            "type": "string",
            "nullable": true
          },
          "app": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "client_id",
              "name",
              "url"
            ]
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "note_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "installation": {
            "$ref": "#/components/schemas/nullable-scoped-installation"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "app",
          "id",
          "note",
          "note_url",
          "scopes",
          "token",
          "hashed_token",
          "token_last_eight",
          "fingerprint",
          "url",
          "created_at",
          "updated_at",
          "expires_at"
        ]
      },
      "installation": {
        "title": "Installation",
        "description": "Installation",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the installation.",
            "type": "integer",
            "example": 1
          },
          "account": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/simple-user"
              },
              {
                "$ref": "#/components/schemas/enterprise"
              }
            ]
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          },
          "access_tokens_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/installations/1/access_tokens"
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/installation/repositories"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/organizations/github/settings/installations/1"
          },
          "app_id": {
            "type": "integer",
            "example": 1
          },
          "target_id": {
            "description": "The ID of the user or organization this token is being scoped to.",
            "type": "integer"
          },
          "target_type": {
            "type": "string",
            "example": "Organization"
          },
          "permissions": {
            "$ref": "#/components/schemas/app-permissions"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "single_file_name": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "example": true
          },
          "single_file_paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ]
          },
          "app_slug": {
            "type": "string",
            "example": "github-actions"
          },
          "suspended_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "example": "\"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com\"",
            "nullable": true
          }
        },
        "required": [
          "id",
          "app_id",
          "app_slug",
          "target_id",
          "target_type",
          "single_file_name",
          "repository_selection",
          "access_tokens_url",
          "html_url",
          "repositories_url",
          "events",
          "account",
          "permissions",
          "created_at",
          "updated_at",
          "suspended_by",
          "suspended_at"
        ]
      },
      "app-permissions": {
        "title": "App Permissions",
        "type": "object",
        "description": "The permissions granted to the user-to-server access token.",
        "properties": {
          "actions": {
            "type": "string",
            "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
            "enum": [
              "read",
              "write"
            ]
          },
          "administration": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
            "enum": [
              "read",
              "write"
            ]
          },
          "checks": {
            "type": "string",
            "description": "The level of permission to grant the access token for checks on code.",
            "enum": [
              "read",
              "write"
            ]
          },
          "contents": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
            "enum": [
              "read",
              "write"
            ]
          },
          "deployments": {
            "type": "string",
            "description": "The level of permission to grant the access token for deployments and deployment statuses.",
            "enum": [
              "read",
              "write"
            ]
          },
          "environments": {
            "type": "string",
            "description": "The level of permission to grant the access token for managing repository environments.",
            "enum": [
              "read",
              "write"
            ]
          },
          "issues": {
            "type": "string",
            "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
            "enum": [
              "read",
              "write"
            ]
          },
          "metadata": {
            "type": "string",
            "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
            "enum": [
              "read",
              "write"
            ]
          },
          "packages": {
            "type": "string",
            "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
            "enum": [
              "read",
              "write"
            ]
          },
          "pages": {
            "type": "string",
            "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
            "enum": [
              "read",
              "write"
            ]
          },
          "pull_requests": {
            "type": "string",
            "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
            "enum": [
              "read",
              "write"
            ]
          },
          "repository_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
            "enum": [
              "read",
              "write"
            ]
          },
          "repository_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
            "enum": [
              "read",
              "write",
              "admin"
            ]
          },
          "secret_scanning_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
            "enum": [
              "read",
              "write"
            ]
          },
          "secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository secrets.",
            "enum": [
              "read",
              "write"
            ]
          },
          "security_events": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
            "enum": [
              "read",
              "write"
            ]
          },
          "single_file": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage just a single file.",
            "enum": [
              "read",
              "write"
            ]
          },
          "statuses": {
            "type": "string",
            "description": "The level of permission to grant the access token for commit statuses.",
            "enum": [
              "read",
              "write"
            ]
          },
          "vulnerability_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage Dependabot alerts.",
            "enum": [
              "read",
              "write"
            ]
          },
          "workflows": {
            "type": "string",
            "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
            "enum": [
              "write"
            ]
          },
          "members": {
            "type": "string",
            "description": "The level of permission to grant the access token for organization teams and members.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_administration": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage access to an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_announcement_banners": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage announcement banners for an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_personal_access_tokens": {
            "type": "string",
            "description": "The level of permission to grant the access token for viewing and managing fine-grained personal access token requests to an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_personal_access_token_requests": {
            "type": "string",
            "description": "The level of permission to grant the access token for viewing and managing fine-grained personal access tokens that have been approved by an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_plan": {
            "type": "string",
            "description": "The level of permission to grant the access token for viewing an organization's plan.",
            "enum": [
              "read"
            ]
          },
          "organization_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
            "enum": [
              "read",
              "write",
              "admin"
            ]
          },
          "organization_packages": {
            "type": "string",
            "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization secrets.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_self_hosted_runners": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_user_blocking": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
            "enum": [
              "read",
              "write"
            ]
          },
          "team_discussions": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage team discussions and related comments.",
            "enum": [
              "read",
              "write"
            ]
          }
        },
        "example": {
          "contents": "read",
          "issues": "read",
          "deployments": "write",
          "single_file": "read"
        }
      },
      "installation-token": {
        "title": "Installation Token",
        "description": "Authentication token for a GitHub App installed on a user or org.",
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "expires_at": {
            "type": "string"
          },
          "permissions": {
            "$ref": "#/components/schemas/app-permissions"
          },
          "repository_selection": {
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/repository"
            }
          },
          "single_file": {
            "type": "string",
            "example": "README.md"
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "example": true
          },
          "single_file_paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ]
          }
        },
        "required": [
          "token",
          "expires_at"
        ]
      },
      "enterprise-security-analysis-settings": {
        "title": "Enterprise Security Analysis Settings",
        "type": "object",
        "properties": {
          "dependabot_alerts_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "Whether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this\nenterprise."
          }
        },
        "required": [
          "advanced_security_enabled_for_new_repositories",
          "secret_scanning_enabled_for_new_repositories",
          "secret_scanning_push_protection_enabled_for_new_repositories"
        ]
      },
      "organization-custom-repository-role": {
        "title": "Organization Custom Repository Role",
        "description": "Custom repository roles created by organization administrators",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the custom role.",
            "type": "integer"
          },
          "name": {
            "description": "The name of the custom role.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "full-repository": {
        "title": "Full Repository",
        "description": "Full Repository",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1296269
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "type": "string",
            "example": "Hello-World"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "octocat",
              "atom",
              "electron",
              "API"
            ]
          },
          "has_issues": {
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "type": "boolean",
            "example": true
          },
          "has_discussions": {
            "type": "boolean",
            "example": true
          },
          "archived": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "type": "string",
            "example": "public"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "allow_rebase_merge": {
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "$ref": "#/components/schemas/nullable-repository"
          },
          "temp_clone_token": {
            "type": "string",
            "nullable": true
          },
          "allow_squash_merge": {
            "type": "boolean",
            "example": true
          },
          "allow_auto_merge": {
            "type": "boolean",
            "example": false
          },
          "delete_branch_on_merge": {
            "type": "boolean",
            "example": false
          },
          "allow_merge_commit": {
            "type": "boolean",
            "example": true
          },
          "allow_update_branch": {
            "type": "boolean",
            "example": true
          },
          "use_squash_pr_title_as_default": {
            "type": "boolean",
            "example": false
          },
          "squash_merge_commit_title": {
            "type": "string",
            "example": "PR_TITLE",
            "enum": [
              "PR_TITLE",
              "COMMIT_OR_PR_TITLE"
            ],
            "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
          },
          "squash_merge_commit_message": {
            "type": "string",
            "example": "PR_BODY",
            "enum": [
              "PR_BODY",
              "COMMIT_MESSAGES",
              "BLANK"
            ],
            "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
          },
          "merge_commit_title": {
            "type": "string",
            "example": "PR_TITLE",
            "enum": [
              "PR_TITLE",
              "MERGE_MESSAGE"
            ],
            "description": "The default value for a merge commit title.\n\n  - `PR_TITLE` - default to the pull request's title.\n  - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
          },
          "merge_commit_message": {
            "type": "string",
            "example": "PR_BODY",
            "enum": [
              "PR_BODY",
              "PR_TITLE",
              "BLANK"
            ],
            "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
          },
          "allow_forking": {
            "type": "boolean",
            "example": true
          },
          "web_commit_signoff_required": {
            "type": "boolean",
            "example": false
          },
          "subscribers_count": {
            "type": "integer",
            "example": 42
          },
          "network_count": {
            "type": "integer",
            "example": 0
          },
          "license": {
            "$ref": "#/components/schemas/nullable-license-simple"
          },
          "organization": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "parent": {
            "$ref": "#/components/schemas/repository"
          },
          "source": {
            "$ref": "#/components/schemas/repository"
          },
          "forks": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "anonymous_access_enabled": {
            "description": "Whether anonymous git access is allowed.",
            "default": true,
            "type": "boolean"
          },
          "code_of_conduct": {
            "$ref": "#/components/schemas/code-of-conduct-simple"
          },
          "security_and_analysis": {
            "$ref": "#/components/schemas/security-and-analysis"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "has_discussions",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at",
          "network_count",
          "subscribers_count"
        ]
      },
      "job": {
        "title": "Job",
        "description": "Information of a job execution in a workflow run",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the job.",
            "example": 21,
            "type": "integer"
          },
          "run_id": {
            "description": "The id of the associated workflow run.",
            "example": 5,
            "type": "integer"
          },
          "run_url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5"
          },
          "run_attempt": {
            "type": "integer",
            "description": "Attempt number of the associated workflow run, 1 for first attempt and higher if the workflow was re-run.",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDg6Q2hlY2tSdW40"
          },
          "head_sha": {
            "description": "The SHA of the commit that is being run.",
            "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d",
            "type": "string"
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/jobs/21"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/github/hello-world/runs/4",
            "nullable": true
          },
          "status": {
            "description": "The phase of the lifecycle that the job is currently in.",
            "example": "queued",
            "type": "string",
            "enum": [
              "queued",
              "in_progress",
              "completed"
            ]
          },
          "conclusion": {
            "description": "The outcome of the job.",
            "example": "success",
            "type": "string",
            "nullable": true,
            "enum": [
              "success",
              "failure",
              "neutral",
              "cancelled",
              "skipped",
              "timed_out",
              "action_required"
            ]
          },
          "started_at": {
            "description": "The time that the job started, in ISO 8601 format.",
            "example": "2019-08-08T08:00:00-07:00",
            "format": "date-time",
            "type": "string"
          },
          "completed_at": {
            "description": "The time that the job finished, in ISO 8601 format.",
            "example": "2019-08-08T08:00:00-07:00",
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "name": {
            "description": "The name of the job.",
            "example": "test-coverage",
            "type": "string"
          },
          "steps": {
            "description": "Steps in this job.",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "status",
                "conclusion",
                "number"
              ],
              "properties": {
                "status": {
                  "description": "The phase of the lifecycle that the job is currently in.",
                  "example": "queued",
                  "type": "string",
                  "enum": [
                    "queued",
                    "in_progress",
                    "completed"
                  ]
                },
                "conclusion": {
                  "description": "The outcome of the job.",
                  "example": "success",
                  "type": "string",
                  "nullable": true
                },
                "name": {
                  "description": "The name of the job.",
                  "example": "test-coverage",
                  "type": "string"
                },
                "number": {
                  "type": "integer",
                  "example": 1
                },
                "started_at": {
                  "description": "The time that the step started, in ISO 8601 format.",
                  "example": "2019-08-08T08:00:00-07:00",
                  "format": "date-time",
                  "type": "string",
                  "nullable": true
                },
                "completed_at": {
                  "description": "The time that the job finished, in ISO 8601 format.",
                  "example": "2019-08-08T08:00:00-07:00",
                  "format": "date-time",
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "check_run_url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/check-runs/4"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Labels for the workflow job. Specified by the \"runs_on\" attribute in the action's workflow file.",
            "example": [
              "self-hosted",
              "foo",
              "bar"
            ]
          },
          "runner_id": {
            "type": "integer",
            "nullable": true,
            "example": 1,
            "description": "The ID of the runner to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)"
          },
          "runner_name": {
            "type": "string",
            "nullable": true,
            "example": "my runner",
            "description": "The name of the runner to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)"
          },
          "runner_group_id": {
            "type": "integer",
            "nullable": true,
            "example": 2,
            "description": "The ID of the runner group to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)"
          },
          "runner_group_name": {
            "type": "string",
            "nullable": true,
            "example": "my runner group",
            "description": "The name of the runner group to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)"
          },
          "workflow_name": {
            "type": "string",
            "description": "The name of the workflow.",
            "nullable": true,
            "example": "Build"
          },
          "head_branch": {
            "type": "string",
            "description": "The name of the current branch.",
            "nullable": true,
            "example": "main"
          }
        },
        "required": [
          "id",
          "node_id",
          "run_id",
          "run_url",
          "head_sha",
          "workflow_name",
          "head_branch",
          "name",
          "url",
          "html_url",
          "status",
          "conclusion",
          "started_at",
          "completed_at",
          "check_run_url",
          "labels",
          "runner_id",
          "runner_name",
          "runner_group_id",
          "runner_group_name"
        ]
      },
      "team": {
        "title": "Team",
        "description": "Groups of organization members that gives permissions on specified repositories.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "privacy": {
            "type": "string"
          },
          "permission": {
            "type": "string"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              }
            },
            "required": [
              "pull",
              "triage",
              "push",
              "maintain",
              "admin"
            ]
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/orgs/rails/teams/core"
          },
          "members_url": {
            "type": "string"
          },
          "repositories_url": {
            "type": "string",
            "format": "uri"
          },
          "parent": {
            "$ref": "#/components/schemas/nullable-team-simple"
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "members_url",
          "name",
          "description",
          "permission",
          "html_url",
          "repositories_url",
          "slug",
          "parent"
        ]
      },
      "git-ref": {
        "title": "Git Reference",
        "description": "Git references within a repository",
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "object": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "sha": {
                "description": "SHA for the reference",
                "example": "7638417db6d59f3c431d3e1f261cc637155684cd",
                "type": "string",
                "minLength": 40,
                "maxLength": 40
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "type",
              "sha",
              "url"
            ]
          }
        },
        "required": [
          "ref",
          "node_id",
          "url",
          "object"
        ]
      },
      "pull-request-review-comment": {
        "title": "Pull Request Review Comment",
        "description": "Pull Request Review Comments are comments on a portion of the Pull Request's diff.",
        "type": "object",
        "properties": {
          "url": {
            "description": "URL for the pull request review comment",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
            "type": "string"
          },
          "pull_request_review_id": {
            "description": "The ID of the pull request review to which the comment belongs.",
            "example": 42,
            "type": "integer",
            "nullable": true
          },
          "id": {
            "description": "The ID of the pull request review comment.",
            "example": 1,
            "type": "integer"
          },
          "node_id": {
            "description": "The node ID of the pull request review comment.",
            "type": "string",
            "example": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw"
          },
          "diff_hunk": {
            "description": "The diff of the line that the comment refers to.",
            "type": "string",
            "example": "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
          },
          "path": {
            "description": "The relative path of the file to which the comment applies.",
            "example": "config/database.yaml",
            "type": "string"
          },
          "position": {
            "description": "The line index in the diff to which the comment applies. This field is deprecated; use `line` instead.",
            "example": 1,
            "type": "integer"
          },
          "original_position": {
            "description": "The index of the original line in the diff to which the comment applies. This field is deprecated; use `original_line` instead.",
            "example": 4,
            "type": "integer"
          },
          "commit_id": {
            "description": "The SHA of the commit to which the comment applies.",
            "example": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "type": "string"
          },
          "original_commit_id": {
            "description": "The SHA of the original commit to which the comment applies.",
            "example": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
            "type": "string"
          },
          "in_reply_to_id": {
            "description": "The comment ID to reply to.",
            "example": 8,
            "type": "integer"
          },
          "user": {
            "$ref": "#/components/schemas/simple-user"
          },
          "body": {
            "description": "The text of the comment.",
            "example": "We should probably include a check for null values here.",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "html_url": {
            "description": "HTML URL for the pull request review comment.",
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
          },
          "pull_request_url": {
            "description": "URL for the pull request that the review comment belongs to.",
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                  }
                },
                "required": [
                  "href"
                ]
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                  }
                },
                "required": [
                  "href"
                ]
              },
              "pull_request": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                  }
                },
                "required": [
                  "href"
                ]
              }
            },
            "required": [
              "self",
              "html",
              "pull_request"
            ]
          },
          "start_line": {
            "type": "integer",
            "description": "The first line of the range for a multi-line comment.",
            "example": 2,
            "nullable": true
          },
          "original_start_line": {
            "type": "integer",
            "description": "The first line of the range for a multi-line comment.",
            "example": 2,
            "nullable": true
          },
          "start_side": {
            "type": "string",
            "description": "The side of the first line of the range for a multi-line comment.",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "default": "RIGHT",
            "nullable": true
          },
          "line": {
            "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "example": 2,
            "type": "integer"
          },
          "original_line": {
            "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "example": 2,
            "type": "integer"
          },
          "side": {
            "description": "The side of the diff to which the comment applies. The side of the last line of the range for a multi-line comment",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "default": "RIGHT",
            "type": "string"
          },
          "subject_type": {
            "description": "The level at which the comment is targeted, can be a diff line or a file.",
            "type": "string",
            "enum": [
              "line",
              "file"
            ]
          },
          "reactions": {
            "$ref": "#/components/schemas/reaction-rollup"
          },
          "body_html": {
            "type": "string",
            "example": "\"<p>comment body</p>\""
          },
          "body_text": {
            "type": "string",
            "example": "\"comment body\""
          }
        },
        "required": [
          "url",
          "id",
          "node_id",
          "pull_request_review_id",
          "diff_hunk",
          "path",
          "commit_id",
          "original_commit_id",
          "user",
          "body",
          "created_at",
          "updated_at",
          "html_url",
          "pull_request_url",
          "author_association",
          "_links"
        ]
      },
      "nullable-simple-user": {
        "title": "Simple User",
        "description": "A GitHub user.",
        "type": "object",
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ],
        "nullable": true
      },
      "nullable-scoped-installation": {
        "title": "Scoped Installation",
        "type": "object",
        "properties": {
          "permissions": {
            "$ref": "#/components/schemas/app-permissions"
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          },
          "single_file_name": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "example": true
          },
          "single_file_paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ]
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "account": {
            "$ref": "#/components/schemas/simple-user"
          }
        },
        "required": [
          "permissions",
          "repository_selection",
          "single_file_name",
          "repositories_url",
          "account"
        ],
        "nullable": true
      },
      "simple-user": {
        "title": "Simple User",
        "description": "A GitHub user.",
        "type": "object",
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "enterprise": {
        "title": "Enterprise",
        "description": "An enterprise on GitHub.",
        "type": "object",
        "properties": {
          "description": {
            "description": "A short description of the enterprise.",
            "type": "string",
            "nullable": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/enterprises/octo-business"
          },
          "website_url": {
            "description": "The enterprise's website URL.",
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "id": {
            "description": "Unique identifier of the enterprise",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the enterprise.",
            "type": "string",
            "example": "Octo Business"
          },
          "slug": {
            "description": "The slug url identifier for the enterprise.",
            "type": "string",
            "example": "octo-business"
          },
          "created_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2019-01-26T19:01:12Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2019-01-26T19:14:43Z"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "slug",
          "html_url",
          "created_at",
          "updated_at",
          "avatar_url"
        ]
      },
      "basic-error": {
        "title": "Basic Error",
        "description": "Basic Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "repository": {
        "title": "Repository",
        "description": "A repository on GitHub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "example": "Team Environment"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "license": {
            "$ref": "#/components/schemas/nullable-license-simple"
          },
          "organization": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "forks": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_discussions": {
            "description": "Whether discussions are enabled.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "nullable": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  }
                }
              },
              "private": {
                "type": "boolean"
              },
              "html_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fork": {
                "type": "boolean"
              },
              "url": {
                "type": "string"
              },
              "archive_url": {
                "type": "string"
              },
              "assignees_url": {
                "type": "string"
              },
              "blobs_url": {
                "type": "string"
              },
              "branches_url": {
                "type": "string"
              },
              "collaborators_url": {
                "type": "string"
              },
              "comments_url": {
                "type": "string"
              },
              "commits_url": {
                "type": "string"
              },
              "compare_url": {
                "type": "string"
              },
              "contents_url": {
                "type": "string"
              },
              "contributors_url": {
                "type": "string"
              },
              "deployments_url": {
                "type": "string"
              },
              "downloads_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "forks_url": {
                "type": "string"
              },
              "git_commits_url": {
                "type": "string"
              },
              "git_refs_url": {
                "type": "string"
              },
              "git_tags_url": {
                "type": "string"
              },
              "git_url": {
                "type": "string"
              },
              "issue_comment_url": {
                "type": "string"
              },
              "issue_events_url": {
                "type": "string"
              },
              "issues_url": {
                "type": "string"
              },
              "keys_url": {
                "type": "string"
              },
              "labels_url": {
                "type": "string"
              },
              "languages_url": {
                "type": "string"
              },
              "merges_url": {
                "type": "string"
              },
              "milestones_url": {
                "type": "string"
              },
              "notifications_url": {
                "type": "string"
              },
              "pulls_url": {
                "type": "string"
              },
              "releases_url": {
                "type": "string"
              },
              "ssh_url": {
                "type": "string"
              },
              "stargazers_url": {
                "type": "string"
              },
              "statuses_url": {
                "type": "string"
              },
              "subscribers_url": {
                "type": "string"
              },
              "subscription_url": {
                "type": "string"
              },
              "tags_url": {
                "type": "string"
              },
              "teams_url": {
                "type": "string"
              },
              "trees_url": {
                "type": "string"
              },
              "clone_url": {
                "type": "string"
              },
              "mirror_url": {
                "type": "string"
              },
              "hooks_url": {
                "type": "string"
              },
              "svn_url": {
                "type": "string"
              },
              "homepage": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "forks_count": {
                "type": "integer"
              },
              "stargazers_count": {
                "type": "integer"
              },
              "watchers_count": {
                "type": "integer"
              },
              "size": {
                "type": "integer"
              },
              "default_branch": {
                "type": "string"
              },
              "open_issues_count": {
                "type": "integer"
              },
              "is_template": {
                "type": "boolean"
              },
              "topics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "has_issues": {
                "type": "boolean"
              },
              "has_projects": {
                "type": "boolean"
              },
              "has_wiki": {
                "type": "boolean"
              },
              "has_pages": {
                "type": "boolean"
              },
              "has_downloads": {
                "type": "boolean"
              },
              "archived": {
                "type": "boolean"
              },
              "disabled": {
                "type": "boolean"
              },
              "visibility": {
                "type": "string"
              },
              "pushed_at": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "permissions": {
                "type": "object",
                "properties": {
                  "admin": {
                    "type": "boolean"
                  },
                  "maintain": {
                    "type": "boolean"
                  },
                  "push": {
                    "type": "boolean"
                  },
                  "triage": {
                    "type": "boolean"
                  },
                  "pull": {
                    "type": "boolean"
                  }
                }
              },
              "allow_rebase_merge": {
                "type": "boolean"
              },
              "temp_clone_token": {
                "type": "string"
              },
              "allow_squash_merge": {
                "type": "boolean"
              },
              "allow_auto_merge": {
                "type": "boolean"
              },
              "delete_branch_on_merge": {
                "type": "boolean"
              },
              "allow_update_branch": {
                "type": "boolean"
              },
              "use_squash_pr_title_as_default": {
                "type": "boolean"
              },
              "squash_merge_commit_title": {
                "type": "string",
                "enum": [
                  "PR_TITLE",
                  "COMMIT_OR_PR_TITLE"
                ],
                "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
              },
              "squash_merge_commit_message": {
                "type": "string",
                "enum": [
                  "PR_BODY",
                  "COMMIT_MESSAGES",
                  "BLANK"
                ],
                "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
              },
              "merge_commit_title": {
                "type": "string",
                "enum": [
                  "PR_TITLE",
                  "MERGE_MESSAGE"
                ],
                "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
              },
              "merge_commit_message": {
                "type": "string",
                "enum": [
                  "PR_BODY",
                  "PR_TITLE",
                  "BLANK"
                ],
                "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
              },
              "allow_merge_commit": {
                "type": "boolean"
              },
              "subscribers_count": {
                "type": "integer"
              },
              "network_count": {
                "type": "integer"
              }
            }
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_auto_merge": {
            "description": "Whether to allow Auto-merge to be used on pull requests.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_update_branch": {
            "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "use_squash_pr_title_as_default": {
            "type": "boolean",
            "description": "Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
            "default": false,
            "deprecated": true
          },
          "squash_merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "COMMIT_OR_PR_TITLE"
            ],
            "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
          },
          "squash_merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "COMMIT_MESSAGES",
              "BLANK"
            ],
            "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
          },
          "merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "MERGE_MESSAGE"
            ],
            "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
          },
          "merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "PR_TITLE",
              "BLANK"
            ],
            "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_forking": {
            "description": "Whether to allow forking this repo",
            "type": "boolean"
          },
          "web_commit_signoff_required": {
            "description": "Whether to require contributors to sign off on web-based commits",
            "default": false,
            "type": "boolean"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:42Z\""
          },
          "anonymous_access_enabled": {
            "type": "boolean",
            "description": "Whether anonymous git access is enabled for this repository"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ]
      },
      "nullable-license-simple": {
        "title": "License Simple",
        "description": "License Simple",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "mit"
          },
          "name": {
            "type": "string",
            "example": "MIT License"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://api.github.com/licenses/mit"
          },
          "spdx_id": {
            "type": "string",
            "nullable": true,
            "example": "MIT"
          },
          "node_id": {
            "type": "string",
            "example": "MDc6TGljZW5zZW1pdA=="
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id"
        ],
        "nullable": true
      },
      "validation-error": {
        "title": "Validation Error",
        "description": "Validation Error",
        "type": "object",
        "required": [
          "message",
          "documentation_url"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "code"
              ],
              "properties": {
                "resource": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "string",
                      "nullable": true
                    },
                    {
                      "type": "integer",
                      "nullable": true
                    },
                    {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "nullable-repository": {
        "title": "Repository",
        "description": "A repository on GitHub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "example": "Team Environment"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "license": {
            "$ref": "#/components/schemas/nullable-license-simple"
          },
          "organization": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "forks": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_discussions": {
            "description": "Whether discussions are enabled.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "nullable": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  }
                }
              },
              "private": {
                "type": "boolean"
              },
              "html_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fork": {
                "type": "boolean"
              },
              "url": {
                "type": "string"
              },
              "archive_url": {
                "type": "string"
              },
              "assignees_url": {
                "type": "string"
              },
              "blobs_url": {
                "type": "string"
              },
              "branches_url": {
                "type": "string"
              },
              "collaborators_url": {
                "type": "string"
              },
              "comments_url": {
                "type": "string"
              },
              "commits_url": {
                "type": "string"
              },
              "compare_url": {
                "type": "string"
              },
              "contents_url": {
                "type": "string"
              },
              "contributors_url": {
                "type": "string"
              },
              "deployments_url": {
                "type": "string"
              },
              "downloads_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "forks_url": {
                "type": "string"
              },
              "git_commits_url": {
                "type": "string"
              },
              "git_refs_url": {
                "type": "string"
              },
              "git_tags_url": {
                "type": "string"
              },
              "git_url": {
                "type": "string"
              },
              "issue_comment_url": {
                "type": "string"
              },
              "issue_events_url": {
                "type": "string"
              },
              "issues_url": {
                "type": "string"
              },
              "keys_url": {
                "type": "string"
              },
              "labels_url": {
                "type": "string"
              },
              "languages_url": {
                "type": "string"
              },
              "merges_url": {
                "type": "string"
              },
              "milestones_url": {
                "type": "string"
              },
              "notifications_url": {
                "type": "string"
              },
              "pulls_url": {
                "type": "string"
              },
              "releases_url": {
                "type": "string"
              },
              "ssh_url": {
                "type": "string"
              },
              "stargazers_url": {
                "type": "string"
              },
              "statuses_url": {
                "type": "string"
              },
              "subscribers_url": {
                "type": "string"
              },
              "subscription_url": {
                "type": "string"
              },
              "tags_url": {
                "type": "string"
              },
              "teams_url": {
                "type": "string"
              },
              "trees_url": {
                "type": "string"
              },
              "clone_url": {
                "type": "string"
              },
              "mirror_url": {
                "type": "string"
              },
              "hooks_url": {
                "type": "string"
              },
              "svn_url": {
                "type": "string"
              },
              "homepage": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "forks_count": {
                "type": "integer"
              },
              "stargazers_count": {
                "type": "integer"
              },
              "watchers_count": {
                "type": "integer"
              },
              "size": {
                "type": "integer"
              },
              "default_branch": {
                "type": "string"
              },
              "open_issues_count": {
                "type": "integer"
              },
              "is_template": {
                "type": "boolean"
              },
              "topics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "has_issues": {
                "type": "boolean"
              },
              "has_projects": {
                "type": "boolean"
              },
              "has_wiki": {
                "type": "boolean"
              },
              "has_pages": {
                "type": "boolean"
              },
              "has_downloads": {
                "type": "boolean"
              },
              "archived": {
                "type": "boolean"
              },
              "disabled": {
                "type": "boolean"
              },
              "visibility": {
                "type": "string"
              },
              "pushed_at": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "permissions": {
                "type": "object",
                "properties": {
                  "admin": {
                    "type": "boolean"
                  },
                  "maintain": {
                    "type": "boolean"
                  },
                  "push": {
                    "type": "boolean"
                  },
                  "triage": {
                    "type": "boolean"
                  },
                  "pull": {
                    "type": "boolean"
                  }
                }
              },
              "allow_rebase_merge": {
                "type": "boolean"
              },
              "temp_clone_token": {
                "type": "string"
              },
              "allow_squash_merge": {
                "type": "boolean"
              },
              "allow_auto_merge": {
                "type": "boolean"
              },
              "delete_branch_on_merge": {
                "type": "boolean"
              },
              "allow_update_branch": {
                "type": "boolean"
              },
              "use_squash_pr_title_as_default": {
                "type": "boolean"
              },
              "squash_merge_commit_title": {
                "type": "string",
                "enum": [
                  "PR_TITLE",
                  "COMMIT_OR_PR_TITLE"
                ],
                "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
              },
              "squash_merge_commit_message": {
                "type": "string",
                "enum": [
                  "PR_BODY",
                  "COMMIT_MESSAGES",
                  "BLANK"
                ],
                "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
              },
              "merge_commit_title": {
                "type": "string",
                "enum": [
                  "PR_TITLE",
                  "MERGE_MESSAGE"
                ],
                "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
              },
              "merge_commit_message": {
                "type": "string",
                "enum": [
                  "PR_BODY",
                  "PR_TITLE",
                  "BLANK"
                ],
                "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
              },
              "allow_merge_commit": {
                "type": "boolean"
              },
              "subscribers_count": {
                "type": "integer"
              },
              "network_count": {
                "type": "integer"
              }
            }
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_auto_merge": {
            "description": "Whether to allow Auto-merge to be used on pull requests.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_update_branch": {
            "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "use_squash_pr_title_as_default": {
            "type": "boolean",
            "description": "Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
            "default": false,
            "deprecated": true
          },
          "squash_merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "COMMIT_OR_PR_TITLE"
            ],
            "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
          },
          "squash_merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "COMMIT_MESSAGES",
              "BLANK"
            ],
            "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
          },
          "merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "MERGE_MESSAGE"
            ],
            "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
          },
          "merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "PR_TITLE",
              "BLANK"
            ],
            "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_forking": {
            "description": "Whether to allow forking this repo",
            "type": "boolean"
          },
          "web_commit_signoff_required": {
            "description": "Whether to require contributors to sign off on web-based commits",
            "default": false,
            "type": "boolean"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:42Z\""
          },
          "anonymous_access_enabled": {
            "type": "boolean",
            "description": "Whether anonymous git access is enabled for this repository"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ],
        "nullable": true
      },
      "code-of-conduct-simple": {
        "title": "Code Of Conduct Simple",
        "description": "Code of Conduct Simple",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/github/docs/community/code_of_conduct"
          },
          "key": {
            "type": "string",
            "example": "citizen_code_of_conduct"
          },
          "name": {
            "type": "string",
            "example": "Citizen Code of Conduct"
          },
          "html_url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md"
          }
        },
        "required": [
          "url",
          "key",
          "name",
          "html_url"
        ]
      },
      "security-and-analysis": {
        "nullable": true,
        "type": "object",
        "properties": {
          "advanced_security": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "secret_scanning": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "secret_scanning_push_protection": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          }
        }
      },
      "nullable-team-simple": {
        "title": "Team Simple",
        "description": "Groups of organization members that gives permissions on specified repositories.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the team",
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VGVhbTE="
          },
          "url": {
            "description": "URL for the team",
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/1"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/organizations/1/team/1/members{/member}"
          },
          "name": {
            "description": "Name of the team",
            "type": "string",
            "example": "Justice League"
          },
          "description": {
            "description": "Description of the team",
            "type": "string",
            "nullable": true,
            "example": "A great team."
          },
          "permission": {
            "description": "Permission that the team will have for its repositories",
            "type": "string",
            "example": "admin"
          },
          "privacy": {
            "description": "The level of privacy this team should have",
            "type": "string",
            "example": "closed"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/orgs/rails/teams/core"
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/1/repos"
          },
          "slug": {
            "type": "string",
            "example": "justice-league"
          },
          "ldap_dn": {
            "description": "Distinguished Name (DN) that team maps to within LDAP environment",
            "example": "uid=example,ou=users,dc=github,dc=com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "members_url",
          "name",
          "description",
          "permission",
          "html_url",
          "repositories_url",
          "slug"
        ],
        "nullable": true
      },
      "author-association": {
        "title": "author_association",
        "type": "string",
        "example": "OWNER",
        "description": "How the author is associated with the repository.",
        "enum": [
          "COLLABORATOR",
          "CONTRIBUTOR",
          "FIRST_TIMER",
          "FIRST_TIME_CONTRIBUTOR",
          "MANNEQUIN",
          "MEMBER",
          "NONE",
          "OWNER"
        ]
      },
      "reaction-rollup": {
        "title": "Reaction Rollup",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "total_count": {
            "type": "integer"
          },
          "+1": {
            "type": "integer"
          },
          "-1": {
            "type": "integer"
          },
          "laugh": {
            "type": "integer"
          },
          "confused": {
            "type": "integer"
          },
          "heart": {
            "type": "integer"
          },
          "hooray": {
            "type": "integer"
          },
          "eyes": {
            "type": "integer"
          },
          "rocket": {
            "type": "integer"
          }
        },
        "required": [
          "url",
          "total_count",
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "eyes",
          "rocket"
        ]
      }
    },
    "examples": {
      "authorization-items": {
        "value": [
          {
            "id": 2,
            "url": "https://enterprise.octocat.com/api/v3/authorizations/2",
            "app": {
              "name": "My personal access token",
              "url": "https://docs.github.com/enterprise/rest/reference/enterprise-admin#list-personal-access-tokens",
              "client_id": "00000000000000000000"
            },
            "token": "ghp_16C7e42F292c6912E7710c838347Ae178B4a",
            "hashed_token": "23cffb2fab1b0a62747863eba88cb9327e561f2f7a0c8661c0d9b83146cb8d45",
            "token_last_eight": "Ae178B4a",
            "note": "My personal access token",
            "note_url": null,
            "created_at": "2019-04-24T21:49:02Z",
            "updated_at": "2019-04-24T21:49:02Z",
            "scopes": [
              "admin:business",
              "admin:gpg_key",
              "admin:org",
              "admin:org_hook",
              "admin:pre_receive_hook",
              "admin:public_key",
              "admin:repo_hook",
              "delete_repo",
              "gist",
              "notifications",
              "repo",
              "user",
              "write:discussion"
            ],
            "fingerprint": null
          }
        ]
      },
      "authorization": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": [
            "public_repo"
          ],
          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
          "token_last_eight": "Ae178B4a",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "abcde12345fghij67890"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "expires_at": "2011-10-06T17:26:27Z",
          "fingerprint": "jklmnop12345678"
        }
      },
      "base-installation-items": {
        "value": [
          {
            "id": 1,
            "account": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
            "repositories_url": "https://api.github.com/installation/repositories",
            "html_url": "https://github.com/organizations/github/settings/installations/1",
            "app_id": 1,
            "target_id": 1,
            "target_type": "Organization",
            "permissions": {
              "checks": "write",
              "metadata": "read",
              "contents": "read"
            },
            "events": [
              "push",
              "pull_request"
            ],
            "single_file_name": "config.yaml",
            "has_multiple_single_files": true,
            "single_file_paths": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ],
            "repository_selection": "selected",
            "created_at": "2017-07-08T16:18:44-04:00",
            "updated_at": "2017-07-08T16:18:44-04:00",
            "app_slug": "github-actions",
            "suspended_at": null,
            "suspended_by": null
          }
        ]
      },
      "base-installation": {
        "value": {
          "id": 1,
          "account": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
          "repositories_url": "https://api.github.com/installation/repositories",
          "html_url": "https://github.com/organizations/github/settings/installations/1",
          "app_id": 1,
          "target_id": 1,
          "target_type": "Organization",
          "permissions": {
            "checks": "write",
            "metadata": "read",
            "contents": "read"
          },
          "events": [
            "push",
            "pull_request"
          ],
          "single_file_name": "config.yaml",
          "has_multiple_single_files": true,
          "single_file_paths": [
            "config.yml",
            ".github/issue_TEMPLATE.md"
          ],
          "repository_selection": "selected",
          "created_at": "2017-07-08T16:18:44-04:00",
          "updated_at": "2017-07-08T16:18:44-04:00",
          "app_slug": "github-actions",
          "suspended_at": null,
          "suspended_by": null
        }
      },
      "installation-token": {
        "value": {
          "token": "ghs_16C7e42F292c6912E7710c838347Ae178B4a",
          "expires_at": "2016-07-11T22:14:10Z",
          "permissions": {
            "issues": "write",
            "contents": "read"
          },
          "repository_selection": "selected",
          "repositories": [
            {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World",
              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World",
              "homepage": "https://github.com",
              "language": null,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues_count": 0,
              "is_template": true,
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "visibility": "public",
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "allow_rebase_merge": true,
              "template_repository": null,
              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
              "allow_squash_merge": true,
              "allow_auto_merge": false,
              "delete_branch_on_merge": true,
              "allow_merge_commit": true,
              "subscribers_count": 42,
              "network_count": 0,
              "license": {
                "key": "mit",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT",
                "node_id": "MDc6TGljZW5zZW1pdA==",
                "html_url": "https://github.com/licenses/mit"
              },
              "forks": 1,
              "open_issues": 1,
              "watchers": 1
            }
          ]
        }
      },
      "authorization-with-user": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": [
            "public_repo",
            "user"
          ],
          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
          "token_last_eight": "Ae178B4a",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "Iv1.8a61f9b3a7aba766"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "fingerprint": "jklmnop12345678",
          "expires_at": "2011-09-08T17:26:27Z",
          "user": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          }
        }
      },
      "scope-token": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": [],
          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
          "token_last_eight": "Ae178B4a",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "Iv1.8a61f9b3a7aba766"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "fingerprint": "jklmnop12345678",
          "expires_at": "2011-09-08T17:26:27Z",
          "user": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "installation": {
            "permissions": {
              "metadata": "read",
              "issues": "write",
              "contents": "read"
            },
            "repository_selection": "selected",
            "single_file_name": ".github/workflow.yml",
            "repositories_url": "https://api.github.com/user/repos",
            "account": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "has_multiple_single_files": false,
            "single_file_paths": []
          }
        }
      },
      "authorization-response-if-returning-an-existing-token-2": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": [
            "public_repo"
          ],
          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
          "token_last_eight": "Ae178B4a",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "abcde12345fghij67890"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "expires_at": "2011-10-06T17:26:27Z",
          "fingerprint": ""
        }
      },
      "authorization-response-if-returning-an-existing-token": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": [
            "public_repo"
          ],
          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
          "token_last_eight": "Ae178B4a",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "abcde12345fghij67890"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "expires_at": "2011-10-06T17:26:27Z",
          "fingerprint": "jklmnop12345678"
        }
      },
      "authorization-3": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": [
            "public_repo"
          ],
          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
          "token_last_eight": "Ae178B4a",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "abcde12345fghij67890"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "expires_at": "2012-10-06T17:26:27Z",
          "fingerprint": "jklmnop12345678"
        }
      },
      "authorization-2": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": [
            "public_repo"
          ],
          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
          "token_last_eight": "Ae178B4a",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "abcde12345fghij67890"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "expires_at": "2011-10-06T17:26:27Z",
          "fingerprint": "jklmnop12345678"
        }
      },
      "enterprise-security-analysis-settings": {
        "value": {
          "advanced_security_enabled_for_new_repositories": true,
          "dependabot_alerts_enabled_for_new_repositories": true,
          "secret_scanning_enabled_for_new_repositories": true,
          "secret_scanning_push_protection_enabled_for_new_repositories": true,
          "secret_scanning_push_protection_custom_link": "https://github.com/test-org/test-repo/blob/main/README.md"
        }
      },
      "organization-custom-repository-role-example-old": {
        "value": {
          "total_count": 2,
          "custom_roles": [
            {
              "id": 8030,
              "name": "Developer"
            },
            {
              "id": 8031,
              "name": "Designer"
            }
          ]
        }
      },
      "installation": {
        "value": {
          "id": 1,
          "account": {
            "login": "github",
            "id": 1,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
            "avatar_url": "https://github.com/images/error/hubot_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/github",
            "html_url": "https://github.com/github",
            "followers_url": "https://api.github.com/users/github/followers",
            "following_url": "https://api.github.com/users/github/following{/other_user}",
            "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github/subscriptions",
            "organizations_url": "https://api.github.com/users/github/orgs",
            "repos_url": "https://api.github.com/orgs/github/repos",
            "events_url": "https://api.github.com/orgs/github/events",
            "received_events_url": "https://api.github.com/users/github/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repository_selection": "all",
          "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
          "repositories_url": "https://api.github.com/installation/repositories",
          "html_url": "https://github.com/organizations/github/settings/installations/1",
          "app_id": 1,
          "target_id": 1,
          "target_type": "Organization",
          "permissions": {
            "checks": "write",
            "metadata": "read",
            "contents": "read"
          },
          "events": [
            "push",
            "pull_request"
          ],
          "created_at": "2018-02-09T20:51:14Z",
          "updated_at": "2018-02-09T20:51:14Z",
          "single_file_name": "config.yml",
          "has_multiple_single_files": true,
          "single_file_paths": [
            "config.yml",
            ".github/issue_TEMPLATE.md"
          ],
          "app_slug": "github-actions",
          "suspended_at": null,
          "suspended_by": null
        }
      },
      "installation-paginated": {
        "value": {
          "total_count": 1,
          "installations": [
            {
              "id": 25381,
              "account": {
                "login": "octo-org",
                "id": 6811672,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/6811672?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octo-org",
                "html_url": "https://github.com/octo-org",
                "followers_url": "https://api.github.com/users/octo-org/followers",
                "following_url": "https://api.github.com/users/octo-org/following{/other_user}",
                "gists_url": "https://api.github.com/users/octo-org/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octo-org/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octo-org/subscriptions",
                "organizations_url": "https://api.github.com/users/octo-org/orgs",
                "repos_url": "https://api.github.com/users/octo-org/repos",
                "events_url": "https://api.github.com/users/octo-org/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octo-org/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "repository_selection": "selected",
              "access_tokens_url": "https://api.github.com/app/installations/25381/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/octo-org/settings/installations/25381",
              "app_id": 2218,
              "target_id": 6811672,
              "target_type": "Organization",
              "permissions": {
                "deployments": "write",
                "metadata": "read",
                "pull_requests": "read",
                "statuses": "read"
              },
              "events": [
                "deployment",
                "deployment_status"
              ],
              "created_at": "2017-05-16T08:47:09.000-07:00",
              "updated_at": "2017-06-06T11:23:23.000-07:00",
              "single_file_name": "config.yml",
              "has_multiple_single_files": true,
              "single_file_paths": [
                "config.yml",
                ".github/issue_TEMPLATE.md"
              ],
              "app_slug": "github-actions",
              "suspended_at": null,
              "suspended_by": null
            }
          ]
        }
      },
      "full-repository": {
        "value": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "license": {
            "key": "mit",
            "name": "MIT License",
            "url": "https://api.github.com/licenses/mit",
            "spdx_id": "MIT",
            "node_id": "MDc6TGljZW5zZW1pdA==",
            "html_url": "https://github.com/licenses/mit"
          },
          "language": null,
          "forks_count": 9,
          "forks": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "watchers": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "open_issues": 0,
          "is_template": false,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "visibility": "public",
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "pull": true,
            "push": false,
            "admin": false
          },
          "allow_rebase_merge": true,
          "template_repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World-Template",
            "full_name": "octocat/Hello-World-Template",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World-Template",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World-Template",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World-Template.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World-Template.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
            "homepage": "https://github.com",
            "language": null,
            "forks": 9,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "watchers": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues": 0,
            "open_issues_count": 0,
            "is_template": true,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "url": "https://api.github.com/licenses/mit",
              "spdx_id": "MIT",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "https://api.github.com/licenses/mit"
            },
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "allow_squash_merge": true,
            "allow_auto_merge": false,
            "delete_branch_on_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0
          },
          "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
          "allow_squash_merge": true,
          "allow_auto_merge": false,
          "delete_branch_on_merge": true,
          "allow_merge_commit": true,
          "allow_forking": true,
          "web_commit_signoff_required": false,
          "subscribers_count": 42,
          "network_count": 0,
          "organization": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "parent": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "allow_squash_merge": true,
            "allow_auto_merge": false,
            "delete_branch_on_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "url": "https://api.github.com/licenses/mit",
              "spdx_id": "MIT",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "https://api.github.com/licenses/mit"
            },
            "forks": 1,
            "open_issues": 1,
            "watchers": 1
          },
          "source": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "allow_squash_merge": true,
            "allow_auto_merge": false,
            "delete_branch_on_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "url": "https://api.github.com/licenses/mit",
              "spdx_id": "MIT",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "https://api.github.com/licenses/mit"
            },
            "forks": 1,
            "open_issues": 1,
            "watchers": 1
          }
        }
      },
      "job": {
        "value": {
          "id": 399444496,
          "run_id": 29679449,
          "run_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449",
          "node_id": "MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==",
          "head_sha": "f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0",
          "url": "https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496",
          "html_url": "https://github.com/octo-org/octo-repo/runs/399444496",
          "status": "completed",
          "conclusion": "success",
          "started_at": "2020-01-20T17:42:40Z",
          "completed_at": "2020-01-20T17:44:39Z",
          "name": "build",
          "steps": [
            {
              "name": "Set up job",
              "status": "completed",
              "conclusion": "success",
              "number": 1,
              "started_at": "2020-01-20T09:42:40.000-08:00",
              "completed_at": "2020-01-20T09:42:41.000-08:00"
            },
            {
              "name": "Run actions/checkout@v2",
              "status": "completed",
              "conclusion": "success",
              "number": 2,
              "started_at": "2020-01-20T09:42:41.000-08:00",
              "completed_at": "2020-01-20T09:42:45.000-08:00"
            },
            {
              "name": "Set up Ruby",
              "status": "completed",
              "conclusion": "success",
              "number": 3,
              "started_at": "2020-01-20T09:42:45.000-08:00",
              "completed_at": "2020-01-20T09:42:45.000-08:00"
            },
            {
              "name": "Run actions/cache@v3",
              "status": "completed",
              "conclusion": "success",
              "number": 4,
              "started_at": "2020-01-20T09:42:45.000-08:00",
              "completed_at": "2020-01-20T09:42:48.000-08:00"
            },
            {
              "name": "Install Bundler",
              "status": "completed",
              "conclusion": "success",
              "number": 5,
              "started_at": "2020-01-20T09:42:48.000-08:00",
              "completed_at": "2020-01-20T09:42:52.000-08:00"
            },
            {
              "name": "Install Gems",
              "status": "completed",
              "conclusion": "success",
              "number": 6,
              "started_at": "2020-01-20T09:42:52.000-08:00",
              "completed_at": "2020-01-20T09:42:53.000-08:00"
            },
            {
              "name": "Run Tests",
              "status": "completed",
              "conclusion": "success",
              "number": 7,
              "started_at": "2020-01-20T09:42:53.000-08:00",
              "completed_at": "2020-01-20T09:42:59.000-08:00"
            },
            {
              "name": "Deploy to Heroku",
              "status": "completed",
              "conclusion": "success",
              "number": 8,
              "started_at": "2020-01-20T09:42:59.000-08:00",
              "completed_at": "2020-01-20T09:44:39.000-08:00"
            },
            {
              "name": "Post actions/cache@v3",
              "status": "completed",
              "conclusion": "success",
              "number": 16,
              "started_at": "2020-01-20T09:44:39.000-08:00",
              "completed_at": "2020-01-20T09:44:39.000-08:00"
            },
            {
              "name": "Complete job",
              "status": "completed",
              "conclusion": "success",
              "number": 17,
              "started_at": "2020-01-20T09:44:39.000-08:00",
              "completed_at": "2020-01-20T09:44:39.000-08:00"
            }
          ],
          "check_run_url": "https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496",
          "labels": [
            "self-hosted",
            "foo",
            "bar"
          ],
          "runner_id": 1,
          "runner_name": "my runner",
          "runner_group_id": 2,
          "runner_group_name": "my runner group",
          "workflow_name": "CI",
          "head_branch": "main"
        }
      },
      "job-paginated": {
        "value": {
          "total_count": 1,
          "jobs": [
            {
              "id": 399444496,
              "run_id": 29679449,
              "run_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449",
              "node_id": "MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==",
              "head_sha": "f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0",
              "url": "https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496",
              "html_url": "https://github.com/octo-org/octo-repo/runs/399444496",
              "status": "completed",
              "conclusion": "success",
              "started_at": "2020-01-20T17:42:40Z",
              "completed_at": "2020-01-20T17:44:39Z",
              "name": "build",
              "steps": [
                {
                  "name": "Set up job",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 1,
                  "started_at": "2020-01-20T09:42:40.000-08:00",
                  "completed_at": "2020-01-20T09:42:41.000-08:00"
                },
                {
                  "name": "Run actions/checkout@v2",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 2,
                  "started_at": "2020-01-20T09:42:41.000-08:00",
                  "completed_at": "2020-01-20T09:42:45.000-08:00"
                },
                {
                  "name": "Set up Ruby",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 3,
                  "started_at": "2020-01-20T09:42:45.000-08:00",
                  "completed_at": "2020-01-20T09:42:45.000-08:00"
                },
                {
                  "name": "Run actions/cache@v3",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 4,
                  "started_at": "2020-01-20T09:42:45.000-08:00",
                  "completed_at": "2020-01-20T09:42:48.000-08:00"
                },
                {
                  "name": "Install Bundler",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 5,
                  "started_at": "2020-01-20T09:42:48.000-08:00",
                  "completed_at": "2020-01-20T09:42:52.000-08:00"
                },
                {
                  "name": "Install Gems",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 6,
                  "started_at": "2020-01-20T09:42:52.000-08:00",
                  "completed_at": "2020-01-20T09:42:53.000-08:00"
                },
                {
                  "name": "Run Tests",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 7,
                  "started_at": "2020-01-20T09:42:53.000-08:00",
                  "completed_at": "2020-01-20T09:42:59.000-08:00"
                },
                {
                  "name": "Deploy to Heroku",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 8,
                  "started_at": "2020-01-20T09:42:59.000-08:00",
                  "completed_at": "2020-01-20T09:44:39.000-08:00"
                },
                {
                  "name": "Post actions/cache@v3",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 16,
                  "started_at": "2020-01-20T09:44:39.000-08:00",
                  "completed_at": "2020-01-20T09:44:39.000-08:00"
                },
                {
                  "name": "Complete job",
                  "status": "completed",
                  "conclusion": "success",
                  "number": 17,
                  "started_at": "2020-01-20T09:44:39.000-08:00",
                  "completed_at": "2020-01-20T09:44:39.000-08:00"
                }
              ],
              "check_run_url": "https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496",
              "labels": [
                "self-hosted",
                "foo",
                "bar"
              ],
              "runner_id": 1,
              "runner_name": "my runner",
              "runner_group_id": 2,
              "runner_group_name": "my runner group",
              "workflow_name": "CI",
              "head_branch": "main"
            }
          ]
        }
      },
      "team-items": {
        "value": [
          {
            "id": 1,
            "node_id": "MDQ6VGVhbTE=",
            "url": "https://api.github.com/teams/1",
            "html_url": "https://github.com/orgs/github/teams/justice-league",
            "name": "Justice League",
            "slug": "justice-league",
            "description": "A great team.",
            "privacy": "closed",
            "permission": "admin",
            "members_url": "https://api.github.com/teams/1/members{/member}",
            "repositories_url": "https://api.github.com/teams/1/repos",
            "parent": null
          }
        ]
      },
      "git-ref": {
        "value": {
          "ref": "refs/heads/featureA",
          "node_id": "MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==",
          "url": "https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA",
          "object": {
            "type": "commit",
            "sha": "aa218f56b14c9653891f9e74264a383fa43fefbd",
            "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd"
          }
        }
      },
      "pull-request-review-comment-example-for-a-multi-line-comment": {
        "value": {
          "url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
          "pull_request_review_id": 42,
          "id": 10,
          "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw",
          "diff_hunk": "@@ -16,33 +16,40 @@ public class Connection : IConnection...",
          "path": "file1.txt",
          "position": 1,
          "original_position": 4,
          "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "original_commit_id": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
          "in_reply_to_id": 8,
          "user": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "body": "Great stuff!",
          "created_at": "2011-04-14T16:00:49Z",
          "updated_at": "2011-04-14T16:00:49Z",
          "html_url": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1",
          "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
          "author_association": "NONE",
          "_links": {
            "self": {
              "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
            },
            "html": {
              "href": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
            },
            "pull_request": {
              "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
            }
          },
          "start_line": 1,
          "original_start_line": 1,
          "start_side": "RIGHT",
          "line": 2,
          "original_line": 2,
          "side": "RIGHT"
        }
      },
      "base-installation-for-auth-user-paginated": {
        "value": {
          "total_count": 2,
          "installations": [
            {
              "id": 1,
              "account": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/1",
              "app_id": 1,
              "target_id": 1,
              "target_type": "Organization",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": [
                "push",
                "pull_request"
              ],
              "single_file_name": "config.yaml",
              "has_multiple_single_files": true,
              "single_file_paths": [
                "config.yml",
                ".github/issue_TEMPLATE.md"
              ],
              "repository_selection": "all",
              "created_at": "2017-07-08T16:18:44-04:00",
              "updated_at": "2017-07-08T16:18:44-04:00",
              "app_slug": "github-actions",
              "suspended_at": null,
              "suspended_by": null
            },
            {
              "id": 3,
              "account": {
                "login": "octocat",
                "id": 2,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/1",
              "app_id": 1,
              "target_id": 1,
              "target_type": "Organization",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": [
                "push",
                "pull_request"
              ],
              "single_file_name": "config.yaml",
              "has_multiple_single_files": true,
              "single_file_paths": [
                "config.yml",
                ".github/issue_TEMPLATE.md"
              ],
              "repository_selection": "all",
              "created_at": "2017-07-08T16:18:44-04:00",
              "updated_at": "2017-07-08T16:18:44-04:00",
              "app_slug": "github-actions",
              "suspended_at": null,
              "suspended_by": null
            }
          ]
        }
      }
    },
    "headers": {
      "link": {
        "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "not_found": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "requires_authentication": {
        "description": "Requires authentication",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "validation_failed": {
        "description": "Validation failed, or the endpoint has been spammed.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/validation-error"
            }
          }
        }
      },
      "not_modified": {
        "description": "Not modified"
      },
      "gone": {
        "description": "Gone",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "temporary_redirect": {
        "description": "Temporary Redirect",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "moved_permanently": {
        "description": "Moved permanently",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      }
    }
  }
}