{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.0-development",
    "title": "GitHub's official OpenAPI spec + Octokit extension",
    "description": "OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT"
    },
    "termsOfService": "https://docs.github.com/articles/github-terms-of-service",
    "contact": {
      "name": "Support",
      "url": "https://github.com/octokit/openapi"
    },
    "x-github-plan": "ghec"
  },
  "tags": [
    {
      "name": "actions",
      "description": "Endpoints to manage GitHub Actions using the REST API."
    },
    {
      "name": "activity",
      "description": "Activity APIs provide access to notifications, subscriptions, and timelines."
    },
    {
      "name": "apps",
      "description": "Information for integrations and installations."
    },
    {
      "name": "billing",
      "description": "Monitor charges and usage from Actions and Packages."
    },
    {
      "name": "checks",
      "description": "Rich interactions with checks run by your integrations."
    },
    {
      "name": "code-scanning",
      "description": "Retrieve code scanning alerts from a repository."
    },
    {
      "name": "codes-of-conduct",
      "description": "Insight into codes of conduct for your communities."
    },
    {
      "name": "codespaces",
      "description": "Endpoints to manage Codespaces using the REST API."
    },
    {
      "name": "emojis",
      "description": "List emojis available to use on GitHub."
    },
    {
      "name": "dependabot",
      "description": "Endpoints to manage Dependabot."
    },
    {
      "name": "dependency-graph",
      "description": "Endpoints to access Dependency Graph features."
    },
    {
      "name": "gists",
      "description": "View, modify your gists."
    },
    {
      "name": "git",
      "description": "Raw Git functionality."
    },
    {
      "name": "gitignore",
      "description": "View gitignore templates"
    },
    {
      "name": "interactions",
      "description": "Owner or admin management of users interactions."
    },
    {
      "name": "issues",
      "description": "Interact with GitHub Issues."
    },
    {
      "name": "licenses",
      "description": "View various OSS licenses."
    },
    {
      "name": "markdown",
      "description": "Render GitHub flavored markdown"
    },
    {
      "name": "merge-queue",
      "description": "Interact with GitHub Merge Queues."
    },
    {
      "name": "meta",
      "description": "Endpoints that give information about the API."
    },
    {
      "name": "migrations",
      "description": "Move projects to or from GitHub."
    },
    {
      "name": "oidc",
      "description": "Endpoints to manage GitHub OIDC configuration using the REST API."
    },
    {
      "name": "orgs",
      "description": "Interact with GitHub Orgs."
    },
    {
      "name": "packages",
      "description": "Manage packages for authenticated users and organizations."
    },
    {
      "name": "projects",
      "description": "Interact with GitHub Projects."
    },
    {
      "name": "pulls",
      "description": "Interact with GitHub Pull Requests."
    },
    {
      "name": "rate-limit",
      "description": "Check your current rate limit status"
    },
    {
      "name": "reactions",
      "description": "Interact with reactions to various GitHub entities."
    },
    {
      "name": "repos",
      "description": "Interact with GitHub Repos."
    },
    {
      "name": "search",
      "description": "Look for stuff on GitHub."
    },
    {
      "name": "secret-scanning",
      "description": "Retrieve secret scanning alerts from a repository."
    },
    {
      "name": "security-advisories",
      "description": "Manage security advisories."
    },
    {
      "name": "teams",
      "description": "Interact with GitHub Teams."
    },
    {
      "name": "users",
      "description": "Interact with and view information about users and also current user."
    },
    {
      "name": "enterprise-admin",
      "description": "Enterprise Administration"
    },
    {
      "name": "scim",
      "description": "Provisioning of GitHub organization membership for SCIM-enabled providers."
    },
    {
      "name": "server-statistics",
      "description": "Server statistics"
    }
  ],
  "servers": [
    {
      "url": "https://api.github.com"
    }
  ],
  "externalDocs": {
    "description": "GitHub Enterprise Cloud REST API",
    "url": "https://docs.github.com/enterprise-cloud@latest/rest/"
  },
  "paths": {
    "/enterprise-installation/{enterprise_or_org}/server-statistics": {
      "get": {
        "summary": "Get GitHub Enterprise Server statistics",
        "description": "Returns aggregate usage metrics for your GitHub Enterprise Server 3.5+ instance for a specified time period up to 365 days.\n\nTo use this endpoint, your GitHub Enterprise Server instance must be connected to GitHub Enterprise Cloud using GitHub Connect. You must enable Server Statistics, and for the API request provide your enterprise account name or organization name connected to the GitHub Enterprise Server. For more information, see \"[Enabling Server Statistics for your enterprise](/admin/configuration/configuring-github-connect/enabling-server-statistics-for-your-enterprise)\" in the GitHub Enterprise Server documentation.\n\nYou'll need to use a personal access token:\n  - If you connected your GitHub Enterprise Server to an enterprise account and enabled Server Statistics, you'll need a personal access token with the `read:enterprise` permission.\n  - If you connected your GitHub Enterprise Server to an organization account and enabled Server Statistics, you'll need a personal access token with the `read:org` permission.\n\nFor more information on creating a personal access token, see \"[Creating a personal access token](/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\"",
        "operationId": "enterprise-admin/get-server-statistics",
        "tags": [
          "server-statistics",
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#get-github-enterprise-server-statistics"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise-or-org"
          },
          {
            "name": "date_start",
            "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events after this cursor.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_end",
            "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events before this cursor.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/server-statistics"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/server-statistics"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/cache/usage": {
      "get": {
        "summary": "Get GitHub Actions cache usage for an enterprise",
        "description": "Gets the total GitHub Actions cache usage for an enterprise.\nThe data fetched using this API is refreshed approximately every 5 minutes, so values returned from this endpoint may take at least 5 minutes to get updated.\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "actions/get-actions-cache-usage-for-enterprise",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-github-actions-cache-usage-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actions-cache-usage-org-enterprise"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/actions-cache-usage-org-enterprise"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "cache"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/oidc/customization/issuer": {
      "put": {
        "summary": "Set the GitHub Actions OIDC custom issuer policy for an enterprise",
        "description": "Sets the GitHub Actions OpenID Connect (OIDC) custom issuer policy for an enterprise.\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/set-actions-oidc-custom-issuer-policy-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions/oidc#set-actions-oidc-custom-issuer-policy-for-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/actions-oidc-custom-issuer-policy-for-enterprise"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/actions-oidc-custom-issuer-policy-for-enterprise"
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "oidc"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/permissions": {
      "get": {
        "summary": "Get GitHub Actions permissions for an enterprise",
        "description": "Gets the GitHub Actions permissions policy for organizations and allowed actions and reusable workflows in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/get-github-actions-permissions-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-github-actions-permissions-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actions-enterprise-permissions"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/actions-enterprise-permissions"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Set GitHub Actions permissions for an enterprise",
        "description": "Sets the GitHub Actions permissions policy for organizations and allowed actions and reusable workflows in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/set-github-actions-permissions-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-github-actions-permissions-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled_organizations": {
                    "$ref": "#/components/schemas/enabled-organizations"
                  },
                  "allowed_actions": {
                    "$ref": "#/components/schemas/allowed-actions"
                  }
                },
                "required": [
                  "enabled_organizations"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "enabled_organizations": "all",
                    "allowed_actions": "selected"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/permissions/organizations": {
      "get": {
        "summary": "List selected organizations enabled for GitHub Actions in an enterprise",
        "description": "Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/list-selected-organizations-enabled-github-actions-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-selected-organizations-enabled-for-github-actions-in-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "organizations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization-simple"
                      }
                    }
                  },
                  "required": [
                    "total_count",
                    "organizations"
                  ]
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-targets"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Set selected organizations enabled for GitHub Actions in an enterprise",
        "description": "Replaces the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/set-selected-organizations-enabled-github-actions-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-selected-organizations-enabled-for-github-actions-in-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "selected_organization_ids": {
                    "description": "List of organization IDs to enable for GitHub Actions.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the organization."
                    }
                  }
                },
                "required": [
                  "selected_organization_ids"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "selected_organization_ids": [
                      32,
                      91
                    ]
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/permissions/organizations/{org_id}": {
      "put": {
        "summary": "Enable a selected organization for GitHub Actions in an enterprise",
        "description": "Adds an organization to the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/enable-selected-organization-github-actions-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#enable-a-selected-organization-for-github-actions-in-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/org-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Disable a selected organization for GitHub Actions in an enterprise",
        "description": "Removes an organization from the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/disable-selected-organization-github-actions-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#disable-a-selected-organization-for-github-actions-in-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/org-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/permissions/selected-actions": {
      "get": {
        "summary": "Get allowed actions and reusable workflows for an enterprise",
        "description": "Gets the selected actions and reusable workflows that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/get-allowed-actions-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-allowed-actions-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/selected-actions"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/selected-actions"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Set allowed actions and reusable workflows for an enterprise",
        "description": "Sets the actions and reusable workflows that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/set-allowed-actions-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-allowed-actions-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/selected-actions"
              },
              "examples": {
                "selected_actions": {
                  "$ref": "#/components/examples/selected-actions"
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/permissions/workflow": {
      "get": {
        "summary": "Get default workflow permissions for an enterprise",
        "description": "Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an enterprise,\nas well as whether GitHub Actions can submit approving pull request reviews. For more information, see\n\"[Enforcing a policy for workflow permissions in your enterprise](https://docs.github.com/enterprise-cloud@latest//admin/policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-github-actions-in-your-enterprise#enforcing-a-policy-for-workflow-permissions-in-your-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/get-github-actions-default-workflow-permissions-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-default-workflow-permissions-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actions-get-default-workflow-permissions"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/actions-default-workflow-permissions"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Set default workflow permissions for an enterprise",
        "description": "Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an enterprise, and sets\nwhether GitHub Actions can submit approving pull request reviews. For more information, see\n\"[Enforcing a policy for workflow permissions in your enterprise](https://docs.github.com/enterprise-cloud@latest//admin/policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-github-actions-in-your-enterprise#enforcing-a-policy-for-workflow-permissions-in-your-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/set-github-actions-default-workflow-permissions-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-default-workflow-permissions-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/actions-set-default-workflow-permissions"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/actions-default-workflow-permissions"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success response"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runner-groups": {
      "get": {
        "summary": "List self-hosted runner groups for an enterprise",
        "description": "Lists all self-hosted runner groups for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/list-self-hosted-runner-groups-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runner-groups-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/visible-to-organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "runner_groups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner-groups-enterprise"
                      }
                    }
                  },
                  "required": [
                    "total_count",
                    "runner_groups"
                  ]
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-groups-enterprise"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "post": {
        "summary": "Create a self-hosted runner group for an enterprise",
        "description": "Creates a new self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/create-self-hosted-runner-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#create-self-hosted-runner-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the runner group.",
                    "type": "string"
                  },
                  "visibility": {
                    "description": "Visibility of a runner group. You can select all organizations or select individual organization.",
                    "type": "string",
                    "enum": [
                      "selected",
                      "all"
                    ]
                  },
                  "selected_organization_ids": {
                    "description": "List of organization IDs that can access the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the organization."
                    }
                  },
                  "runners": {
                    "description": "List of runner IDs to add to the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the runner."
                    }
                  },
                  "allows_public_repositories": {
                    "description": "Whether the runner group can be used by `public` repositories.",
                    "type": "boolean",
                    "default": false
                  },
                  "restricted_to_workflows": {
                    "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                    "type": "boolean",
                    "default": false
                  },
                  "selected_workflows": {
                    "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                      "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected",
                    "selected_organization_ids": [
                      32,
                      91
                    ],
                    "runners": [
                      9,
                      2
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-enterprise"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group-enterprise"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}": {
      "get": {
        "summary": "Get a self-hosted runner group for an enterprise",
        "description": "Gets a specific self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/get-self-hosted-runner-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-a-self-hosted-runner-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-enterprise"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group-enterprise"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a self-hosted runner group for an enterprise",
        "description": "Updates the `name` and `visibility` of a self-hosted runner group in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/update-self-hosted-runner-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#update-a-self-hosted-runner-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the runner group.",
                    "type": "string"
                  },
                  "visibility": {
                    "description": "Visibility of a runner group. You can select all organizations or select individual organizations.",
                    "type": "string",
                    "enum": [
                      "selected",
                      "all"
                    ],
                    "default": "all"
                  },
                  "allows_public_repositories": {
                    "description": "Whether the runner group can be used by `public` repositories.",
                    "type": "boolean",
                    "default": false
                  },
                  "restricted_to_workflows": {
                    "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                    "type": "boolean",
                    "default": false
                  },
                  "selected_workflows": {
                    "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                      "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main"
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-enterprise"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group-update-enterprise"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a self-hosted runner group from an enterprise",
        "description": "Deletes a self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/delete-self-hosted-runner-group-from-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#delete-a-self-hosted-runner-group-from-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations": {
      "get": {
        "summary": "List organization access to a self-hosted runner group in an enterprise",
        "description": "Lists the organizations with access to a self-hosted runner group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/list-org-access-to-self-hosted-runner-group-in-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-organization-access-to-a-self-hosted-runner-group-in-a-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "organizations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization-simple"
                      }
                    }
                  },
                  "required": [
                    "total_count",
                    "organizations"
                  ]
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-targets"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Set organization access for a self-hosted runner group in an enterprise",
        "description": "Replaces the list of organizations that have access to a self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/set-org-access-to-self-hosted-runner-group-in-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "selected_organization_ids": {
                    "description": "List of organization IDs that can access the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the organization."
                    }
                  }
                },
                "required": [
                  "selected_organization_ids"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "selected_organization_ids": [
                      32,
                      91
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations/{org_id}": {
      "put": {
        "summary": "Add organization access to a self-hosted runner group in an enterprise",
        "description": "Adds an organization to the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/add-org-access-to-self-hosted-runner-group-in-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/org-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove organization access to a self-hosted runner group in an enterprise",
        "description": "Removes an organization from the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/remove-org-access-to-self-hosted-runner-group-in-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/org-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners": {
      "get": {
        "summary": "List self-hosted runners in a group for an enterprise",
        "description": "Lists the self-hosted runners that are in a specific enterprise group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/list-self-hosted-runners-in-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "runners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner"
                      }
                    }
                  },
                  "required": [
                    "total_count",
                    "runners"
                  ]
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Set self-hosted runners in a group for an enterprise",
        "description": "Replaces the list of self-hosted runners that are part of an enterprise runner group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/set-self-hosted-runners-in-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-self-hosted-runners-in-a-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "runners": {
                    "description": "List of runner IDs to add to the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the runner."
                    }
                  }
                },
                "required": [
                  "runners"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "runners": [
                      9,
                      2
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners/{runner_id}": {
      "put": {
        "summary": "Add a self-hosted runner to a group for an enterprise",
        "description": "Adds a self-hosted runner to a runner group configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise`\nscope to use this endpoint.",
        "operationId": "enterprise-admin/add-self-hosted-runner-to-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-a-self-hosted-runner-to-a-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a self-hosted runner from a group for an enterprise",
        "description": "Removes a self-hosted runner from a group configured in an enterprise. The runner is then returned to the default group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/remove-self-hosted-runner-from-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-a-self-hosted-runner-from-a-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runners": {
      "get": {
        "summary": "List self-hosted runners for an enterprise",
        "description": "Lists all self-hosted runners configured for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/list-self-hosted-runners-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runners-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "runners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runners/downloads": {
      "get": {
        "summary": "List runner applications for an enterprise",
        "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/list-runner-applications-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-runner-applications-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/runner-application"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-application-items"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runners/registration-token": {
      "post": {
        "summary": "Create a registration token for an enterprise",
        "description": "Returns a token that you can pass to the `config` script. The token expires after one hour.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.\n\n#### Example using registration token\n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/enterprises/octo-enterprise --token TOKEN\n```",
        "operationId": "enterprise-admin/create-registration-token-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#create-a-registration-token-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authentication-token"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authentication-token"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runners/remove-token": {
      "post": {
        "summary": "Create a remove token for an enterprise",
        "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an enterprise. The token expires after one hour.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.\n\n#### Example using remove token\n\nTo remove your self-hosted runner from an enterprise, replace `TOKEN` with the remove token provided by this\nendpoint.\n\n```\n./config.sh remove --token TOKEN\n```",
        "operationId": "enterprise-admin/create-remove-token-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#create-a-remove-token-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authentication-token"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authentication-token-2"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runners/{runner_id}": {
      "get": {
        "summary": "Get a self-hosted runner for an enterprise",
        "description": "Gets a specific self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/get-self-hosted-runner-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-a-self-hosted-runner-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a self-hosted runner from an enterprise",
        "description": "Forces the removal of a self-hosted runner from an enterprise. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/delete-self-hosted-runner-from-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#delete-self-hosted-runner-from-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runners/{runner_id}/labels": {
      "get": {
        "summary": "List labels for a self-hosted runner for an enterprise",
        "description": "Lists all labels for a self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "enterprise-admin/list-labels-for-self-hosted-runner-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-labels-for-a-self-hosted-runner-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/actions_runner_labels"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "post": {
        "summary": "Add custom labels to a self-hosted runner for an enterprise",
        "description": "Add custom labels to a self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "enterprise-admin/add-custom-labels-to-self-hosted-runner-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-custom-labels-to-a-self-hosted-runner-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "labels"
                ],
                "properties": {
                  "labels": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 100,
                    "description": "The names of the custom labels to add to the runner.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "labels": [
                      "gpu",
                      "accelerated"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/actions_runner_labels"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed_simple"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Set custom labels for a self-hosted runner for an enterprise",
        "description": "Remove all previous custom labels and set the new custom labels for a specific\nself-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "enterprise-admin/set-custom-labels-for-self-hosted-runner-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-custom-labels-for-a-self-hosted-runner-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "labels"
                ],
                "properties": {
                  "labels": {
                    "type": "array",
                    "minItems": 0,
                    "maxItems": 100,
                    "description": "The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "labels": [
                      "gpu",
                      "accelerated"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/actions_runner_labels"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed_simple"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove all custom labels from a self-hosted runner for an enterprise",
        "description": "Remove all custom labels from a self-hosted runner configured in an\nenterprise. Returns the remaining read-only labels from the runner.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "enterprise-admin/remove-all-custom-labels-from-self-hosted-runner-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-all-custom-labels-from-a-self-hosted-runner-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/actions_runner_labels_readonly"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed_simple"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}": {
      "delete": {
        "summary": "Remove a custom label from a self-hosted runner for an enterprise",
        "description": "Remove a custom label from a self-hosted runner configured\nin an enterprise. Returns the remaining labels from the runner.\n\nThis endpoint returns a `404 Not Found` status if the custom label is not\npresent on the runner.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "enterprise-admin/remove-custom-label-from-self-hosted-runner-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-a-custom-label-from-a-self-hosted-runner-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          },
          {
            "$ref": "#/components/parameters/runner-label-name"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/actions_runner_labels"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed_simple"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/announcement": {
      "get": {
        "summary": "Get announcement banner for enterprise",
        "description": "Gets the announcement banner currently set for the enterprise.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "announcement-banners/get-announcement-banner-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/announcement-banners#get-announcement-banner-for-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/announcement-banner"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/announcement"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "announcement-banners",
          "subcategory": "enterprises"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Set announcement banner for enterprise",
        "description": "Sets the announcement banner to display for the enterprise.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "announcement-banners/set-announcement-banner-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/announcement-banners/enterprises#set-announcement-banner-for-enterprise"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/announcement"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/announcement"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/announcement-banner"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/announcement"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "announcement-banners",
          "subcategory": "enterprises"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove announcement banner from enterprise",
        "description": "Removes the announcement banner currently set for the enterprise.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "announcement-banners/remove-announcement-banner-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/announcement-banners/enterprises#remove-announcement-banner-from-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "announcement-banners",
          "subcategory": "enterprises"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/audit-log": {
      "get": {
        "summary": "Get the audit log for an enterprise",
        "operationId": "enterprise-admin/get-audit-log",
        "description": "Gets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the `read:audit_log` scope.",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#get-the-audit-log-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/audit-log-enterprise-phrase"
          },
          {
            "$ref": "#/components/parameters/audit-log-include"
          },
          {
            "$ref": "#/components/parameters/audit-log-after"
          },
          {
            "$ref": "#/components/parameters/audit-log-before"
          },
          {
            "$ref": "#/components/parameters/audit-log-order"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/audit-log-event"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/audit-log"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "audit-log"
        },
        "x-octokit": {
          "changes": [
            {
              "type": "OPERATION",
              "date": "2021-04-30",
              "before": {
                "operationId": "audit-log/get-audit-log"
              }
            }
          ],
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/code-scanning/alerts": {
      "get": {
        "summary": "List code scanning alerts for an enterprise",
        "description": "Lists code scanning alerts for the default branch for all eligible repositories in an enterprise. Eligible repositories are repositories that are owned by organizations that you own or for which you are a security manager. For more information, see \"[Managing security managers in your organization](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).\"\n\nTo use this endpoint, you must be a member of the enterprise,\nand you must use an access token with the `repo` scope or `security_events` scope.",
        "tags": [
          "code-scanning"
        ],
        "operationId": "code-scanning/list-alerts-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/code-scanning#list-code-scanning-alerts-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/tool-name"
          },
          {
            "$ref": "#/components/parameters/tool-guid"
          },
          {
            "$ref": "#/components/parameters/pagination-before"
          },
          {
            "$ref": "#/components/parameters/pagination-after"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/direction"
          },
          {
            "name": "state",
            "description": "If specified, only code scanning alerts with this state will be returned.",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/code-scanning-alert-state"
            }
          },
          {
            "name": "sort",
            "description": "The property by which to sort the results.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated"
              ],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/code-scanning-organization-alert-items"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/code-scanning-organization-alert-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "503": {
            "$ref": "#/components/responses/service_unavailable"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "code-scanning",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/code_security_and_analysis": {
      "get": {
        "summary": "Get code security and analysis features for an enterprise",
        "description": "Gets code security and analysis settings for the specified enterprise.\nTo use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "secret-scanning/get-security-analysis-settings-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/enterprise-admin#get-code-security-analysis-features-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-security-analysis-settings"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/enterprise-security-analysis-settings"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "code-security-and-analysis"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Update code security and analysis features for an enterprise",
        "description": "Updates the settings for advanced security, Dependabot alerts, secret scanning, and push protection for new repositories in an enterprise.\nTo use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "secret-scanning/patch-security-analysis-settings-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/enterprise-admin#update-code-security-and-analysis-features-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "advanced_security_enabled_for_new_repositories": {
                    "type": "boolean",
                    "description": "Whether GitHub Advanced Security is automatically enabled for new repositories. For more information, see \"[About GitHub Advanced Security](https://docs.github.com/enterprise-cloud@latest//get-started/learning-about-github/about-github-advanced-security).\""
                  },
                  "dependabot_alerts_enabled_for_new_repositories": {
                    "type": "boolean",
                    "description": "Whether Dependabot alerts are automatically enabled for new repositories. For more information, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\""
                  },
                  "secret_scanning_enabled_for_new_repositories": {
                    "type": "boolean",
                    "description": "Whether secret scanning is automatically enabled for new repositories. For more information, see \"[About secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/about-secret-scanning).\""
                  },
                  "secret_scanning_push_protection_enabled_for_new_repositories": {
                    "type": "boolean",
                    "description": "Whether secret scanning push protection is automatically enabled for new repositories. For more information, see \"[Protecting pushes with secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/protecting-pushes-with-secret-scanning).\""
                  },
                  "secret_scanning_push_protection_custom_link": {
                    "type": "string",
                    "nullable": true,
                    "description": "The URL that will be displayed to contributors who are blocked from pushing a secret. For more information, see \"[Protecting pushes with secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/protecting-pushes-with-secret-scanning).\"\nTo disable this functionality, set this field to `null`."
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "advanced_security_enabled_for_new_repositories": true,
                    "dependabot_alerts_enabled_for_new_repositories": true,
                    "secret_scanning_enabled_for_new_repositories": true,
                    "secret_scanning_push_protection_enabled_for_new_repositories": true,
                    "secret_scanning_push_protection_custom_link": "https://github.com/test-org/test-repo/blob/main/README.md"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Action started"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "description": "The action could not be taken due to an in progress enablement, or a policy is preventing enablement"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "code-security-and-analysis"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/consumed-licenses": {
      "get": {
        "summary": "List enterprise consumed licenses",
        "description": "Lists the license consumption information for all users, including those from connected servers, associated with an enterprise.\nTo use this endpoint, you must be an enterprise admin, and you must use an access\ntoken with the `read:enterprise` scope.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "enterprise-admin/get-consumed-licenses",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#list-enterprise-consumed-licenses"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Consumed Licenses Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-consumed-licenses"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/get-consumed-licenses"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "license"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/license-sync-status": {
      "get": {
        "summary": "Get a license sync status",
        "description": "Gets information about the status of a license sync job for an enterprise.\nTo use this endpoint, you must be an enterprise admin, and you must use an access\ntoken with the `read:enterprise` scope.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "enterprise-admin/get-license-sync-status",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#get-a-license-sync-status"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "License Sync Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-license-sync-status"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/get-license-sync-status"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "license"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/settings/billing/actions": {
      "get": {
        "summary": "Get GitHub Actions billing for an enterprise",
        "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nThe authenticated user must be an enterprise admin.",
        "operationId": "billing/get-github-actions-billing-ghe",
        "tags": [
          "billing"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-github-actions-billing-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actions-billing-usage"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/actions-billing-usage"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "billing"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/settings/billing/advanced-security": {
      "get": {
        "summary": "Get GitHub Advanced Security active committers for an enterprise",
        "description": "Gets the GitHub Advanced Security active committers for an enterprise per repository.\n\nEach distinct user login across all repositories is counted as a single Advanced Security seat, so the `total_advanced_security_committers` is not the sum of active_users for each repository.\n\nThe total number of repositories with committer information is tracked by the `total_count` field.",
        "tags": [
          "billing"
        ],
        "operationId": "billing/get-github-advanced-security-billing-ghe",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#export-advanced-security-active-committers-data-for-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/advanced-security-active-committers"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/advanced-security-active-committers"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/code_scanning_forbidden_read"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "billing"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/settings/billing/packages": {
      "get": {
        "summary": "Get GitHub Packages billing for an enterprise",
        "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.",
        "operationId": "billing/get-github-packages-billing-ghe",
        "tags": [
          "billing"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-github-packages-billing-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/packages-billing-usage"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/packages-billing-usage"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "billing"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/settings/billing/shared-storage": {
      "get": {
        "summary": "Get shared storage billing for an enterprise",
        "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.",
        "operationId": "billing/get-shared-storage-billing-ghe",
        "tags": [
          "billing"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-shared-storage-billing-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/combined-billing-usage"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/combined-billing-usage"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "billing"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/{security_product}/{enablement}": {
      "post": {
        "summary": "Enable or disable a security feature",
        "description": "Enables or disables the specified security feature for all repositories in an enterprise.\n\nTo use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.",
        "tags": [
          "enterprise-admin"
        ],
        "operationId": "secret-scanning/post-security-product-enablement-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/enterprise-admin#enable-or-disable-a-security-feature"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/enterprise-security-product"
          },
          {
            "$ref": "#/components/parameters/enterprise-security-product-enablement"
          }
        ],
        "responses": {
          "204": {
            "description": "Action started"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "description": "The action could not be taken due to an in progress enablement, or a policy is preventing enablement"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "enterprise-admin",
          "subcategory": "code-security-and-analysis"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/custom_roles": {
      "get": {
        "summary": "Deprecated - List custom repository roles in an organization",
        "description": "**Note**: This operation is deprecated and will be removed in the future.\nUse the \"[List custom repository roles](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#list-custom-repository-roles-in-an-organization)\" endpoint instead.\n\nList the custom repository roles available in this organization. In order to see custom\nrepository roles in an organization, the authenticated user must be an organization owner.\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/list-custom-roles",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#deprecated-list-custom-repository-roles-in-an-organization"
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "The unique identifier of the organization.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response - list of custom role names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "description": "The number of custom roles in this organization",
                      "example": 3,
                      "type": "integer"
                    },
                    "custom_roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization-custom-repository-role"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-custom-repository-role-example"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "removalDate": "2025-02-15",
          "deprecationDate": "2023-02-15",
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/permissions/workflow": {
      "put": {
        "summary": "Set default workflow permissions for an organization",
        "description": "Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization, and sets if GitHub Actions\ncan submit approving pull request reviews. For more information, see\n\"[Setting the permissions of the GITHUB_TOKEN for your organization](https://docs.github.com/enterprise-cloud@latest//organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#setting-the-permissions-of-the-github_token-for-your-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/set-github-actions-default-workflow-permissions-organization",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-default-workflow-permissions"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "responses": {
          "204": {
            "description": "Success response"
          },
          "409": {
            "description": "Conflict response when changing a setting is prevented by the owning enterprise"
          }
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/actions-set-default-workflow-permissions"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/actions-default-workflow-permissions"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/runner-groups": {
      "get": {
        "summary": "List self-hosted runner groups for an organization",
        "description": "Lists all self-hosted runner groups configured in an organization and inherited from an enterprise.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/list-self-hosted-runner-groups-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runner-groups-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/visible-to-repository"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "runner_groups"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "runner_groups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner-groups-org"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-groups-org"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "post": {
        "summary": "Create a self-hosted runner group for an organization",
        "description": "Creates a new self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/create-self-hosted-runner-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#create-a-self-hosted-runner-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the runner group.",
                    "type": "string"
                  },
                  "visibility": {
                    "description": "Visibility of a runner group. You can select all repositories, select individual repositories, or limit access to private repositories.",
                    "type": "string",
                    "enum": [
                      "selected",
                      "all",
                      "private"
                    ],
                    "default": "all"
                  },
                  "selected_repository_ids": {
                    "description": "List of repository IDs that can access the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the repository."
                    }
                  },
                  "runners": {
                    "description": "List of runner IDs to add to the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the runner."
                    }
                  },
                  "allows_public_repositories": {
                    "description": "Whether the runner group can be used by `public` repositories.",
                    "type": "boolean",
                    "default": false
                  },
                  "restricted_to_workflows": {
                    "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                    "type": "boolean",
                    "default": false
                  },
                  "selected_workflows": {
                    "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                      "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected",
                    "selected_repository_ids": [
                      32,
                      91
                    ],
                    "runners": [
                      9,
                      2
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-org"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/runner-groups/{runner_group_id}": {
      "get": {
        "summary": "Get a self-hosted runner group for an organization",
        "description": "Gets a specific self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/get-self-hosted-runner-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-a-self-hosted-runner-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-org"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group-item"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a self-hosted runner group for an organization",
        "description": "Updates the `name` and `visibility` of a self-hosted runner group in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/update-self-hosted-runner-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#update-a-self-hosted-runner-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the runner group.",
                    "type": "string"
                  },
                  "visibility": {
                    "description": "Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories.",
                    "type": "string",
                    "enum": [
                      "selected",
                      "all",
                      "private"
                    ]
                  },
                  "allows_public_repositories": {
                    "description": "Whether the runner group can be used by `public` repositories.",
                    "type": "boolean",
                    "default": false
                  },
                  "restricted_to_workflows": {
                    "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                    "type": "boolean",
                    "default": false
                  },
                  "selected_workflows": {
                    "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                      "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-org"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a self-hosted runner group from an organization",
        "description": "Deletes a self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/delete-self-hosted-runner-group-from-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#delete-a-self-hosted-runner-group-from-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories": {
      "get": {
        "summary": "List repository access to a self-hosted runner group in an organization",
        "description": "Lists the repositories with access to a self-hosted runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/list-repo-access-to-self-hosted-runner-group-in-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-repository-access-to-a-self-hosted-runner-group-in-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "repositories"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "repositories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/minimal-repository"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-paginated"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Set repository access for a self-hosted runner group in an organization",
        "description": "Replaces the list of repositories that have access to a self-hosted runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/set-repo-access-to-self-hosted-runner-group-in-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-repository-access-to-a-self-hosted-runner-group-in-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "selected_repository_ids": {
                    "description": "List of repository IDs that can access the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the repository."
                    }
                  }
                },
                "required": [
                  "selected_repository_ids"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "selected_repository_ids": [
                      32,
                      91
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}": {
      "put": {
        "summary": "Add repository access to a self-hosted runner group in an organization",
        "description": "Adds a repository to the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org`\nscope to use this endpoint.",
        "operationId": "actions/add-repo-access-to-self-hosted-runner-group-in-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-repository-acess-to-a-self-hosted-runner-group-in-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/repository-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove repository access to a self-hosted runner group in an organization",
        "description": "Removes a repository from the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/remove-repo-access-to-self-hosted-runner-group-in-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-repository-access-to-a-self-hosted-runner-group-in-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/repository-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners": {
      "get": {
        "summary": "List self-hosted runners in a group for an organization",
        "description": "Lists self-hosted runners that are in a specific organization group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/list-self-hosted-runners-in-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "runners"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "runners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Set self-hosted runners in a group for an organization",
        "description": "Replaces the list of self-hosted runners that are part of an organization runner group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/set-self-hosted-runners-in-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-self-hosted-runners-in-a-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "runners": {
                    "description": "List of runner IDs to add to the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the runner."
                    }
                  }
                },
                "required": [
                  "runners"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "runners": [
                      9,
                      2
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}": {
      "put": {
        "summary": "Add a self-hosted runner to a group for an organization",
        "description": "Adds a self-hosted runner to a runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org`\nscope to use this endpoint.",
        "operationId": "actions/add-self-hosted-runner-to-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-a-self-hosted-runner-to-a-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a self-hosted runner from a group for an organization",
        "description": "Removes a self-hosted runner from a group configured in an organization. The runner is then returned to the default group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/remove-self-hosted-runner-from-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-a-self-hosted-runner-from-a-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/runner-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": true,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/secrets/{secret_name}": {
      "put": {
        "summary": "Create or update an organization secret",
        "description": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to\nuse this endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [libsodium-wrappers](https://www.npmjs.com/package/libsodium-wrappers) library.\n\n```\nconst sodium = require('libsodium-wrappers')\nconst secret = 'plain-text-secret' // replace with the secret you want to encrypt\nconst key = 'base64-encoded-public-key' // replace with the Base64 encoded public key\n\n//Check if libsodium is ready and then proceed.\nsodium.ready.then(() => {\n  // Convert Secret & Base64 key to Uint8Array.\n  let binkey = sodium.from_base64(key, sodium.base64_variants.ORIGINAL)\n  let binsec = sodium.from_string(secret)\n\n  //Encrypt the secret using LibSodium\n  let encBytes = sodium.crypto_box_seal(binsec, binkey)\n\n  // Convert encrypted Uint8Array to Base64\n  let output = sodium.to_base64(encBytes, sodium.base64_variants.ORIGINAL)\n\n  console.log(output)\n});\n```\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/latest/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```",
        "tags": [
          "actions"
        ],
        "operationId": "actions/create-or-update-org-secret",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#create-or-update-an-organization-secret"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/secret-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "encrypted_value": {
                    "type": "string",
                    "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-an-organization-public-key) endpoint.",
                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                  },
                  "key_id": {
                    "type": "string",
                    "description": "ID of the key you used to encrypt the secret."
                  },
                  "visibility": {
                    "type": "string",
                    "description": "Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret.",
                    "enum": [
                      "all",
                      "private",
                      "selected"
                    ]
                  },
                  "selected_repository_ids": {
                    "type": "array",
                    "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "visibility"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "encrypted_value": "c2VjcmV0",
                    "key_id": "012345678912345678",
                    "visibility": "selected",
                    "selected_repository_ids": [
                      1296269,
                      1296280
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response when creating a secret",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/empty-object"
                },
                "examples": {
                  "default": {
                    "value": null
                  }
                }
              }
            }
          },
          "204": {
            "description": "Response when updating a secret"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "actions",
          "subcategory": "secrets"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/announcement": {
      "get": {
        "summary": "Get announcement banner for organization",
        "description": "Gets the announcement banner currently set for the organization. Only returns the announcement banner set at the\norganization level. Organization members may also see an enterprise-level announcement banner. To get an\nannouncement banner displayed at the enterprise level, use the enterprise-level endpoint.",
        "tags": [
          "orgs"
        ],
        "operationId": "announcement-banners/get-announcement-banner-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/announcement-banners#get-enterprise-announcement-banner-for-org"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/announcement-banner"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/announcement"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "announcement-banners",
          "subcategory": "organizations"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Set announcement banner for organization",
        "description": "Sets the announcement banner to display for the organization.",
        "tags": [
          "orgs"
        ],
        "operationId": "announcement-banners/set-announcement-banner-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/announcement-banners/organizations#set-announcement-banner-for-organization"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/announcement"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/announcement"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/announcement-banner"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/announcement"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "announcement-banners",
          "subcategory": "organizations"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove announcement banner from organization",
        "description": "Removes the announcement banner currently set for the organization.",
        "tags": [
          "orgs"
        ],
        "operationId": "announcement-banners/remove-announcement-banner-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/announcement-banners/organizations#remove-announcement-banner-from-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "announcement-banners",
          "subcategory": "organizations"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/audit-log": {
      "get": {
        "summary": "Get the audit log for an organization",
        "description": "Gets the audit log for an organization. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization).\"\n\nTo use this endpoint, you must be an organization owner, and you must use an access token with the `read:audit_log` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint.\n\nBy default, the response includes up to 30 events from the past three months. Use the `phrase` parameter to filter results and retrieve older events. For example, use the `phrase` parameter with the `created` qualifier to filter events based on when the events occurred. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/enterprise-cloud@latest//organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).\"\n\nUse pagination to retrieve fewer or more than 30 events. For more information, see \"[Resources in the REST API](https://docs.github.com/enterprise-cloud@latest//rest/overview/resources-in-the-rest-api#pagination).\"",
        "operationId": "orgs/get-audit-log",
        "tags": [
          "orgs"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#get-audit-log"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/audit-log-phrase"
          },
          {
            "$ref": "#/components/parameters/audit-log-include"
          },
          {
            "$ref": "#/components/parameters/audit-log-after"
          },
          {
            "$ref": "#/components/parameters/audit-log-before"
          },
          {
            "$ref": "#/components/parameters/audit-log-order"
          },
          {
            "$ref": "#/components/parameters/per-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/audit-log-event"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/audit-log"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/credential-authorizations": {
      "get": {
        "summary": "List SAML SSO authorizations for an organization",
        "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://docs.github.com/enterprise-cloud@latest//articles/about-authentication-with-saml-single-sign-on).",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/list-saml-sso-authorizations",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#list-saml-sso-authorizations-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "name": "page",
            "description": "Page token",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "login",
            "description": "Limits the list of credentials authorizations for an organization to a specific login",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential-authorization"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/credential-authorization-items"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/credential-authorizations/{credential_id}": {
      "delete": {
        "summary": "Remove a SAML SSO authorization for an organization",
        "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access.",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/remove-saml-sso-authorization",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#remove-a-saml-sso-authorization-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/custom-repository-roles": {
      "get": {
        "summary": "List custom repository roles in an organization",
        "description": "List the custom repository roles available in this organization. In order to see custom\nrepository roles in an organization, the authenticated user must be an organization owner.\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/list-custom-repo-roles",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#list-custom-repository-roles-in-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "responses": {
          "200": {
            "description": "Response - list of custom role names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "description": "The number of custom roles in this organization",
                      "example": 3,
                      "type": "integer"
                    },
                    "custom_roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/organization-custom-repository-role"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-custom-repository-role-list-example"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "post": {
        "summary": "Create a custom repository role",
        "description": "Creates a custom repository role that can be used by all repositories owned by the organization.\n\nTo use this endpoint, the authenticated user must be an administrator for the organization and must use an personal access token (classic) with `admin:org` scope or a fine-grained personal access token with the `organization_custom_roles:write` organization permission.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/create-custom-repo-role",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#create-a-custom-repository-role"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organization-custom-repository-role-create-schema"
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Labeler",
                    "description": "A role for issue and pull request labelers",
                    "base_role": "read",
                    "permissions": [
                      "add_label"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization-custom-repository-role"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-custom-repository-role-example"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/custom-repository-roles/{role_id}": {
      "get": {
        "summary": "Get a custom repository role",
        "description": "Gets a custom repository role that is available to all repositories owned by the organization.\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/get-custom-repo-role",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#get-a-custom-repository-role"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/role-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization-custom-repository-role"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-custom-repository-role-example"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a custom repository role",
        "description": "Updates a custom repository role that can be used by all repositories owned by the organization.\n\nTo use this endpoint the authenticated user must be an administrator for the organization and must use an access token with `admin:org` scope.\nGitHub Apps must have the `organization_custom_roles:write` organization permission to use this endpoint.\n\nFor more information about custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/update-custom-repo-role",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#update-a-custom-repository-role"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/role-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organization-custom-repository-role-update-schema"
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Labeler",
                    "description": "A role for issue and PR labelers",
                    "base_role": "read",
                    "permissions": [
                      "add_label",
                      "remove_label"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization-custom-repository-role"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-custom-repository-role-example"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a custom repository role",
        "description": "Deletes a custom role from an organization. Once the custom role has been deleted, any\nuser, team, or invitation with the deleted custom role will be reassigned the inherited role.\n\nTo use this endpoint the authenticated user must be an administrator for the organization and must use an access token with `admin:org` scope.\nGitHub Apps must have the `organization_custom_roles:write` organization permission to use this endpoint.\n\nFor more information about custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/delete-custom-repo-role",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#delete-a-custom-repository-role"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/role-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/custom_roles": {
      "post": {
        "summary": "Deprecated - Create a custom role",
        "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[Create a custom repository role](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#create-a-custom-repository-role)\" endpoint instead.\n\nCreates a custom repository role that can be used by all repositories owned by the organization.\n\nTo use this endpoint, the authenticated user must be an administrator for the organization and must use an personal access token (classic) with `admin:org` scope or a fine-grained personal access token with the `organization_custom_roles:write` organization permission.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/create-custom-role",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#create-a-custom-role"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organization-custom-repository-role-create-schema"
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Labeler",
                    "description": "A role for issue and pull request labelers",
                    "base_role": "read",
                    "permissions": [
                      "add_label"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization-custom-repository-role"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-custom-repository-role-example"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "removalDate": "2023-09-06",
          "deprecationDate": "2023-03-06",
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/custom_roles/{role_id}": {
      "get": {
        "summary": "Deprecated - Get a custom role",
        "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[Get a custom repository role](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#get-a-custom-repository-role)\" endpoint instead.\n\nGets a custom repository role that is available to all repositories owned by the organization.\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/get-custom-role",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/#get-a-custom-role"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/role-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization-custom-repository-role"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-custom-repository-role-example"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "removalDate": "2022-09-06",
          "deprecationDate": "2023-03-06",
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Deprecated - Update a custom role",
        "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[Update a custom repository role](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#update-a-custom-repository-role)\" endpoint instead.\n\nUpdates a custom repository role that can be used by all repositories owned by the organization.\n\nTo use this endpoint the authenticated user must be an administrator for the organization and must use an access token with `admin:org` scope.\nGitHub Apps must have the `organization_custom_roles:write` organization permission to use this endpoint.\n\nFor more information about custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/update-custom-role",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#update-a-custom-role"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/role-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organization-custom-repository-role-update-schema"
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Labeler",
                    "description": "A role for issue and PR labelers",
                    "base_role": "read",
                    "permissions": [
                      "add_label",
                      "remove_label"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization-custom-repository-role"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-custom-repository-role-example"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "removalDate": "2022-09-06",
          "deprecationDate": "2023-03-06",
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Deprecated - Delete a custom role",
        "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[Delete a custom repository role](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#delete-a-custom-repository-role)\" endpoint instead.\n\nDeletes a custom role from an organization. Once the custom role has been deleted, any\nuser, team, or invitation with the deleted custom role will be reassigned the inherited role.\n\nTo use this endpoint the authenticated user must be an administrator for the organization and must use an access token with `admin:org` scope.\nGitHub Apps must have the `organization_custom_roles:write` organization permission to use this endpoint.\n\nFor more information about custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/delete-custom-role",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#delete-a-custom-role"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/role-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "removalDate": "2022-09-06",
          "deprecationDate": "2023-03-06",
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/dependabot/secrets/{secret_name}": {
      "put": {
        "summary": "Create or update an organization secret",
        "description": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `admin:org` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` organization\npermission to use this endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [libsodium-wrappers](https://www.npmjs.com/package/libsodium-wrappers) library.\n\n```\nconst sodium = require('libsodium-wrappers')\nconst secret = 'plain-text-secret' // replace with the secret you want to encrypt\nconst key = 'base64-encoded-public-key' // replace with the Base64 encoded public key\n\n//Check if libsodium is ready and then proceed.\nsodium.ready.then(() => {\n  // Convert Secret & Base64 key to Uint8Array.\n  let binkey = sodium.from_base64(key, sodium.base64_variants.ORIGINAL)\n  let binsec = sodium.from_string(secret)\n\n  //Encrypt the secret using LibSodium\n  let encBytes = sodium.crypto_box_seal(binsec, binkey)\n\n  // Convert encrypted Uint8Array to Base64\n  let output = sodium.to_base64(encBytes, sodium.base64_variants.ORIGINAL)\n\n  console.log(output)\n});\n```\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/latest/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```",
        "tags": [
          "dependabot"
        ],
        "operationId": "dependabot/create-or-update-org-secret",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/dependabot#create-or-update-an-organization-secret"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/secret-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "encrypted_value": {
                    "type": "string",
                    "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/enterprise-cloud@latest//rest/reference/dependabot#get-an-organization-public-key) endpoint.",
                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                  },
                  "key_id": {
                    "type": "string",
                    "description": "ID of the key you used to encrypt the secret."
                  },
                  "visibility": {
                    "type": "string",
                    "description": "Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret.",
                    "enum": [
                      "all",
                      "private",
                      "selected"
                    ]
                  },
                  "selected_repository_ids": {
                    "type": "array",
                    "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/enterprise-cloud@latest//rest/reference/dependabot#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/enterprise-cloud@latest//rest/reference/dependabot#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/enterprise-cloud@latest//rest/reference/dependabot#remove-selected-repository-from-an-organization-secret) endpoints.",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "visibility"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "encrypted_value": "c2VjcmV0",
                    "key_id": "012345678912345678",
                    "visibility": "selected",
                    "selected_repository_ids": [
                      "1296269",
                      "1296280"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response when creating a secret",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/empty-object"
                },
                "examples": {
                  "default": {
                    "value": null
                  }
                }
              }
            }
          },
          "204": {
            "description": "Response when updating a secret"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "dependabot",
          "subcategory": "secrets"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/external-group/{group_id}": {
      "get": {
        "summary": "Get an external group",
        "description": "Displays information about the specific group's usage.  Provides a list of the group's external members as well as a list of teams that this group is connected to.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/external-idp-group-info-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#external-idp-group-info-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/group-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external-group"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/external-group"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "teams",
          "subcategory": "external-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/external-groups": {
      "get": {
        "summary": "List external groups in an organization",
        "description": "Lists external groups available in an organization. You can query the groups using the `display_name` parameter, only groups with a `group_name` containing the text provided in the `display_name` parameter will be returned.  You can also limit your page results using the `per_page` parameter. GitHub Enterprise Cloud generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/list-external-idp-groups-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-external-idp-groups-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "name": "page",
            "description": "Page token",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "display_name",
            "description": "Limits the list to groups containing the text in the group name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external-groups"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/external-groups"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "example": "<https://api.github.com/resource?per_page=2&page=url-encoded-next-page-token>; rel=\"next\"",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "teams",
          "subcategory": "external-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/fine_grained_permissions": {
      "get": {
        "summary": "Deprecated - List fine-grained permissions for an organization",
        "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[List fine-grained repository permissions](https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#list-repository-fine-grained-permissions-for-an-organization)\" endpoint instead.\n\nLists the fine-grained permissions that can be used in custom repository roles for an organization. For more information, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/list-fine-grained-permissions",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#list-repository-fine-grained-permissions-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/repository-fine-grained-permission"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/repository-fine-grained-permission-example"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "removalDate": "2022-09-06",
          "deprecationDate": "2023-03-06",
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/repos": {
      "get": {
        "summary": "List organization repositories",
        "description": "Lists repositories for the specified organization.\n\n**Note:** In order to see the `security_and_analysis` block for a repository you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see \"[Managing security managers in your organization](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).\"",
        "tags": [
          "repos"
        ],
        "operationId": "repos/list-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/repos#list-organization-repositories"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "name": "type",
            "description": "Specifies the types of repositories you want returned. `internal` is not yet supported when a GitHub App calls this endpoint with an installation access token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "private",
                "forks",
                "sources",
                "member",
                "internal"
              ]
            }
          },
          {
            "name": "sort",
            "description": "The property to sort the results by.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated",
                "pushed",
                "full_name"
              ],
              "default": "created"
            }
          },
          {
            "name": "direction",
            "description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      },
      "post": {
        "summary": "Create an organization repository",
        "description": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/enterprise-cloud@latest//apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n*   `repo` scope to create a private repository",
        "tags": [
          "repos"
        ],
        "operationId": "repos/create-in-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/repos#create-an-organization-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the repository."
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description of the repository."
                  },
                  "homepage": {
                    "type": "string",
                    "description": "A URL with more information about the repository."
                  },
                  "private": {
                    "type": "boolean",
                    "description": "Whether the repository is private.",
                    "default": false
                  },
                  "visibility": {
                    "type": "string",
                    "description": "The visibility of the repository.",
                    "enum": [
                      "public",
                      "private",
                      "internal"
                    ]
                  },
                  "has_issues": {
                    "type": "boolean",
                    "description": "Either `true` to enable issues for this repository or `false` to disable them.",
                    "default": true
                  },
                  "has_projects": {
                    "type": "boolean",
                    "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
                    "default": true
                  },
                  "has_wiki": {
                    "type": "boolean",
                    "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
                    "default": true
                  },
                  "has_downloads": {
                    "description": "Whether downloads are enabled.",
                    "default": true,
                    "type": "boolean",
                    "example": true
                  },
                  "is_template": {
                    "type": "boolean",
                    "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
                    "default": false
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."
                  },
                  "auto_init": {
                    "type": "boolean",
                    "description": "Pass `true` to create an initial commit with empty README.",
                    "default": false
                  },
                  "gitignore_template": {
                    "type": "string",
                    "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\"."
                  },
                  "license_template": {
                    "type": "string",
                    "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://docs.github.com/enterprise-cloud@latest//articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\"."
                  },
                  "allow_squash_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
                    "default": true
                  },
                  "allow_merge_commit": {
                    "type": "boolean",
                    "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
                    "default": true
                  },
                  "allow_rebase_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
                    "default": true
                  },
                  "allow_auto_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.",
                    "default": false
                  },
                  "delete_branch_on_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion. **The authenticated user must be an organization owner to set this property to `true`.**",
                    "default": false
                  },
                  "use_squash_pr_title_as_default": {
                    "type": "boolean",
                    "description": "Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
                    "default": false,
                    "deprecated": true
                  },
                  "squash_merge_commit_title": {
                    "type": "string",
                    "enum": [
                      "PR_TITLE",
                      "COMMIT_OR_PR_TITLE"
                    ],
                    "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
                  },
                  "squash_merge_commit_message": {
                    "type": "string",
                    "enum": [
                      "PR_BODY",
                      "COMMIT_MESSAGES",
                      "BLANK"
                    ],
                    "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
                  },
                  "merge_commit_title": {
                    "type": "string",
                    "enum": [
                      "PR_TITLE",
                      "MERGE_MESSAGE"
                    ],
                    "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
                  },
                  "merge_commit_message": {
                    "type": "string",
                    "enum": [
                      "PR_BODY",
                      "PR_TITLE",
                      "BLANK"
                    ],
                    "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Hello-World",
                    "description": "This is your first repository",
                    "homepage": "https://github.com",
                    "private": false,
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/repository"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/repository"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "example": "https://api.github.com/repos/octocat/Hello-World",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/repository-fine-grained-permissions": {
      "get": {
        "summary": "List repository fine-grained permissions for an organization",
        "description": "Lists the fine-grained permissions that can be used in custom repository roles for an organization. For more information, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.",
        "tags": [
          "orgs"
        ],
        "operationId": "orgs/list-repo-fine-grained-permissions",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#list-repo-fine-grained-permissions"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/repository-fine-grained-permission"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/repository-fine-grained-permission-example"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "orgs",
          "subcategory": "custom-roles"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/settings/billing/advanced-security": {
      "get": {
        "summary": "Get GitHub Advanced Security active committers for an organization",
        "description": "Gets the GitHub Advanced Security active committers for an organization per repository.\n\nEach distinct user login across all repositories is counted as a single Advanced Security seat, so the `total_advanced_security_committers` is not the sum of advanced_security_committers for each repository.\n\nIf this organization defers to an enterprise for billing, the `total_advanced_security_committers` returned from the organization API may include some users that are in more than one organization, so they will only consume a single Advanced Security seat at the enterprise level.\n\nThe total number of repositories with committer information is tracked by the `total_count` field.",
        "tags": [
          "billing"
        ],
        "operationId": "billing/get-github-advanced-security-billing-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-github-advanced-security-active-committers-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/advanced-security-active-committers"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/advanced-security-active-committers"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/code_scanning_forbidden_read"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "billing",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/team-sync/groups": {
      "get": {
        "summary": "List IdP groups for an organization",
        "description": "Lists IdP groups available in an organization.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/list-idp-groups-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "name": "page",
            "description": "Page token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "Filters the results to return only those that begin with the value specified by this parameter. For example, a value of `ab` will return results that begin with \"ab\".",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group-mapping"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/group-mapping-3"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "example": "<https://api.github.com/resource?per_page=2&page=url-encoded-next-page-token>; rel=\"next\"",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "teams",
          "subcategory": "team-sync"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/teams/{team_slug}/external-groups": {
      "get": {
        "summary": "List a connection between an external group and a team",
        "description": "Lists a connection between a team and an external group.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/list-linked-external-idp-groups-to-team-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-external-idp-group-team-connection"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/team-slug"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external-groups"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/external-groups"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "teams",
          "subcategory": "external-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Update the connection between an external group and a team",
        "description": "Creates a connection between a team and an external group.  Only one external group can be linked to a team.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/link-external-idp-group-to-team-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#link-external-idp-group-team-connection"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/team-slug"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group_id": {
                    "type": "integer",
                    "description": "External Group Id",
                    "example": 1
                  }
                },
                "required": [
                  "group_id"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "group_id": 123
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external-group"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/external-group"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "teams",
          "subcategory": "external-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove the connection between an external group and a team",
        "description": "Deletes a connection between a team and an external group.\n\nYou can manage team membership with your IdP using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/unlink-external-idp-group-from-team-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#unlink-external-idp-group-team-connection"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/team-slug"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "teams",
          "subcategory": "external-groups"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/orgs/{org}/teams/{team_slug}/team-sync/group-mappings": {
      "get": {
        "summary": "List IdP groups for a team",
        "description": "List IdP groups connected to a team on GitHub Enterprise Cloud.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/list-idp-groups-in-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-a-team"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/team-slug"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group-mapping"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/group-mapping-3"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "teams",
          "subcategory": "team-sync"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Create or update IdP group connections",
        "description": "Creates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/create-or-update-idp-group-connections-in-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#create-or-update-idp-group-connections"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/team-slug"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "description": "The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "group_id": {
                          "type": "string",
                          "description": "ID of the IdP group."
                        },
                        "group_name": {
                          "type": "string",
                          "description": "Name of the IdP group."
                        },
                        "group_description": {
                          "type": "string",
                          "description": "Description of the IdP group."
                        }
                      },
                      "required": [
                        "group_id",
                        "group_name",
                        "group_description"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "default": {
                  "value": {
                    "groups": [
                      {
                        "group_id": "123",
                        "group_name": "Octocat admins",
                        "group_description": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group-mapping"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/group-mapping"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "category": "teams",
          "subcategory": "team-sync"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}": {
      "patch": {
        "summary": "Update a repository",
        "description": "**Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/enterprise-cloud@latest//rest/reference/repos#replace-all-repository-topics) endpoint.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/update",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/repos/repos#update-a-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the repository."
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description of the repository."
                  },
                  "homepage": {
                    "type": "string",
                    "description": "A URL with more information about the repository."
                  },
                  "private": {
                    "type": "boolean",
                    "description": "Either `true` to make the repository private or `false` to make it public. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/enterprise-cloud@latest//articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.",
                    "default": false
                  },
                  "visibility": {
                    "type": "string",
                    "description": "The visibility of the repository.",
                    "enum": [
                      "public",
                      "private",
                      "internal"
                    ]
                  },
                  "has_issues": {
                    "type": "boolean",
                    "description": "Either `true` to enable issues for this repository or `false` to disable them.",
                    "default": true
                  },
                  "has_projects": {
                    "type": "boolean",
                    "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
                    "default": true
                  },
                  "has_wiki": {
                    "type": "boolean",
                    "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
                    "default": true
                  },
                  "is_template": {
                    "type": "boolean",
                    "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
                    "default": false
                  },
                  "default_branch": {
                    "type": "string",
                    "description": "Updates the default branch for this repository."
                  },
                  "allow_squash_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
                    "default": true
                  },
                  "allow_merge_commit": {
                    "type": "boolean",
                    "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
                    "default": true
                  },
                  "allow_rebase_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
                    "default": true
                  },
                  "allow_auto_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.",
                    "default": false
                  },
                  "delete_branch_on_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
                    "default": false
                  },
                  "allow_update_branch": {
                    "type": "boolean",
                    "description": "Either `true` to always allow a pull request head branch that is behind its base branch to be updated even if it is not required to be up to date before merging, or false otherwise.",
                    "default": false
                  },
                  "use_squash_pr_title_as_default": {
                    "type": "boolean",
                    "description": "Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
                    "default": false,
                    "deprecated": true
                  },
                  "squash_merge_commit_title": {
                    "type": "string",
                    "enum": [
                      "PR_TITLE",
                      "COMMIT_OR_PR_TITLE"
                    ],
                    "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
                  },
                  "squash_merge_commit_message": {
                    "type": "string",
                    "enum": [
                      "PR_BODY",
                      "COMMIT_MESSAGES",
                      "BLANK"
                    ],
                    "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
                  },
                  "merge_commit_title": {
                    "type": "string",
                    "enum": [
                      "PR_TITLE",
                      "MERGE_MESSAGE"
                    ],
                    "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
                  },
                  "merge_commit_message": {
                    "type": "string",
                    "enum": [
                      "PR_BODY",
                      "PR_TITLE",
                      "BLANK"
                    ],
                    "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether to archive this repository. `false` will unarchive a previously archived repository.",
                    "default": false
                  },
                  "allow_forking": {
                    "type": "boolean",
                    "description": "Either `true` to allow private forks, or `false` to prevent private forks.",
                    "default": false
                  },
                  "web_commit_signoff_required": {
                    "type": "boolean",
                    "description": "Either `true` to require contributors to sign off on web-based commits, or `false` to not require contributors to sign off on web-based commits.",
                    "default": false
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Hello-World",
                    "description": "This is your first repository",
                    "homepage": "https://github.com",
                    "private": true,
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/full-repository"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/full-repository"
                  }
                }
              }
            }
          },
          "307": {
            "$ref": "#/components/responses/temporary_redirect"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/actions/permissions/access": {
      "get": {
        "summary": "Get the level of access for workflows outside of the repository",
        "description": "Gets the level of access that workflows outside of the repository have to actions and reusable workflows in the repository.\nThis endpoint only applies to internal and private repositories.\nFor more information, see \"[Allowing access to components in a private repository](https://docs.github.com/enterprise-cloud@latest//repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-a-private-repository)\" and\n\"[Allowing access to components in an internal repository](https://docs.github.com/enterprise-cloud@latest//repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-an-internal-repository).\"\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the\nrepository `administration` permission to use this endpoint.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/get-workflow-access-to-repository",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-workflow-access-level-to-a-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actions-workflow-access-to-repository"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/actions-workflow-access-to-repository"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      },
      "put": {
        "summary": "Set the level of access for workflows outside of the repository",
        "description": "Sets the level of access that workflows outside of the repository have to actions and reusable workflows in the repository.\nThis endpoint only applies to internal and private repositories.\nFor more information, see \"[Allowing access to components in a private repository](https://docs.github.com/enterprise-cloud@latest//repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-a-private-repository)\" and\n\"[Allowing access to components in an internal repository](https://docs.github.com/enterprise-cloud@latest//repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-an-internal-repository).\"\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the\nrepository `administration` permission to use this endpoint.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/set-workflow-access-to-repository",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-workflow-access-to-a-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/actions-workflow-access-to-repository"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/actions-workflow-access-to-repository"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Response"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "actions",
          "subcategory": "permissions"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/code-scanning/alerts": {
      "get": {
        "summary": "List code scanning alerts for a repository",
        "description": "Lists code scanning alerts.\n\nTo use this endpoint, you must use an access token with the `security_events` scope or, for alerts from public repositories only, an access token with the `public_repo` scope.\n\nGitHub Apps must have the `security_events` read\npermission to use this endpoint.\n\nThe response includes a `most_recent_instance` object.\nThis provides details of the most recent instance of this alert\nfor the default branch (or for the specified Git reference if you used `ref` in the request).",
        "tags": [
          "code-scanning"
        ],
        "operationId": "code-scanning/list-alerts-for-repo",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/tool-name"
          },
          {
            "$ref": "#/components/parameters/tool-guid"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/git-ref"
          },
          {
            "$ref": "#/components/parameters/direction"
          },
          {
            "name": "sort",
            "description": "The property by which to sort the results.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated"
              ],
              "default": "created"
            }
          },
          {
            "name": "state",
            "description": "If specified, only code scanning alerts with this state will be returned.",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/code-scanning-alert-state"
            }
          },
          {
            "name": "severity",
            "description": "If specified, only code scanning alerts with this severity will be returned.",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/code-scanning-alert-severity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/code-scanning-alert-items"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/code-scanning-alert-items"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "403": {
            "$ref": "#/components/responses/code_scanning_forbidden_read"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "503": {
            "$ref": "#/components/responses/service_unavailable"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "code-scanning",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/pages": {
      "put": {
        "summary": "Update information about a GitHub Enterprise Cloud Pages site",
        "description": "Updates information for a GitHub Enterprise Cloud Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).\n\nTo use this endpoint, you must be a repository administrator, maintainer, or have the 'manage GitHub Pages settings' permission. A token with the `repo` scope or Pages write permission is required. GitHub Apps must have the `administration:write` and `pages:write` permissions.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/update-information-about-pages-site",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/pages#update-information-about-a-github-pages-site"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cname": {
                    "type": "string",
                    "description": "Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see \"[Using a custom domain with GitHub Pages](https://docs.github.com/enterprise-cloud@latest//articles/using-a-custom-domain-with-github-pages/).\"",
                    "nullable": true
                  },
                  "https_enforced": {
                    "type": "boolean",
                    "description": "Specify whether HTTPS should be enforced for the repository."
                  },
                  "build_type": {
                    "type": "string",
                    "description": "The process by which the GitHub Pages site will be built. `workflow` means that the site is built by a custom GitHub Actions workflow. `legacy` means that the site is built by GitHub when changes are pushed to a specific branch.",
                    "enum": [
                      "legacy",
                      "workflow"
                    ]
                  },
                  "source": {
                    "anyOf": [
                      {
                        "type": "string",
                        "description": "Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `\"gh-pages\"`, `\"master\"`, and `\"master /docs\"`.",
                        "enum": [
                          "gh-pages",
                          "master",
                          "master /docs"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Update the source for the repository. Must include the branch name and path.",
                        "properties": {
                          "branch": {
                            "type": "string",
                            "description": "The repository branch used to publish your site's source files."
                          },
                          "path": {
                            "type": "string",
                            "description": "The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.",
                            "enum": [
                              "/",
                              "/docs"
                            ]
                          }
                        },
                        "required": [
                          "branch",
                          "path"
                        ]
                      }
                    ]
                  },
                  "public": {
                    "type": "boolean",
                    "description": "Configures access controls for the GitHub Pages site. If public is set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to `internal` visibility."
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "build_type"
                    ]
                  },
                  {
                    "required": [
                      "source"
                    ]
                  },
                  {
                    "required": [
                      "cname"
                    ]
                  },
                  {
                    "required": [
                      "public"
                    ]
                  },
                  {
                    "required": [
                      "https_enforced"
                    ]
                  }
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "cname": "octocatblog.com",
                    "source": {
                      "branch": "main",
                      "path": "/"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Response"
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "pages"
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/scim/v2/organizations/{org}/Users": {
      "get": {
        "summary": "List SCIM provisioned identities",
        "description": "Retrieves a paginated list of all provisioned organization members, including pending invitations. If you provide the `filter` parameter, the resources for all matching provisions members are returned.\n\nWhen a user with a SAML-provisioned external identity leaves (or is removed from) an organization, the account's metadata is immediately removed. However, the returned list of user accounts might not always match the organization or enterprise member list you see on GitHub Enterprise Cloud. This can happen in certain cases where an external identity associated with an organization will not match an organization member:\n  - When a user with a SCIM-provisioned external identity is removed from an organization, the account's metadata is preserved to allow the user to re-join the organization in the future.\n  - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).\n  - When a user is invited over SCIM, an external identity is created that matches with the invitee's email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.\n\nThe returned list of external identities can include an entry for a `null` user. These are unlinked SAML identities that are created when a user goes through the following Single Sign-On (SSO) process but does not sign in to their GitHub Enterprise Cloud account after completing SSO:\n\n1. The user is granted access by the IdP and is not a member of the GitHub Enterprise Cloud organization.\n\n1. The user attempts to access the GitHub Enterprise Cloud organization and initiates the SAML SSO process, and is not currently signed in to their GitHub Enterprise Cloud account.\n\n1. After successfully authenticating with the SAML SSO IdP, the `null` external identity entry is created and the user is prompted to sign in to their GitHub Enterprise Cloud account:\n   - If the user signs in, their GitHub Enterprise Cloud account is linked to this entry.\n   - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub Enterprise Cloud organization, and the external identity `null` entry remains in place.",
        "tags": [
          "scim"
        ],
        "operationId": "scim/list-provisioned-identities",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#list-scim-provisioned-identities"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "name": "startIndex",
            "description": "Used for pagination: the index of the first result to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "count",
            "description": "Used for pagination: the number of results to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter",
            "description": "Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query:\n\n`?filter=userName%20eq%20\\\"Octocat\\\"`.\n\nTo filter results for the identity with the email `octocat@github.com`, you would use this query:\n\n`?filter=emails%20eq%20\\\"octocat@github.com\\\"`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/scim+json": {
                "schema": {
                  "$ref": "#/components/schemas/scim-user-list"
                },
                "examples": {
                  "response-with-filter": {
                    "$ref": "#/components/examples/scim-user-list-response-with-filter"
                  },
                  "response-without-filter": {
                    "$ref": "#/components/examples/scim-user-list-response-without-filter"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "400": {
            "$ref": "#/components/responses/scim_bad_request"
          },
          "403": {
            "$ref": "#/components/responses/scim_forbidden"
          },
          "404": {
            "$ref": "#/components/responses/scim_not_found"
          },
          "429": {
            "$ref": "#/components/responses/scim_too_many_requests"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "scim",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "post": {
        "summary": "Provision and invite a SCIM user",
        "description": "Provisions organization membership for a user, and sends an activation email to the email address. If the user was previously a member of the organization, the invitation will reinstate any former privileges that the user had. For more information about reinstating former members, see \"[Reinstating a former member of your organization](https://docs.github.com/enterprise-cloud@latest//organizations/managing-membership-in-your-organization/reinstating-a-former-member-of-your-organization).\"",
        "tags": [
          "scim"
        ],
        "operationId": "scim/provision-and-invite-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#provision-and-invite-a-scim-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/scim+json": {
                "schema": {
                  "$ref": "#/components/schemas/scim-user"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/scim-user"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "400": {
            "$ref": "#/components/responses/scim_bad_request"
          },
          "403": {
            "$ref": "#/components/responses/scim_forbidden"
          },
          "404": {
            "$ref": "#/components/responses/scim_not_found"
          },
          "409": {
            "$ref": "#/components/responses/scim_conflict"
          },
          "500": {
            "$ref": "#/components/responses/scim_internal_error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "description": "Configured by the admin. Could be an email, login, or username",
                    "example": "someone@example.com",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The name of the user, suitable for display to end-users",
                    "example": "Jon Doe",
                    "type": "string"
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "givenName": {
                        "type": "string"
                      },
                      "familyName": {
                        "type": "string"
                      },
                      "formatted": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "givenName",
                      "familyName"
                    ],
                    "example": {
                      "givenName": "Jane",
                      "familyName": "User"
                    }
                  },
                  "emails": {
                    "description": "user emails",
                    "example": [
                      {
                        "value": "someone@example.com",
                        "primary": true
                      },
                      {
                        "value": "another@example.com",
                        "primary": false
                      }
                    ],
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "primary": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    }
                  },
                  "schemas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "active": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "userName",
                  "name",
                  "emails"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "userName": "octocat",
                    "name": "Monalisa Octocat",
                    "emails": [
                      {
                        "value": "mona.octocat@github.com",
                        "primary": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "scim",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/scim/v2/organizations/{org}/Users/{scim_user_id}": {
      "get": {
        "summary": "Get SCIM provisioning information for a user",
        "description": "",
        "tags": [
          "scim"
        ],
        "operationId": "scim/get-provisioning-information-for-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#get-scim-provisioning-information-for-a-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/scim-user-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/scim+json": {
                "schema": {
                  "$ref": "#/components/schemas/scim-user"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/scim-user"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "403": {
            "$ref": "#/components/responses/scim_forbidden"
          },
          "404": {
            "$ref": "#/components/responses/scim_not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "scim",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "put": {
        "summary": "Update a provisioned organization membership",
        "description": "Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#update-an-attribute-for-a-scim-user) endpoint instead.\n\nYou must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `{scim_user_id}`.",
        "tags": [
          "scim"
        ],
        "operationId": "scim/set-information-for-provisioned-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#set-scim-information-for-a-provisioned-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/scim-user-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/scim+json": {
                "schema": {
                  "$ref": "#/components/schemas/scim-user"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/scim-user"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "403": {
            "$ref": "#/components/responses/scim_forbidden"
          },
          "404": {
            "$ref": "#/components/responses/scim_not_found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schemas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "displayName": {
                    "description": "The name of the user, suitable for display to end-users",
                    "example": "Jon Doe",
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "userName": {
                    "description": "Configured by the admin. Could be an email, login, or username",
                    "example": "someone@example.com",
                    "type": "string"
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "givenName": {
                        "type": "string"
                      },
                      "familyName": {
                        "type": "string"
                      },
                      "formatted": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "givenName",
                      "familyName"
                    ],
                    "example": {
                      "givenName": "Jane",
                      "familyName": "User"
                    }
                  },
                  "emails": {
                    "description": "user emails",
                    "example": [
                      {
                        "value": "someone@example.com",
                        "primary": true
                      },
                      {
                        "value": "another@example.com",
                        "primary": false
                      }
                    ],
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "primary": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    }
                  }
                },
                "required": [
                  "userName",
                  "name",
                  "emails"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "userName": "octocat",
                    "name": "Monalisa Octocat",
                    "emails": [
                      {
                        "value": "mona.octocat@github.com",
                        "primary": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "scim",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Update an attribute for a SCIM user",
        "description": "Allows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n```",
        "tags": [
          "scim"
        ],
        "operationId": "scim/update-attribute-for-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#update-an-attribute-for-a-scim-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/scim-user-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/scim+json": {
                "schema": {
                  "$ref": "#/components/schemas/scim-user"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/scim-user"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "400": {
            "$ref": "#/components/responses/scim_bad_request"
          },
          "403": {
            "$ref": "#/components/responses/scim_forbidden"
          },
          "404": {
            "$ref": "#/components/responses/scim_not_found"
          },
          "429": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/basic-error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "schemas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "Operations": {
                    "description": "Set of operations to be performed",
                    "example": [
                      {
                        "op": "replace",
                        "value": {
                          "active": false
                        }
                      }
                    ],
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "op": {
                          "type": "string",
                          "enum": [
                            "add",
                            "remove",
                            "replace"
                          ]
                        },
                        "path": {
                          "type": "string"
                        },
                        "value": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean",
                                  "nullable": true
                                },
                                "userName": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "externalId": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "givenName": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "familyName": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "string"
                                  },
                                  "primary": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "required": [
                        "op"
                      ]
                    }
                  }
                },
                "required": [
                  "Operations"
                ],
                "type": "object"
              },
              "examples": {
                "default": {
                  "value": {
                    "Operations": [
                      {
                        "op": "replace",
                        "value": {
                          "displayName": "Octocat"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "scim",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a SCIM user from an organization",
        "description": "",
        "tags": [
          "scim"
        ],
        "operationId": "scim/delete-user-from-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#delete-a-scim-user-from-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/scim-user-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "403": {
            "$ref": "#/components/responses/scim_forbidden"
          },
          "404": {
            "$ref": "#/components/responses/scim_not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": true,
          "category": "scim",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    },
    "/teams/{team_id}/team-sync/group-mappings": {
      "get": {
        "summary": "List IdP groups for a team (Legacy)",
        "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List IdP groups for a team`](https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-a-team) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub Enterprise Cloud.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/list-idp-groups-for-legacy",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-a-team-legacy"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/team-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group-mapping"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/group-mapping-3"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "removalDate": "2021-02-01",
          "deprecationDate": "2020-01-21",
          "category": "teams",
          "subcategory": "team-sync"
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      },
      "patch": {
        "summary": "Create or update IdP group connections (Legacy)",
        "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create or update IdP group connections`](https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#create-or-update-idp-group-connections) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/create-or-update-idp-group-connections-legacy",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#create-or-update-idp-group-connections-legacy"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/team-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "description": "The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "group_id": {
                          "type": "string",
                          "description": "ID of the IdP group."
                        },
                        "group_name": {
                          "type": "string",
                          "description": "Name of the IdP group."
                        },
                        "group_description": {
                          "type": "string",
                          "description": "Description of the IdP group."
                        },
                        "id": {
                          "type": "string",
                          "example": "\"caceab43fc9ffa20081c\""
                        },
                        "name": {
                          "type": "string",
                          "example": "\"external-team-6c13e7288ef7\""
                        },
                        "description": {
                          "type": "string",
                          "example": "\"moar cheese pleese\""
                        }
                      },
                      "required": [
                        "group_id",
                        "group_name",
                        "group_description"
                      ]
                    }
                  },
                  "synced_at": {
                    "type": "string",
                    "example": "\"I am not a timestamp\""
                  }
                },
                "required": [
                  "groups"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "groups": [
                      {
                        "group_id": "123",
                        "group_name": "Octocat admins",
                        "description": "The people who configure your octoworld.",
                        "group_description": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group-mapping"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/group-mapping-2"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": true,
          "enabledForGitHubApps": false,
          "removalDate": "2021-02-01",
          "deprecationDate": "2020-01-21",
          "category": "teams",
          "subcategory": "team-sync"
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "api.github.com": {
              "type": "added"
            }
          }
        }
      }
    }
  },
  "x-webhooks": {
    "branch-protection-rule-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to branch protection rules. For more information, see \"[About protected branches](https://docs.github.com/enterprise-cloud@latest//repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches).\" For information about the APIs to manage branch protection rules, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#branchprotectionrule) or \"[Branch protection](https://docs.github.com/enterprise-cloud@latest//rest/branches/branch-protection)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" repository permission",
        "description": "A branch protection rule was created.",
        "operationId": "branch-protection-rule/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#branch-protection-rule"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-branch-protection-rule-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "branch-protection-rule",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "branch-protection-rule-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to branch protection rules. For more information, see \"[About protected branches](https://docs.github.com/enterprise-cloud@latest//repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches).\" For information about the APIs to manage branch protection rules, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#branchprotectionrule) or \"[Branch protection](https://docs.github.com/enterprise-cloud@latest//rest/branches/branch-protection)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" repository permission.",
        "description": "A branch protection rule was deleted.",
        "operationId": "branch-protection-rule/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#branch-protection-rule"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-branch-protection-rule-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "branch-protection-rule",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "branch-protection-rule-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to branch protection rules. For more information, see \"[About protected branches](https://docs.github.com/enterprise-cloud@latest//repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches).\" For information about the APIs to manage branch protection rules, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#branchprotectionrule) or \"[Branch protection](https://docs.github.com/enterprise-cloud@latest//rest/branches/branch-protection)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" repository permission.",
        "description": "A branch protection rule was edited.",
        "operationId": "branch-protection-rule/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#branch-protection-rule"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-branch-protection-rule-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "branch-protection-rule",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-run-completed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check run. For information about check runs, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-cloud@latest//rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check runs, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#checkrun) or \"[Check Runs](https://docs.github.com/enterprise-cloud@latest//rest/checks/runs)\" in the REST API documentation.\n\nFor activity relating to check suites, use the `check-suite` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" repository permission. To receive the `rerequested` and `requested_action` event types, the app must have at least write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `created` and `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check run was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "A check run was completed, and a conclusion is available.",
        "operationId": "check-run/completed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check_run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-completed"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-completed"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-completed-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-completed-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "check_run",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-run-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check run. For information about check runs, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-cloud@latest//rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check runs, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#checkrun) or \"[Check Runs](https://docs.github.com/enterprise-cloud@latest//rest/checks/runs)\" in the REST API documentation.\n\nFor activity relating to check suites, use the `check-suite` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" repository permission. To receive the `rerequested` and `requested_action` event types, the app must have at least write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `created` and `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check run was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "A new check run was created.",
        "operationId": "check-run/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check_run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-created"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-created"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-created-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-created-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "check_run",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-run-requested-action": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check run. For information about check runs, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-cloud@latest//rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check runs, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#checkrun) or \"[Check Runs](https://docs.github.com/enterprise-cloud@latest//rest/checks/runs)\" in the REST API documentation.\n\nFor activity relating to check suites, use the `check-suite` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" repository permission. To receive the `rerequested` and `requested_action` event types, the app must have at least write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `created` and `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check run was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "A check run completed, and someone requested a followup action that your app provides. Only the GitHub App someone requests to perform an action will receive the `requested_action` payload. For more information, see \"[Creating CI tests with the Checks API](https://docs.github.com/enterprise-cloud@latest//developers/apps/guides/creating-ci-tests-with-the-checks-api).\"",
        "operationId": "check-run/requested-action",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check_run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-requested-action"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-requested-action"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-requested-action-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-requested-action-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "check_run",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-run-rerequested": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check run. For information about check runs, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-cloud@latest//rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check runs, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#checkrun) or \"[Check Runs](https://docs.github.com/enterprise-cloud@latest//rest/checks/runs)\" in the REST API documentation.\n\nFor activity relating to check suites, use the `check-suite` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" repository permission. To receive the `rerequested` and `requested_action` event types, the app must have at least write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `created` and `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check run was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "Someone requested to re-run a check run. Only the GitHub App that someone requests to re-run the check will receive the `rerequested` payload.",
        "operationId": "check-run/rerequested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check_run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-rerequested"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-rerequested"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-run-rerequested-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/check-run-rerequested-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "check_run",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-suite-completed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check suite. For information about check suites, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-cloud@latest//rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check suites, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#checksuite) or \"[Check Suites](https://docs.github.com/enterprise-cloud@latest//rest/checks/suites)\" in the REST API documentation.\n\nFor activity relating to check runs, use the `check_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" permission. To receive the `requested` and `rerequested` event types, the app must have at lease write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check suite was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "All check runs in a check suite have completed, and a conclusion is available.",
        "operationId": "check-suite/completed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check-suite"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-suite-completed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "check-suite",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-suite-requested": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check suite. For information about check suites, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-cloud@latest//rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check suites, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#checksuite) or \"[Check Suites](https://docs.github.com/enterprise-cloud@latest//rest/checks/suites)\" in the REST API documentation.\n\nFor activity relating to check runs, use the `check_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" permission. To receive the `requested` and `rerequested` event types, the app must have at lease write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check suite was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "Someone requested to run a check suite. By default, check suites are automatically created when you create a check run. For more information, see [the GraphQL API documentation for creating a check run](https://docs.github.com/enterprise-cloud@latest//graphql/reference/mutations#createcheckrun) or \"[Create a check run](https://docs.github.com/enterprise-cloud@latest//rest/checks/runs#create-a-check-run)\" in the REST API documentation.",
        "operationId": "check-suite/requested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check-suite"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-suite-requested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "check-suite",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "check-suite-rerequested": {
      "post": {
        "summary": "This event occurs when there is activity relating to a check suite. For information about check suites, see \"[Getting started with the Checks API](https://docs.github.com/enterprise-cloud@latest//rest/guides/getting-started-with-the-checks-api).\" For information about the APIs to manage check suites, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#checksuite) or \"[Check Suites](https://docs.github.com/enterprise-cloud@latest//rest/checks/suites)\" in the REST API documentation.\n\nFor activity relating to check runs, use the `check_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Checks\" permission. To receive the `requested` and `rerequested` event types, the app must have at lease write-level access for the \"Checks\" permission. GitHub Apps with write-level access for the \"Checks\" permission are automatically subscribed to this webhook event.\n\nRepository and organization webhooks only receive payloads for the `completed` event types in repositories.\n\n**Note**: The API only looks for pushes in the repository where the check suite was created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.",
        "description": "Someone requested to re-run the check runs in a check suite. For more information, see [the GraphQL API documentation for creating a check suite](https://docs.github.com/enterprise-cloud@latest//graphql/reference/mutations#createchecksuite) or \"[Create a check suite](https://docs.github.com/enterprise-cloud@latest//rest/checks/suites#create-a-check-suite)\" in the REST API documentation.",
        "operationId": "check-suite/rerequested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#check-suite"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-check-suite-rerequested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "check-suite",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-appeared-in-branch": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-cloud@latest//rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "A previously created code scanning alert appeared in another branch. This can happen when a branch is merged into or created from a branch with a pre-existing code scanning alert.",
        "operationId": "code-scanning-alert/appeared-in-branch",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-appeared-in-branch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-closed-by-user": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-cloud@latest//rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "Someone closed a code scanning alert.",
        "operationId": "code-scanning-alert/closed-by-user",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-closed-by-user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-cloud@latest//rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "A code scanning alert was created in a repository.",
        "operationId": "code-scanning-alert/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-fixed": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-cloud@latest//rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "A code scanning alert was fixed in a branch by a commit.",
        "operationId": "code-scanning-alert/fixed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-fixed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-cloud@latest//rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "A previously fixed code scanning alert reappeared in a branch.",
        "operationId": "code-scanning-alert/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "code-scanning-alert-reopened-by-user": {
      "post": {
        "summary": "This event occurs when there is activity relating to code scanning alerts in a repository. For more information, see \"[About code scanning](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)\" and \"[About code scanning alerts](https://docs.github.com/enterprise-cloud@latest//code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts).\" For information about the API to manage code scanning, see \"[Code scanning](https://docs.github.com/enterprise-cloud@latest//rest/code-scanning)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Code scanning alerts\" repository permission.",
        "description": "Someone reopened a code scanning alert.",
        "operationId": "code-scanning-alert/reopened-by-user",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#code-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-code-scanning-alert-reopened-by-user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "code-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "commit-comment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to commit comments. For more information about commit comments, see \"[Commenting on a pull request](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request).\" For information about the APIs to manage commit comments, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#commitcomment) or \"[Commit comments](https://docs.github.com/enterprise-cloud@latest//rest/commits/comments)\" in the REST API documentation.\n\nFor activity relating to comments on pull request reviews, use the `pull_request_review_comment` event. For activity relating to issue comments, use the `issue_comment` event. For activity relating to discussion comments, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "Someone commented on a commit.",
        "operationId": "commit-comment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#commit-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-commit-comment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "commit-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "create": {
      "post": {
        "summary": "This event occurs when a Git branch or tag is created.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.\n\n**Note**: This event will not occur when more than three tags are created at once.",
        "operationId": "create",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#create"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "create",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "delete": {
      "post": {
        "summary": "This event occurs when a Git branch or tag is deleted.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.\n\n**Note**: This event will not occur when more than three tags are deleted at once.",
        "operationId": "delete",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#delete"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "delete",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-auto-dismissed": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A Dependabot alert was automatically closed.",
        "operationId": "dependabot-alert/auto-dismissed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-auto-dismissed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-auto-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A Dependabot alert was automatically reopened.",
        "operationId": "dependabot-alert/auto-reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-auto-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A manifest file change introduced a vulnerable dependency, or a GitHub Security Advisory was published and an existing dependency was found to be vulnerable.",
        "operationId": "dependabot-alert/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-dismissed": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A Dependabot alert was manually closed.",
        "operationId": "dependabot-alert/dismissed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-dismissed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-fixed": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A manifest file change removed a vulnerability.",
        "operationId": "dependabot-alert/fixed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-fixed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-reintroduced": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A manifest file change introduced a vulnerable dependency that had previously been fixed.",
        "operationId": "dependabot-alert/reintroduced",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-reintroduced"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "dependabot-alert-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to Dependabot alerts.\n\nFor more information about Dependabot alerts, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\" For information about the API to manage Dependabot alerts, see \"[Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//rest/dependabot/alerts)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Dependabot alerts\" repository permission.\n\n**Note**: Webhook events for Dependabot alerts are currently in beta and subject to change.",
        "description": "A Dependabot alert was manually reopened.",
        "operationId": "dependabot-alert/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#dependabot-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-dependabot-alert-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "dependabot-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "deploy-key-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to deploy keys. For more information, see \"[Managing deploy keys](https://docs.github.com/enterprise-cloud@latest//developers/overview/managing-deploy-keys).\" For information about the APIs to manage deploy keys, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#deploykey) or \"[Deploy keys](https://docs.github.com/enterprise-cloud@latest//rest/deploy-keys)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Deployments\" repository permission.",
        "description": "A deploy key was created.",
        "operationId": "deploy-key/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deploy-key"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-deploy-key-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "deploy-key",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "deploy-key-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to deploy keys. For more information, see \"[Managing deploy keys](https://docs.github.com/enterprise-cloud@latest//developers/overview/managing-deploy-keys).\" For information about the APIs to manage deploy keys, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#deploykey) or \"[Deploy keys](https://docs.github.com/enterprise-cloud@latest//rest/deploy-keys)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Deployments\" repository permission.",
        "description": "A deploy key was deleted.",
        "operationId": "deploy-key/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deploy-key"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-deploy-key-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "deploy-key",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "deployment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to deployments. For more information, see \"[About deployments](https://docs.github.com/enterprise-cloud@latest//actions/deployment/about-deployments).\" For information about the APIs to manage deployments, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#deployment) or \"[Deployments](https://docs.github.com/enterprise-cloud@latest//rest/deployments/deployments)\" in the REST API documentation.\n\nFor activity relating to deployment status, use the `deployment_status` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Deployments\" repository permission.",
        "description": "A deployment was created.",
        "operationId": "deployment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deployment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-deployment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "deployment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "deployment-protection-rule-requested": {
      "post": {
        "summary": "This event occurs when there is activity relating to deployment protection rules. For more information, see \"[Using environments for deployment](https://docs.github.com/enterprise-cloud@latest//actions/deployment/targeting-different-environments/using-environments-for-deployment#environment-protection-rules).\" For information about the API to manage deployment protection rules, see [the REST API documentation](https://docs.github.com/enterprise-cloud@latest//rest/deployments/environments).\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Deployments\" repository permission.",
        "description": "A deployment protection rule was requested for an environment.",
        "operationId": "deployment-protection-rule/requested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deployment_protection_rule"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-deployment-protection-rule-requested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "deployment-protection-rule",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "deployment-status-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to deployment statuses. For more information, see \"[About deployments](https://docs.github.com/enterprise-cloud@latest//actions/deployment/about-deployments).\" For information about the APIs to manage deployments, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#deployment) or \"[Deployments](https://docs.github.com/enterprise-cloud@latest//rest/deployments/deployments)\" in the REST API documentation.\n\nFor activity relating to deployment creation, use the `deployment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Deployments\" repository permission.",
        "description": "A new deployment status was created.",
        "operationId": "deployment-status/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deployment-status"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-deployment-status-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "deployment-status",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-answered": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on the discussion was marked as the answer.",
        "operationId": "discussion/answered",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-answered"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-category-changed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "The category of a discussion was changed.",
        "operationId": "discussion/category-changed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-category-changed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-closed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was closed.",
        "operationId": "discussion/closed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "discussions",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-comment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a discussion as opposed to comments on a discussion, use the `discussion` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on a discussion was created.",
        "operationId": "discussion-comment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-comment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-comment-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a discussion as opposed to comments on a discussion, use the `discussion` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on a discussion was deleted.",
        "operationId": "discussion-comment/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-comment-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-comment-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a discussion as opposed to comments on a discussion, use the `discussion` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on a discussion was edited.",
        "operationId": "discussion-comment/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-comment-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was created.",
        "operationId": "discussion/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was deleted.",
        "operationId": "discussion/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "The title or body on a discussion was edited, or the category of the discussion was changed.",
        "operationId": "discussion/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-labeled": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A label was added to a discussion.",
        "operationId": "discussion/labeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-labeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-locked": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was locked.",
        "operationId": "discussion/locked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-locked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-pinned": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was pinned.",
        "operationId": "discussion/pinned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-pinned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was reopened.",
        "operationId": "discussion/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "discussions",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-transferred": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was transferred to another repository.",
        "operationId": "discussion/transferred",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-transferred"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-unanswered": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A comment on the discussion was unmarked as the answer.",
        "operationId": "discussion/unanswered",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-unanswered"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-unlabeled": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A label was removed from a discussion.",
        "operationId": "discussion/unlabeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-unlabeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-unlocked": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was unlocked.",
        "operationId": "discussion/unlocked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-unlocked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "discussion-unpinned": {
      "post": {
        "summary": "This event occurs when there is activity relating to a discussion. For more information about discussions, see \"[GitHub Discussions](https://docs.github.com/enterprise-cloud@latest//discussions).\" For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#discussion).\n\nFor activity relating to a comment on a discussion, use the `discussion_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Discussions\" repository permission.\n\n**Note**: Webhook events for GitHub Discussions are currently in beta and subject to change.",
        "description": "A discussion was unpinned.",
        "operationId": "discussion/unpinned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#discussion"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-discussion-unpinned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "discussion",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "fork": {
      "post": {
        "summary": "This event occurs when someone forks a repository. For more information, see \"[Fork a repo](https://docs.github.com/enterprise-cloud@latest//get-started/quickstart/fork-a-repo).\" For information about the API to manage forks, see \"[Forks](https://docs.github.com/enterprise-cloud@latest//rest/repos/forks)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "operationId": "fork",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#fork"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-fork"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "fork",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "github-app-authorization-revoked": {
      "post": {
        "summary": "This event occurs when a user revokes their authorization of a GitHub App. For more information, see \"[About apps](https://docs.github.com/enterprise-cloud@latest//developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the API to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-cloud@latest//rest/apps)\" in the REST API documentation.\n\nA GitHub App receives this webhook by default and cannot unsubscribe from this event.\n\nAnyone can revoke their authorization of a GitHub App from their [GitHub account settings page](https://github.com/settings/apps/authorizations). Revoking the authorization of a GitHub App does not uninstall the GitHub App. You should program your GitHub App so that when it receives this webhook, it stops calling the API on behalf of the person who revoked the token. If your GitHub App continues to use a revoked access token, it will receive the `401 Bad Credentials` error. For details about user-to-server requests, which require GitHub App authorization, see \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-cloud@latest//apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/).\"",
        "description": "Someone revoked their authorization of a GitHub App.",
        "operationId": "github-app-authorization/revoked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#github-app-authorization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-github-app-authorization-revoked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "github-app-authorization",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "gollum": {
      "post": {
        "summary": "This event occurs when someone creates or updates a wiki page. For more information, see \"[About wikis](https://docs.github.com/enterprise-cloud@latest//communities/documenting-your-project-with-wikis/about-wikis).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "operationId": "gollum",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#gollum"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-gollum"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "gollum",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "installation-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-cloud@latest//developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-cloud@latest//rest/reference/apps)\" in the REST API documentation.",
        "description": "Someone installed a GitHub App on a user or organization account.",
        "operationId": "installation/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-cloud@latest//developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-cloud@latest//rest/reference/apps)\" in the REST API documentation.",
        "description": "Someone uninstalled a GitHub App from their user or organization account.",
        "operationId": "installation/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-new-permissions-accepted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-cloud@latest//developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-cloud@latest//rest/reference/apps)\" in the REST API documentation.",
        "description": "Someone granted new permissions to a GitHub App.",
        "operationId": "installation/new-permissions-accepted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-new-permissions-accepted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-repositories-added": {
      "post": {
        "summary": "This event occurs when there is activity relating to which repositories a GitHub App installation can access. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-cloud@latest//developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-cloud@latest//rest/reference/apps)\" in the REST API documentation.",
        "description": "A GitHub App installation was granted access to one or more repositories.",
        "operationId": "installation-repositories/added",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation-repositories"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-repositories-added"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation-repositories",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-repositories-removed": {
      "post": {
        "summary": "This event occurs when there is activity relating to which repositories a GitHub App installation can access. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-cloud@latest//developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-cloud@latest//rest/reference/apps)\" in the REST API documentation.",
        "description": "Access to one or more repositories was revoked for a GitHub App installation.",
        "operationId": "installation-repositories/removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation-repositories"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-repositories-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation-repositories",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-suspend": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-cloud@latest//developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-cloud@latest//rest/reference/apps)\" in the REST API documentation.",
        "description": "Someone blocked access by a GitHub App to their user or organization account.",
        "operationId": "installation/suspend",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-suspend"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-target-renamed": {
      "post": {
        "summary": "This event occurs when there is activity relating to the user or organization account that a GitHub App is installed on. For more information, see \"[About apps](https://docs.github.com/enterprise-cloud@latest//developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-cloud@latest//rest/reference/apps)\" in the REST API documentation.",
        "description": "Somebody renamed the user or organization account that a GitHub App is installed on.",
        "operationId": "installation-target/renamed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation-target"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-target-renamed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation-target",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "installation-unsuspend": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub App installation. All GitHub Apps receive this event by default. You cannot manually subscribe to this event.\n\nFor more information about GitHub Apps, see \"[About apps](https://docs.github.com/enterprise-cloud@latest//developers/apps/getting-started-with-apps/about-apps#about-github-apps).\" For information about the APIs to manage GitHub Apps, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#app) or \"[Apps](https://docs.github.com/enterprise-cloud@latest//rest/reference/apps)\" in the REST API documentation.",
        "description": "A GitHub App that was blocked from accessing a user or organization account was given access the account again.",
        "operationId": "installation/unsuspend",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#installation"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-installation-unsuspend"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "installation",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "issue-comment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on an issue or pull request. For more information about issues and pull requests, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues)\" and \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage issue comments, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issuecomment) or \"[Issue comments](https://docs.github.com/enterprise-cloud@latest//rest/issues/comments)\" in the REST API documentation.\n\nFor activity relating to an issue as opposed to comments on an issue, use the `issue` event. For activity related to pull request reviews or pull request review comments, use the `pull_request_review` or `pull_request_review_comment` events. For more information about the different types of pull request comments, see \"[Working with comments](https://docs.github.com/enterprise-cloud@latest//rest/guides/working-with-comments).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A comment on an issue or pull request was created.",
        "operationId": "issue-comment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issue-comment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issue-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issue-comment-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on an issue or pull request. For more information about issues and pull requests, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues)\" and \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage issue comments, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issuecomment) or \"[Issue comments](https://docs.github.com/enterprise-cloud@latest//rest/issues/comments)\" in the REST API documentation.\n\nFor activity relating to an issue as opposed to comments on an issue, use the `issue` event. For activity related to pull request reviews or pull request review comments, use the `pull_request_review` or `pull_request_review_comment` events. For more information about the different types of pull request comments, see \"[Working with comments](https://docs.github.com/enterprise-cloud@latest//rest/guides/working-with-comments).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A comment on an issue or pull request was deleted.",
        "operationId": "issue-comment/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issue-comment-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issue-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issue-comment-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment on an issue or pull request. For more information about issues and pull requests, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues)\" and \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage issue comments, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issuecomment) or \"[Issue comments](https://docs.github.com/enterprise-cloud@latest//rest/issues/comments)\" in the REST API documentation.\n\nFor activity relating to an issue as opposed to comments on an issue, use the `issue` event. For activity related to pull request reviews or pull request review comments, use the `pull_request_review` or `pull_request_review_comment` events. For more information about the different types of pull request comments, see \"[Working with comments](https://docs.github.com/enterprise-cloud@latest//rest/guides/working-with-comments).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A comment on an issue or pull request was edited.",
        "operationId": "issue-comment/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issue-comment-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issue-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-assigned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was assigned to a user.",
        "operationId": "issues/assigned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-assigned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-closed": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was closed.",
        "operationId": "issues/closed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was deleted.",
        "operationId": "issues/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-demilestoned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was removed from a milestone.",
        "operationId": "issues/demilestoned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-demilestoned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "The title or body on an issue was edited.",
        "operationId": "issues/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-labeled": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "A label was added to an issue.",
        "operationId": "issues/labeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-labeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-locked": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "Conversation on an issue was locked. For more information, see \"[Locking conversations](https://docs.github.com/enterprise-cloud@latest//communities/moderating-comments-and-conversations/locking-conversations).\"",
        "operationId": "issues/locked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-locked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-milestoned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was added to a milestone.",
        "operationId": "issues/milestoned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-milestoned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-opened": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was created. When a closed issue is reopened, the action will be `reopened` instead.",
        "operationId": "issues/opened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-opened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-pinned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was pinned to a repository. For more information, see \"[Pinning an issue to your repository](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository).\"",
        "operationId": "issues/pinned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-pinned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "A closed issue was reopened.",
        "operationId": "issues/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-transferred": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was transferred to another repository. For more information, see \"[Transferring an issue to another repository](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/transferring-an-issue-to-another-repository).\"",
        "operationId": "issues/transferred",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-transferred"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-unassigned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "A user was unassigned from an issue.",
        "operationId": "issues/unassigned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-unassigned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-unlabeled": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "A label was removed from an issue.",
        "operationId": "issues/unlabeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-unlabeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-unlocked": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "Conversation on an issue was locked. For more information, see \"[Locking conversations](https://docs.github.com/enterprise-cloud@latest//communities/moderating-comments-and-conversations/locking-conversations).\"",
        "operationId": "issues/unlocked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-unlocked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "issues-unpinned": {
      "post": {
        "summary": "This event occurs when there is activity relating to an issue. For more information about issues, see \"[About issues](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/about-issues).\" For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#issue) or \"[Issues](https://docs.github.com/enterprise-cloud@latest//rest/issues)\" in the REST API documentation.\n\nFor activity relating to a comment on an issue, use the `issue_comment` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" repository permission.",
        "description": "An issue was unpinned from a repository. For more information, see \"[Pinning an issue to your repository](https://docs.github.com/enterprise-cloud@latest//issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository).\"",
        "operationId": "issues/unpinned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issues"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-issues-unpinned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "issues",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "label-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to labels. For more information, see \"[Managing labels](https://docs.github.com/enterprise-cloud@latest//issues/using-labels-and-milestones-to-track-work/managing-labels).\" For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#label) or \"[Labels](https://docs.github.com/enterprise-cloud@latest//rest/issues/labels)\" in the REST API documentation.\n\nIf you want to receive an event when a label is added to or removed from an issue, pull request, or discussion, use the `labeled` or `unlabeled` action type for the `issues`, `pull_request`, or `discussion` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A label was created.",
        "operationId": "label/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#label"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-label-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "label",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "label-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to labels. For more information, see \"[Managing labels](https://docs.github.com/enterprise-cloud@latest//issues/using-labels-and-milestones-to-track-work/managing-labels).\" For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#label) or \"[Labels](https://docs.github.com/enterprise-cloud@latest//rest/issues/labels)\" in the REST API documentation.\n\nIf you want to receive an event when a label is added to or removed from an issue, pull request, or discussion, use the `labeled` or `unlabeled` action type for the `issues`, `pull_request`, or `discussion` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A label was deleted.",
        "operationId": "label/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#label"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-label-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "label",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "label-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to labels. For more information, see \"[Managing labels](https://docs.github.com/enterprise-cloud@latest//issues/using-labels-and-milestones-to-track-work/managing-labels).\" For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#label) or \"[Labels](https://docs.github.com/enterprise-cloud@latest//rest/issues/labels)\" in the REST API documentation.\n\nIf you want to receive an event when a label is added to or removed from an issue, pull request, or discussion, use the `labeled` or `unlabeled` action type for the `issues`, `pull_request`, or `discussion` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A label's name, description, or color was changed.",
        "operationId": "label/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#label"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-label-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "label",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "marketplace-purchase-cancelled": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub Marketplace purchase. For more information, see \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//marketplace).\" For information about the APIs to manage GitHub Marketplace listings, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#marketplacelisting) or \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//rest/apps/marketplace)\" in the REST API documentation.",
        "description": "Someone cancelled a GitHub Marketplace plan, and the last billing cycle has ended. The change will take effect on the account immediately.",
        "operationId": "marketplace-purchase/cancelled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#marketplace-purchase"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-marketplace-purchase-cancelled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "marketplace-purchase",
          "supported-webhook-types": [
            "marketplace"
          ]
        }
      }
    },
    "marketplace-purchase-changed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub Marketplace purchase. For more information, see \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//marketplace).\" For information about the APIs to manage GitHub Marketplace listings, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#marketplacelisting) or \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//rest/apps/marketplace)\" in the REST API documentation.",
        "description": "Someone upgraded or downgraded a GitHub Marketplace plan, and the last billing cycle has ended. The change will take effect on the account immediately.",
        "operationId": "marketplace-purchase/changed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#marketplace-purchase"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-marketplace-purchase-changed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "marketplace-purchase",
          "supported-webhook-types": [
            "marketplace"
          ]
        }
      }
    },
    "marketplace-purchase-pending-change": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub Marketplace purchase. For more information, see \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//marketplace).\" For information about the APIs to manage GitHub Marketplace listings, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#marketplacelisting) or \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//rest/apps/marketplace)\" in the REST API documentation.",
        "description": "Someone downgraded or cancelled a GitHub Marketplace plan. The new plan or cancellation will take effect at the end of the current billing cycle. When the change takes effect, the `changed` or `cancelled` event will be sent.",
        "operationId": "marketplace-purchase/pending-change",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#marketplace-purchase"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-marketplace-purchase-pending-change"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "marketplace-purchase",
          "supported-webhook-types": [
            "marketplace"
          ]
        }
      }
    },
    "marketplace-purchase-pending-change-cancelled": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub Marketplace purchase. For more information, see \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//marketplace).\" For information about the APIs to manage GitHub Marketplace listings, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#marketplacelisting) or \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//rest/apps/marketplace)\" in the REST API documentation.",
        "description": "Someone cancelled a pending change to a GitHub Marketplace plan. Pending changes include plan cancellations and downgrades that will take effect at the end of a billing cycle.",
        "operationId": "marketplace-purchase/pending-change-cancelled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#marketplace-purchase"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-marketplace-purchase-pending-change-cancelled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "marketplace-purchase",
          "supported-webhook-types": [
            "marketplace"
          ]
        }
      }
    },
    "marketplace-purchase-purchased": {
      "post": {
        "summary": "This event occurs when there is activity relating to a GitHub Marketplace purchase. For more information, see \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//marketplace).\" For information about the APIs to manage GitHub Marketplace listings, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#marketplacelisting) or \"[GitHub Marketplace](https://docs.github.com/enterprise-cloud@latest//rest/apps/marketplace)\" in the REST API documentation.",
        "description": "Someone purchased a GitHub Marketplace plan. The change will take effect on the account immediately.",
        "operationId": "marketplace-purchase/purchased",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#marketplace-purchase"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-marketplace-purchase-purchased"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "marketplace-purchase",
          "supported-webhook-types": [
            "marketplace"
          ]
        }
      }
    },
    "member-added": {
      "post": {
        "summary": "This event occurs when there is activity relating to collaborators in a repository. For more information, see \"[Adding outside collaborators to repositories in your organization](https://docs.github.com/enterprise-cloud@latest//organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization).\" For more information about the API to manage repository collaborators, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repositorycollaboratorconnection) or \"[Collaborators](https://docs.github.com/enterprise-cloud@latest//rest/collaborators/collaborators)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A GitHub user accepted an invitation to a repository.",
        "operationId": "member/added",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#member"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-member-added"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "member",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "member-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to collaborators in a repository. For more information, see \"[Adding outside collaborators to repositories in your organization](https://docs.github.com/enterprise-cloud@latest//organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization).\" For more information about the API to manage repository collaborators, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repositorycollaboratorconnection) or \"[Collaborators](https://docs.github.com/enterprise-cloud@latest//rest/collaborators/collaborators)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "Permissions were changed for a collaborator on a repository.",
        "operationId": "member/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#member"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-member-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "member",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "member-removed": {
      "post": {
        "summary": "This event occurs when there is activity relating to collaborators in a repository. For more information, see \"[Adding outside collaborators to repositories in your organization](https://docs.github.com/enterprise-cloud@latest//organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization).\" For more information about the API to manage repository collaborators, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repositorycollaboratorconnection) or \"[Collaborators](https://docs.github.com/enterprise-cloud@latest//rest/collaborators/collaborators)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A collaborator was removed from a repository.",
        "operationId": "member/removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#member"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-member-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "member",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "membership-added": {
      "post": {
        "summary": "This event occurs when there is activity relating to team membership. For more information, see \"[About teams](https://docs.github.com/enterprise-cloud@latest//organizations/organizing-members-into-teams/about-teams).\" For more information about the APIs to manage team memberships, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#team) or \"[Team members](https://docs.github.com/enterprise-cloud@latest//rest/teams/members)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "An organization member was added to a team.",
        "operationId": "membership/added",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#membership"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-membership-added"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "membership",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "membership-removed": {
      "post": {
        "summary": "This event occurs when there is activity relating to team membership. For more information, see \"[About teams](https://docs.github.com/enterprise-cloud@latest//organizations/organizing-members-into-teams/about-teams).\" For more information about the API to manage team memberships, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#team) or \"[Team members](https://docs.github.com/enterprise-cloud@latest//rest/teams/members)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "An organization member was removed from a team.",
        "operationId": "membership/removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#membership"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-membership-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "membership",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "merge-group-checks-requested": {
      "post": {
        "summary": "This event occurs when there is activity relating to a merge group in a merge queue. For more information, see \"[Managing a merge queue](https://docs.github.com/enterprise-cloud@latest//repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Merge queues\" repository permission.\n\n**Note**: The pull request merge queue feature is currently in public beta and subject to change.",
        "description": "Status checks were requested for a merge group. This happens when a merge group is created or added to by the merge queue because a pull request was queued.\n\nWhen you receive this event, you should perform checks on the head SHA and report status back using check runs or commit statuses.",
        "operationId": "merge-group/checks-requested",
        "tags": [
          "merge-queue"
        ],
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#merge-group"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-merge-group-checks-requested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "merge-group",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "merge-group-destroyed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a merge group in a merge queue. For more information, see \"[Managing a merge queue](https://docs.github.com/enterprise-cloud@latest//repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Merge queues\" repository permission.\n\n**Note**: The pull request merge queue feature is currently in public beta and subject to change.",
        "description": "The merge queue groups pull requests together to be merged. This event indicates that one of those merge groups was destroyed. This happens when a pull request is removed from the queue: any group containing that pull request is also destroyed.\n\nWhen you receive this event, you may want to cancel any checks that are running on the head SHA to avoid wasting computing resources on a merge group that will not be used.",
        "operationId": "merge-group/destroyed",
        "tags": [
          "merge-queue"
        ],
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#merge-group"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-merge-group-destroyed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "merge-group",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "meta-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a webhook itself.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Meta\" app permission.",
        "description": "The webhook was deleted.",
        "operationId": "meta/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#meta"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-meta-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "meta",
          "supported-webhook-types": [
            "marketplace",
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-closed": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-cloud@latest//issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-cloud@latest//rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was closed.",
        "operationId": "milestone/closed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-cloud@latest//issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-cloud@latest//rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was created.",
        "operationId": "milestone/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-cloud@latest//issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-cloud@latest//rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was deleted.",
        "operationId": "milestone/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-cloud@latest//issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-cloud@latest//rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was edited.",
        "operationId": "milestone/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "milestone-opened": {
      "post": {
        "summary": "This event occurs when there is activity relating to milestones. For more information, see \"[About milestones](https://docs.github.com/enterprise-cloud@latest//issues/using-labels-and-milestones-to-track-work/about-milestones).\" For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#milestone) or \"[Milestones](https://docs.github.com/enterprise-cloud@latest//rest/issues/milestones)\" in the REST API documentation.\n\nIf you want to receive an event when an issue or pull request is added to or removed from a milestone, use the `milestoned` or `demilestoned` action type for the `issues` or `pull_request` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Issues\" or \"Pull requests\" repository permissions.",
        "description": "A milestone was opened.",
        "operationId": "milestone/opened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#milestone"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-milestone-opened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "milestone",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "org-block-blocked": {
      "post": {
        "summary": "This event occurs when organization owners or moderators block or unblock a non-member from collaborating on the organization's repositories. For more information, see \"[Blocking a user from your organization](https://docs.github.com/enterprise-cloud@latest//communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization).\" For information about the APIs to manage blocked users, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#userblockedevent) or \"[Blocking users](https://docs.github.com/enterprise-cloud@latest//rest/orgs/blocking)\" in the REST API documentation.\n\nIf you want to receive an event when members are added or removed from an organization, use the `organization` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" organization permission.",
        "description": "A user was blocked from the organization.",
        "operationId": "org-block/blocked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#org-block"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-org-block-blocked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "org-block",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "org-block-unblocked": {
      "post": {
        "summary": "This event occurs when organization owners or moderators block or unblock a non-member from collaborating on the organization's repositories. For more information, see \"[Blocking a user from your organization](https://docs.github.com/enterprise-cloud@latest//communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization).\" For information about the APIs to manage blocked users, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#userblockedevent) or \"[Blocking users](https://docs.github.com/enterprise-cloud@latest//rest/orgs/blocking)\" in the REST API documentation.\n\nIf you want to receive an event when members are added or removed from an organization, use the `organization` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" organization permission.",
        "description": "A previously blocked user was unblocked from the organization.",
        "operationId": "org-block/unblocked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#org-block"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-org-block-unblocked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "org-block",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "organization-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-cloud@latest//organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-cloud@latest//rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "An organization was deleted.",
        "operationId": "organization/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "organization-member-added": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-cloud@latest//organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-cloud@latest//rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A member accepted an invitation to join an organization.",
        "operationId": "organization/member-added",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-member-added"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "organization-member-invited": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-cloud@latest//organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-cloud@latest//rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A member was invited to join the organization.",
        "operationId": "organization/member-invited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-member-invited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "organization-member-removed": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-cloud@latest//organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-cloud@latest//rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A member was removed from the organization.",
        "operationId": "organization/member-removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-member-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "organization-renamed": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization and its members. For more information, see \"[About organizations](https://docs.github.com/enterprise-cloud@latest//organizations/collaborating-with-groups-in-organizations/about-organizations).\" For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#organization) or \"[Organizations](https://docs.github.com/enterprise-cloud@latest//rest/orgs)\" in the REST API documentation.\n\nIf you want to receive an event when a non-member is blocked or unblocked from an organization, use the `org_block` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "The name of an organization was changed.",
        "operationId": "organization/renamed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#organization"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-organization-renamed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "organization",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "package-published": {
      "post": {
        "summary": "This event occurs when there is activity relating to GitHub Packages. For more information, see \"[Introduction to GitHub Packages](https://docs.github.com/enterprise-cloud@latest//packages/learn-github-packages/introduction-to-github-packages).\" For information about the APIs to manage GitHub Packages, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#package) or \"[Packages](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the \"Packages\" repository permission.",
        "description": "A package was published to a registry.",
        "operationId": "package/published",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#package"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-package-published"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "package",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "package-updated": {
      "post": {
        "summary": "This event occurs when there is activity relating to GitHub Packages. For more information, see \"[Introduction to GitHub Packages](https://docs.github.com/enterprise-cloud@latest//packages/learn-github-packages/introduction-to-github-packages).\" For information about the APIs to manage GitHub Packages, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#package) or \"[Packages](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the \"Packages\" repository permission.",
        "description": "A previously published package was updated.",
        "operationId": "package/updated",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#package"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-package-updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "package",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "page-build": {
      "post": {
        "summary": "This event occurs when there is an attempted build of a GitHub Pages site. This event occurs regardless of whether the build is successful. For more information, see \"[Configuring a publishing source for your GitHub Pages site](https://docs.github.com/enterprise-cloud@latest//pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site).\" For information about the API to manage GitHub Pages, see \"[Pages](https://docs.github.com/enterprise-cloud@latest//rest/pages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pages\" repository permission.",
        "operationId": "page-build",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#page-build"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-page-build"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "page-build",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "personal-access-token-request-approved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a request for a fine-grained personal access token to access resources that belong to a resource owner that requires approval for token access. For more information, see \"[Creating a personal access token](https://docs.github.com/enterprise-cloud@latest//authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Personal access token requests\" organization permission.\n\n**Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.",
        "description": "A fine-grained personal access token request was approved.",
        "operationId": "personal-access-token-request/approved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#personal-access-token-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "personal_access_token_request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "integration",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-personal-access-token-request-approved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "personal-access-token-request",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "personal-access-token-request-cancelled": {
      "post": {
        "summary": "This event occurs when there is activity relating to a request for a fine-grained personal access token to access resources that belong to a resource owner that requires approval for token access. For more information, see \"[Creating a personal access token](https://docs.github.com/enterprise-cloud@latest//authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Personal access token requests\" organization permission.\n\n**Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.",
        "description": "A fine-grained personal access token request was cancelled by the requester.",
        "operationId": "personal-access-token-request/cancelled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#personal-access-token-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "personal_access_token_request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "integration",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-personal-access-token-request-cancelled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "personal-access-token-request",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "personal-access-token-request-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a request for a fine-grained personal access token to access resources that belong to a resource owner that requires approval for token access. For more information, see \"[Creating a personal access token](https://docs.github.com/enterprise-cloud@latest//authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Personal access token requests\" organization permission.\n\n**Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.",
        "description": "A fine-grained personal access token request was created.",
        "operationId": "personal-access-token-request/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#personal-access-token-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "personal_access_token_request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "integration",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-personal-access-token-request-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "personal-access-token-request",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "personal-access-token-request-denied": {
      "post": {
        "summary": "This event occurs when there is activity relating to a request for a fine-grained personal access token to access resources that belong to a resource owner that requires approval for token access. For more information, see \"[Creating a personal access token](https://docs.github.com/enterprise-cloud@latest//authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Personal access token requests\" organization permission.\n\n**Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.",
        "description": "A fine-grained personal access token request was denied.",
        "operationId": "personal-access-token-request/denied",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#personal-access-token-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "personal_access_token_request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "integration",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-personal-access-token-request-denied"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "personal-access-token-request",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "ping": {
      "post": {
        "summary": "This event occurs when you create a new webhook. The ping event is a confirmation from GitHub that you configured the webhook correctly.",
        "operationId": "ping",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#ping"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-ping"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/ping"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-ping-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/ping-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "ping",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app",
            "business",
            "marketplace"
          ]
        }
      }
    },
    "project-card-converted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A note in a classic project was converted to an issue.",
        "operationId": "project-card/converted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-converted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-card-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A card was added to a classic project.",
        "operationId": "project-card/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-card-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A card on a classic project was deleted.",
        "operationId": "project-card/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-card-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A note on a classic project was edited.",
        "operationId": "project-card/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-card-moved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a card on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a column on a project, use the `project` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A card on a classic project was moved to another column or to another position in its column.",
        "operationId": "project-card/moved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-card"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-card-moved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-card",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-closed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A classic project was closed.",
        "operationId": "project/closed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-column-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a column on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a card on a project, use the `project` and `project_card` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A column was added to a classic project.",
        "operationId": "project-column/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-column"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-column-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-column",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-column-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a column on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a card on a project, use the `project` and `project_card` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A column was deleted from a classic project.",
        "operationId": "project-column/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-column"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-column-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-column",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-column-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a column on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a card on a project, use the `project` and `project_card` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "The name of a column on a classic project was changed.",
        "operationId": "project-column/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-column"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-column-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-column",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-column-moved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a column on a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a project or a card on a project, use the `project` and `project_card` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A column was moved to a new position on a classic project.",
        "operationId": "project-column/moved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project-column"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-column-moved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project-column",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A classic project was created.",
        "operationId": "project/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A classic project was deleted.",
        "operationId": "project/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "The name or description of a classic project was changed.",
        "operationId": "project/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "project-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to a classic project. For more information, see \"[About projects (classic)](https://docs.github.com/enterprise-cloud@latest//issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards).\" For information about the API to manage classic projects, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#project) or \"[Projects (classic)](https://docs.github.com/enterprise-cloud@latest//rest/projects)\" in the REST API documentation.\n\nFor activity relating to a card or column on a project, use the `project_card` and `project_column` event. For activity relating to Projects instead of Projects (classic), use the `projects_v2` event instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" repository or organization permission.",
        "description": "A classic project was closed.",
        "operationId": "project/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#project"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-project-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "project",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "projects-v2-closed": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2).\n\nFor activity relating to a item on a project, use the `projects_v2_item` event. For activity relating to Projects (classic), use the `project`, project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "A project in the organization was closed.",
        "operationId": "projects-v2/closed",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-project-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2).\n\nFor activity relating to a item on a project, use the `projects_v2_item` event. For activity relating to Projects (classic), use the `project`, project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "A project in the organization was created.",
        "operationId": "projects-v2/created",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-project-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2).\n\nFor activity relating to a item on a project, use the `projects_v2_item` event. For activity relating to Projects (classic), use the `project`, project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "A project in the organization was deleted.",
        "operationId": "projects-v2/deleted",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-project-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2).\n\nFor activity relating to a item on a project, use the `projects_v2_item` event. For activity relating to Projects (classic), use the `project`, project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "The title, description, or README of a project in the organization was changed.",
        "operationId": "projects-v2/edited",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-project-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-archived": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "An item on an organization project was archived. For more information, see \"[Archiving items from your project](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project).\"",
        "operationId": "projects-v2-item/archived",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-archived"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-converted": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "A draft issue in an organization project was converted to an issue.",
        "operationId": "projects-v2-item/converted",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-converted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "An item was added to a project in the organization.",
        "operationId": "projects-v2-item/created",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "An item was deleted from a project in the organization.",
        "operationId": "projects-v2-item/deleted",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "The values or state of an item in an organization project were changed. For example, the value of a field was updated, the body of a draft issue was changed, or a draft issue was converted to an issue.",
        "operationId": "projects-v2-item/edited",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-reordered": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "The position of an item in an organization project was changed. For example, an item was moved above or below another item in the table or board layout.",
        "operationId": "projects-v2-item/reordered",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-reordered"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-item-restored": {
      "post": {
        "summary": "This event occurs when there is activity relating to an item on an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2item).\n\nFor activity relating to a project (instead of an item on a project), use the `projects_v2` event. For activity relating to Projects (classic), use the `project`, `project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "An archived item on an organization project was restored from the archive. For more information, see \"[Archiving items from your project](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project).\"",
        "operationId": "projects-v2-item/restored",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2-item",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-item-restored"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2_item",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "projects-v2-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to an organization-level project. For more information, see \"[About Projects](https://docs.github.com/enterprise-cloud@latest//issues/planning-and-tracking-with-projects/learning-about-projects/about-projects).\" For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#projectv2).\n\nFor activity relating to a item on a project, use the `projects_v2_item` event. For activity relating to Projects (classic), use the `project`, project_card`, and `project_column` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Projects\" organization permission.\n\n**Note**: Webhook events for projects are currently in beta and subject to change. To share feedback about projects webhooks with GitHub, see the [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).",
        "description": "A project in the organization was reopened.",
        "operationId": "projects-v2/reopened",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "project-v2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-projects-v2-project-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "projects_v2",
          "supported-webhook-types": [
            "organization"
          ]
        }
      }
    },
    "public": {
      "post": {
        "summary": "This event occurs when repository visibility changes from private to public. For more information, see \"[Setting repository visibility](https://docs.github.com/enterprise-cloud@latest//repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/setting-repository-visibility).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "operationId": "public",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#public"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-public"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "public",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-assigned": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was assigned to a user.",
        "operationId": "pull-request/assigned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-assigned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-auto-merge-disabled": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Auto merge was disabled for a pull request. For more information, see \"[Automatically merging a pull request](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request).\"",
        "operationId": "pull-request/auto-merge-disabled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-auto-merge-disabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-auto-merge-enabled": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Auto merge was enabled for a pull request. For more information, see \"[Automatically merging a pull request](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request).\"",
        "operationId": "pull-request/auto-merge-enabled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-auto-merge-enabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-closed": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was closed. If `merged` is false in the webhook payload, the pull request was closed with unmerged commits. If `merged` is true in the webhook payload, the pull request was merged.",
        "operationId": "pull-request/closed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-converted-to-draft": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was converted to a draft. For more information, see \"[Changing the stage of a pull request](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request).\"",
        "operationId": "pull-request/converted-to-draft",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-converted-to-draft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-demilestoned": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was removed from a milestone.",
        "operationId": "pull-request/demilestoned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-demilestoned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-dequeued": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was removed from the merge queue.\n\n**Note**: The pull request merge queue feature is currently in limited public beta and subject to change.",
        "operationId": "pull-request/dequeued",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-dequeued"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-edited": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "The title or body of a pull request was edited.",
        "operationId": "pull-request/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-enqueued": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was added to the merge queue.\n\n**Note**: The pull request merge queue feature is currently in limited public beta and subject to change.",
        "operationId": "pull-request/enqueued",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-enqueued"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-labeled": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A label was added to a pull request.",
        "operationId": "pull-request/labeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-labeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-locked": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Conversation on a pull request was locked. For more information, see \"[Locking conversations](https://docs.github.com/enterprise-cloud@latest//communities/moderating-comments-and-conversations/locking-conversations).\"",
        "operationId": "pull-request/locked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-locked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-milestoned": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was added to a milestone.",
        "operationId": "pull-request/milestoned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-milestoned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-opened": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request was created",
        "operationId": "pull-request/opened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-opened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-ready-for-review": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A draft pull request was marked as ready for review. For more information, see \"[Changing the stage of a pull request](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request).\"",
        "operationId": "pull-request/ready-for-review",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-ready-for-review"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-reopened": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments,or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A previously closed pull request was reopened.",
        "operationId": "pull-request/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-comment-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review comment. A pull request review comment is a comment on a pull request's diff. For more information, see \"[Commenting on a pull request](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request).\" For information about the APIs to manage pull request review comments, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequestreviewcomment) or \"[Pull request review comments](https://docs.github.com/enterprise-cloud@latest//rest/pulls/comments)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request comments, or pull request review threads, use the `pull_request_review`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A comment on a pull request diff was created.",
        "operationId": "pull-request-review-comment/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-comment-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-comment-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review comment. A pull request review comment is a comment on a pull request's diff. For more information, see \"[Commenting on a pull request](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request).\" For information about the APIs to manage pull request review comments, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequestreviewcomment) or \"[Pull request review comments](https://docs.github.com/enterprise-cloud@latest//rest/pulls/comments)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request comments, or pull request review threads, use the `pull_request_review`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A comment on a pull request diff was deleted.",
        "operationId": "pull-request-review-comment/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-comment-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-comment-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review comment. A pull request review comment is a comment on a pull request's diff. For more information, see \"[Commenting on a pull request](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request).\" For information about the APIs to manage pull request review comments, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequestreviewcomment) or \"[Pull request review comments](https://docs.github.com/enterprise-cloud@latest//rest/pulls/comments)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request comments, or pull request review threads, use the `pull_request_review`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "The content of a comment on a pull request diff was changed.",
        "operationId": "pull-request-review-comment/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-comment"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-comment-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-comment",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-dismissed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review. A pull request review is a group of pull request review comments in addition to a body comment and a state. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request reviews, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequestreview) or \"[Pull request reviews](https://docs.github.com/enterprise-cloud@latest//rest/pulls/reviews)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A review on a pull request was dismissed.",
        "operationId": "pull-request-review/dismissed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-dismissed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review. A pull request review is a group of pull request review comments in addition to a body comment and a state. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request reviews, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequestreview) or \"[Pull request reviews](https://docs.github.com/enterprise-cloud@latest//rest/pulls/reviews)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "The body comment on a pull request review was edited.",
        "operationId": "pull-request-review/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-request-removed": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A request for review by a person or team was removed from a pull request.",
        "operationId": "pull-request/review-request-removed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-request-removed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-requested": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Review by a person or team was requested for a pull request. For more information, see \"[Requesting a pull request review](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review).\"",
        "operationId": "pull-request/review-requested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-requested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-submitted": {
      "post": {
        "summary": "This event occurs when there is activity relating to a pull request review. A pull request review is a group of pull request review comments in addition to a body comment and a state. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request reviews, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequestreview) or \"[Pull request reviews](https://docs.github.com/enterprise-cloud@latest//rest/pulls/reviews)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A review on a pull request was submitted.",
        "operationId": "pull-request-review/submitted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-submitted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-thread-resolved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment thread on a pull request. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request review comment threads, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequestreviewthread) or \"[Pull request reviews](https://docs.github.com/enterprise-cloud@latest//rest/pulls/reviews)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request reviews, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A comment thread on a pull request was marked as resolved.",
        "operationId": "pull-request-review-thread/resolved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-thread"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-thread-resolved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-thread",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-review-thread-unresolved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a comment thread on a pull request. For more information, see \"[About pull request reviews](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews).\" For information about the APIs to manage pull request reviews, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequestreviewthread) or \"[Pull request review comments](https://docs.github.com/enterprise-cloud@latest//rest/pulls/comments)\" in the REST API documentation.\n\nFor activity related to pull request review comments, pull request comments, or pull request reviews, use the `pull_request_review_comment`, `issue_comment`, or `pull_request_review` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A previously resolved comment thread on a pull request was marked as unresolved.",
        "operationId": "pull-request-review-thread/unresolved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request-review-thread"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-review-thread-unresolved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request-review-thread",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-synchronize": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A pull request's head branch was updated. For example, the head branch was updated from the base branch or new commits were pushed to the head branch.",
        "operationId": "pull-request/synchronize",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-synchronize"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-unassigned": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A user was unassigned from a pull request.",
        "operationId": "pull-request/unassigned",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-unassigned"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-unlabeled": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "A label was removed from a pull request.",
        "operationId": "pull-request/unlabeled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-unlabeled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "pull-request-unlocked": {
      "post": {
        "summary": "This event occurs when there is activity on a pull request. For more information, see \"[About pull requests](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\" For information about the APIs to manage pull requests, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#pullrequest) or \"[Pulls](https://docs.github.com/enterprise-cloud@latest//rest/pulls/pulls)\" in the REST API documentation.\n\nFor activity related to pull request reviews, pull request review comments, pull request comments, or pull request review threads, use the `pull_request_review`, `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread` events instead.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Pull requests\" repository permission.",
        "description": "Conversation on a pull request was unlocked. For more information, see \"[Locking conversations](https://docs.github.com/enterprise-cloud@latest//communities/moderating-comments-and-conversations/locking-conversations).\"",
        "operationId": "pull-request/unlocked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull-request"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-pull-request-unlocked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "pull-request",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "push": {
      "post": {
        "summary": "This event occurs when a commit or tag is pushed.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.\n\n**Note**: An event will not be created when more than three tags are pushed at once.",
        "operationId": "push",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-push"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "push",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "registry-package-published": {
      "post": {
        "summary": "This event occurs when there is activity relating to GitHub Packages. For more information, see \"[Introduction to GitHub Packages](https://docs.github.com/enterprise-cloud@latest//packages/learn-github-packages/introduction-to-github-packages).\" For information about the APIs to manage GitHub Packages, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#package) or \"[Packages](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the \"Packages\" repository permission.\n\n**Note**: GitHub recommends that you use the newer `package` event instead.",
        "description": "A package was published to a registry.",
        "operationId": "registry-package/published",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#registry-package"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-registry-package-published"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "registry-package",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "registry-package-updated": {
      "post": {
        "summary": "This event occurs when there is activity relating to GitHub Packages. For more information, see \"[Introduction to GitHub Packages](https://docs.github.com/enterprise-cloud@latest//packages/learn-github-packages/introduction-to-github-packages).\" For information about the APIs to manage GitHub Packages, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#package) or \"[Packages](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the \"Packages\" repository permission.\n\n**Note**: GitHub recommends that you use the newer `package` event instead",
        "description": "A package that was previously published to a registry was updated.",
        "operationId": "registry-package/updated",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#registry-package"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-registry-package-updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "registry-package",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-cloud@latest//repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-cloud@latest//rest/releases)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A draft was saved, or a release or pre-release was published without previously being saved as a draft.",
        "operationId": "release/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-cloud@latest//repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release, pre-release, or draft release was deleted.",
        "operationId": "release/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-cloud@latest//repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "The details of a release, pre-release, or draft release were edited. For more information, see \"[Managing releases in a repository](https://docs.github.com/enterprise-cloud@latest//repositories/releasing-projects-on-github/managing-releases-in-a-repository#editing-a-release).\"",
        "operationId": "release/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-prereleased": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-cloud@latest//repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release was created and identified as a pre-release. A pre-release is a release that is not ready for production and may be unstable.",
        "operationId": "release/prereleased",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-prereleased"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-published": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-cloud@latest//repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release, pre-release, or draft of a release was published.",
        "operationId": "release/published",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-published"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-released": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-cloud@latest//repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release was published, or a pre-release was changed to a release.",
        "operationId": "release/released",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-released"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "release-unpublished": {
      "post": {
        "summary": "This event occurs when there is activity relating to releases. For more information, see \"[About releases](https://docs.github.com/enterprise-cloud@latest//repositories/releasing-projects-on-github/about-releases).\" For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#release) or \"[Releases](https://docs.github.com/enterprise-cloud@latest//rest/packages)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "A release or pre-release was unpublished.",
        "operationId": "release/unpublished",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-release-unpublished"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "release",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-advisory-published": {
      "post": {
        "summary": "This event occurs when there is activity relating to a repository security advisory. For more information about repository security advisories, see \"[About GitHub Security Advisories for repositories](https://docs.github.com/enterprise-cloud@latest//code-security/repository-security-advisories/about-github-security-advisories-for-repositories).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Repository security advisories\" permission.",
        "description": "A repository security advisory was published.",
        "operationId": "repository-advisory/published",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//webhooks-and-events/webhooks/webhook-events-and-payloads#repository-advisory"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-advisory-published"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-advisory",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-advisory-reported": {
      "post": {
        "summary": "This event occurs when there is activity relating to a repository security advisory. For more information about repository security advisories, see \"[About GitHub Security Advisories for repositories](https://docs.github.com/enterprise-cloud@latest//code-security/repository-security-advisories/about-github-security-advisories-for-repositories).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Repository security advisories\" permission.",
        "description": "A private vulnerability report was submitted.",
        "operationId": "repository-advisory/reported",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//webhooks-and-events/webhooks/webhook-events-and-payloads#repository-advisory"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-advisory-reported"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-advisory",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-archived": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-cloud@latest//repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-cloud@latest//rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A repository was archived.",
        "operationId": "repository/archived",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-archived"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-cloud@latest//repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-cloud@latest//rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A repository was created.",
        "operationId": "repository/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-cloud@latest//repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-cloud@latest//rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A repository was deleted. GitHub Apps and repository webhooks will not receive this event.",
        "operationId": "repository/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-dispatch-sample.collected": {
      "post": {
        "summary": "This event occurs when a GitHub App sends a `POST` request to `/repos/{owner}/{repo}/dispatches`. For more information, see [the REST API documentation for creating a repository dispatch event](https://docs.github.com/enterprise-cloud@latest//rest/repos/repos#create-a-repository-dispatch-event).\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "description": "The `event_type` that was specified in the `POST /repos/{owner}/{repo}/dispatches` request body.",
        "operationId": "repository-dispatch/sample.collected",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-dispatch"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-dispatch-sample"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-dispatch",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "repository-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-cloud@latest//repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-cloud@latest//rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "The topics, default branch, description, or homepage of a repository was changed.",
        "operationId": "repository/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-import": {
      "post": {
        "summary": "This event occurs when a repository is imported to GitHub Enterprise Cloud. For more information, see \"[Importing a repository with GitHub Importer](https://docs.github.com/enterprise-cloud@latest//get-started/importing-your-projects-to-github/importing-source-code-to-github/importing-a-repository-with-github-importer).\" For more information about the API to manage imports, see [the REST API documentation](https://docs.github.com/enterprise-cloud@latest//rest/migrations/source-imports).",
        "operationId": "repository-import",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-import"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-import"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-import",
          "supported-webhook-types": [
            "repository",
            "organization"
          ]
        }
      }
    },
    "repository-privatized": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-cloud@latest//repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-cloud@latest//rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "The visibility of a repository was changed to `private`.",
        "operationId": "repository/privatized",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-privatized"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-publicized": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-cloud@latest//repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-cloud@latest//rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "The visibility of a repository was changed to `public`.",
        "operationId": "repository/publicized",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-publicized"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-renamed": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-cloud@latest//repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-cloud@latest//rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "The name of a repository was changed.",
        "operationId": "repository/renamed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-renamed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-transferred": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-cloud@latest//repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-cloud@latest//rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Ownership of the repository was transferred to a user or organization account. This event is only sent to the account where the ownership is transferred. To receive the `repository.transferred` event, the new owner account must have the GitHub App installed, and the App must be subscribed to \"Repository\" events.",
        "operationId": "repository/transferred",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-transferred"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-unarchived": {
      "post": {
        "summary": "This event occurs when there is activity relating to repositories. For more information, see \"[About repositories](https://docs.github.com/enterprise-cloud@latest//repositories/creating-and-managing-repositories/about-repositories).\" For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#repository) or \"[Repositories](https://docs.github.com/enterprise-cloud@latest//rest/repos)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "A previously archived repository was unarchived.",
        "operationId": "repository/unarchived",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-unarchived"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "repository-vulnerability-alert-create": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security vulnerability alert in a repository.\n\n**Note**: This event is deprecated. Use the `dependabot_alert` event instead.",
        "description": "A repository vulnerability alert was created.",
        "operationId": "repository-vulnerability-alert/create",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-vulnerability-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-vulnerability-alert-create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-vulnerability-alert",
          "supported-webhook-types": [
            "repository",
            "organization"
          ]
        }
      }
    },
    "repository-vulnerability-alert-dismiss": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security vulnerability alert in a repository.\n\n**Note**: This event is deprecated. Use the `dependabot_alert` event instead.",
        "description": "A repository vulnerability alert was dismissed.",
        "operationId": "repository-vulnerability-alert/dismiss",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-vulnerability-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-vulnerability-alert-dismiss"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-vulnerability-alert",
          "supported-webhook-types": [
            "repository",
            "organization"
          ]
        }
      }
    },
    "repository-vulnerability-alert-reopen": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security vulnerability alert in a repository.\n\n**Note**: This event is deprecated. Use the `dependabot_alert` event instead.",
        "description": "A previously dismissed or resolved repository vulnerability alert was reopened.",
        "operationId": "repository-vulnerability-alert/reopen",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-vulnerability-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-vulnerability-alert-reopen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-vulnerability-alert",
          "supported-webhook-types": [
            "repository",
            "organization"
          ]
        }
      }
    },
    "repository-vulnerability-alert-resolve": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security vulnerability alert in a repository.\n\n**Note**: This event is deprecated. Use the `dependabot_alert` event instead.",
        "description": "A repository vulnerability alert was marked as resolved.",
        "operationId": "repository-vulnerability-alert/resolve",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository-vulnerability-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-repository-vulnerability-alert-resolve"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "repository-vulnerability-alert",
          "supported-webhook-types": [
            "repository",
            "organization"
          ]
        }
      }
    },
    "secret-scanning-alert-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a secret scanning alert. For more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-cloud@latest//rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alert locations, use the `secret_scanning_alert_location` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A secret scanning alert was created.",
        "operationId": "secret-scanning-alert/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "secret-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "secret-scanning-alert-location-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to the locations of a secret in a secret scanning alert.\n\nFor more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-cloud@latest//rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alerts, use the `secret_scanning_alert` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A new instance of a previously detected secret was detected in a repository, and the location of the secret was added to the existing alert.",
        "operationId": "secret-scanning-alert-location/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret_scanning_alert_location"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-location-created"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/secret-scanning-alert-location-created"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-location-created-form-encoded"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/secret-scanning-alert-location-created-form-encoded"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "webhooks",
          "subcategory": "secret_scanning_alert_location",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "secret-scanning-alert-reopened": {
      "post": {
        "summary": "This event occurs when there is activity relating to a secret scanning alert. For more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-cloud@latest//rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alert locations, use the `secret_scanning_alert_location` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A previously closed secret scanning alert was reopened.",
        "operationId": "secret-scanning-alert/reopened",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-reopened"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "secret-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "secret-scanning-alert-resolved": {
      "post": {
        "summary": "This event occurs when there is activity relating to a secret scanning alert. For more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-cloud@latest//rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alert locations, use the `secret_scanning_alert_location` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A secret scanning alert was closed.",
        "operationId": "secret-scanning-alert/resolved",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-resolved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "secret-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "secret-scanning-alert-revoked": {
      "post": {
        "summary": "This event occurs when there is activity relating to a secret scanning alert. For more information about secret scanning, see \"[About secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/about-secret-scanning).\" For information about the API to manage secret scanning alerts, see \"[Secret scanning](https://docs.github.com/enterprise-cloud@latest//rest/secret-scanning)\" in the REST API documentation.\n\nFor activity relating to secret scanning alert locations, use the `secret_scanning_alert_location` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Secret scanning alerts\" repository permission.",
        "description": "A secret scanning alert was marked as revoked.",
        "operationId": "secret-scanning-alert/revoked",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#secret-scanning-alert"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-secret-scanning-alert-revoked"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "secret-scanning-alert",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "security-advisory-published": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security advisory that was reviewed by GitHub. A GitHub-reviewed security advisory provides information about security-related vulnerabilities in software on GitHub. For more information about security advisories, see \"[About GitHub Security Advisories for repositories](https://docs.github.com/enterprise-cloud@latest//code-security/repository-security-advisories/about-github-security-advisories-for-repositories).\" For information about the API to manage security advisories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#securityadvisory).\n\nGitHub Dependabot alerts are also powered by the security advisory dataset. For more information, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\"",
        "description": "A security advisory was published to the GitHub community.",
        "operationId": "security-advisory/published",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#security-advisory"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-security-advisory-published"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "security-advisory",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "security-advisory-updated": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security advisory that was reviewed by GitHub. A GitHub-reviewed security advisory provides information about security-related vulnerabilities in software on GitHub. For more information about security advisories, see \"[About GitHub Security Advisories for repositories](https://docs.github.com/enterprise-cloud@latest//code-security/repository-security-advisories/about-github-security-advisories-for-repositories).\" For information about the API to manage security advisories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#securityadvisory).\n\nGitHub Dependabot alerts are also powered by the security advisory dataset. For more information, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\"",
        "description": "The metadata or description of a security advisory was changed, or the security advisory was withdrawn.",
        "operationId": "security-advisory/updated",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#security-advisory"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-security-advisory-updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "security-advisory",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "security-advisory-withdrawn": {
      "post": {
        "summary": "This event occurs when there is activity relating to a security advisory that was reviewed by GitHub. A GitHub-reviewed security advisory provides information about security-related vulnerabilities in software on GitHub. For more information about security advisories, see \"[About GitHub Security Advisories for repositories](https://docs.github.com/enterprise-cloud@latest//code-security/repository-security-advisories/about-github-security-advisories-for-repositories).\" For information about the API to manage security advisories, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#securityadvisory).\n\nGitHub Dependabot alerts are also powered by the security advisory dataset. For more information, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\"",
        "description": "A previously published security advisory was withdrawn.",
        "operationId": "security-advisory/withdrawn",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#security-advisory"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-security-advisory-withdrawn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "security-advisory",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "security-and-analysis": {
      "post": {
        "summary": "This event occurs when code security and analysis features are enabled or disabled for a repository. For more information, see \"[GitHub security features](https://docs.github.com/enterprise-cloud@latest//code-security/getting-started/github-security-features).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Administration\" repository permission.",
        "operationId": "security-and-analysis",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#security-and-analysis"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-security-and-analysis"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "security-and-analysis",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "sponsorship-cancelled": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-cloud@latest//sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-cloud@latest//sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsorship was cancelled and the last billing cycle has ended.\n\nThis event is only sent when a recurring (monthly) sponsorship is cancelled; it is not sent for one-time sponsorships.",
        "operationId": "sponsorship/cancelled",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-cancelled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-cloud@latest//sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-cloud@latest//sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsor created a sponsorship for a sponsored account. This event occurs once the payment is successfully processed.",
        "operationId": "sponsorship/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-cloud@latest//sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-cloud@latest//sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A monthly sponsor changed who can see their sponsorship. If you recognize your sponsors publicly, you may want to update your sponsor recognition to reflect the change when this event occurs.",
        "operationId": "sponsorship/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-pending-cancellation": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-cloud@latest//sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-cloud@latest//sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsor scheduled a cancellation for their sponsorship. The cancellation will become effective on their next billing date.\n\nThis event is only sent when a recurring (monthly) sponsorship is cancelled; it is not sent for one-time sponsorships.",
        "operationId": "sponsorship/pending-cancellation",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-pending-cancellation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-pending-tier-change": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-cloud@latest//sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-cloud@latest//sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsor scheduled a downgrade to a lower sponsorship tier. The new tier will become effective on their next billing date.",
        "operationId": "sponsorship/pending-tier-change",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-pending-tier-change"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "sponsorship-tier-changed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a sponsorship listing. For more information, see \"[About GitHub Sponsors](https://docs.github.com/enterprise-cloud@latest//sponsors/getting-started-with-github-sponsors/about-github-sponsors).\" For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#sponsorship).\n\nYou can only create a sponsorship webhook on GitHub.com. For more information, see \"[Configuring webhooks for events in your sponsored account](https://docs.github.com/enterprise-cloud@latest//sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account).\"",
        "description": "A sponsor changed the tier of their sponsorship and the change has taken effect. If a sponsor upgraded their tier, the change took effect immediately. If a sponsor downgraded their tier, the change took effect at the beginning of the sponsor's next billing cycle.",
        "operationId": "sponsorship/tier-changed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#sponsorship"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-sponsorship-tier-changed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "sponsorship",
          "supported-webhook-types": [
            "sponsors_listing"
          ]
        }
      }
    },
    "star-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to repository stars. For more information about stars, see \"[Saving repositories with stars](https://docs.github.com/enterprise-cloud@latest//get-started/exploring-projects-on-github/saving-repositories-with-stars).\" For information about the APIs to manage stars, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#starredrepositoryconnection) or \"[Starring](https://docs.github.com/enterprise-cloud@latest//rest/activity/starring)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Someone starred a repository.",
        "operationId": "star/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#star"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-star-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "star",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "star-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to repository stars. For more information about stars, see \"[Saving repositories with stars](https://docs.github.com/enterprise-cloud@latest//get-started/exploring-projects-on-github/saving-repositories-with-stars).\" For information about the APIs to manage stars, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#starredrepositoryconnection) or \"[Starring](https://docs.github.com/enterprise-cloud@latest//rest/activity/starring)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Someone unstarred the repository.",
        "operationId": "star/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#star"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-star-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "star",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "status": {
      "post": {
        "summary": "This event occurs when the status of a Git commit changes. For example, commits can be marked as `error`, `failure`, `pending`, or `success`. For more information, see \"[About status checks](https://docs.github.com/enterprise-cloud@latest//pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks).\" For information about the APIs to manage commit statuses, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#status) or \"[Statuses](https://docs.github.com/enterprise-cloud@latest//rest/reference/commits#commit-statuses)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Commit statuses\" repository permission.",
        "operationId": "status",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#status"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "status",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "team-add": {
      "post": {
        "summary": "This event occurs when a team is added to a repository.\nFor more information, see \"[Managing teams and people with access to your repository](https://docs.github.com/enterprise-cloud@latest//repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository).\"\n\nFor activity relating to teams, see the `teams` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "operationId": "team-add",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team-add"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-add"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team-add",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "team-added-to-repository": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-cloud@latest//organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A team was granted access to a repository.",
        "operationId": "team/added-to-repository",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-added-to-repository"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "team-created": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-cloud@latest//organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A team was created.",
        "operationId": "team/created",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "team-deleted": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-cloud@latest//organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A team was deleted.",
        "operationId": "team/deleted",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-deleted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "team-edited": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-cloud@latest//organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "The name, description, or visibility of a team was changed.",
        "operationId": "team/edited",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-edited"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "team-removed-from-repository": {
      "post": {
        "summary": "This event occurs when there is activity relating to teams in an organization.\nFor more information, see \"[About teams](https://docs.github.com/enterprise-cloud@latest//organizations/organizing-members-into-teams/about-teams).\"\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Members\" organization permission.",
        "description": "A team's access to a repository was removed.",
        "operationId": "team/removed-from-repository",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#team"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-team-removed-from-repository"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "team",
          "supported-webhook-types": [
            "organization",
            "business",
            "app"
          ]
        }
      }
    },
    "watch-started": {
      "post": {
        "summary": "This event occurs when there is activity relating to watching, or subscribing to, a repository. For more information about watching, see \"[Managing your subscriptions](https://docs.github.com/enterprise-cloud@latest//account-and-profile/managing-subscriptions-and-notifications-on-github/managing-subscriptions-for-activity-on-github/managing-your-subscriptions).\" For information about the APIs to manage watching, see \"[Watching](https://docs.github.com/enterprise-cloud@latest//rest/activity/watching)\" in the REST API documentation.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Metadata\" repository permission.",
        "description": "Someone started watching the repository.",
        "operationId": "watch/started",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#watch"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-watch-started"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "watch",
          "supported-webhook-types": [
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-dispatch": {
      "post": {
        "summary": "This event occurs when a GitHub Actions workflow is manually triggered. For more information, see \"[Manually running a workflow](https://docs.github.com/enterprise-cloud@latest//actions/managing-workflow-runs/manually-running-a-workflow).\"\n\nFor activity relating to workflow runs, use the `workflow_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Contents\" repository permission.",
        "operationId": "workflow-dispatch",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-dispatch"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-dispatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-dispatch",
          "supported-webhook-types": [
            "app"
          ]
        }
      }
    },
    "workflow-job-completed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a job in a GitHub Actions workflow. For more information, see \"[Using jobs in a workflow](https://docs.github.com/enterprise-cloud@latest//actions/using-jobs/using-jobs-in-a-workflow).\" For information about the API to manage workflow jobs, see \"[Workflow jobs](https://docs.github.com/enterprise-cloud@latest//rest/actions/workflow-jobs)\" in the REST API documentation.\n\nFor activity relating to a workflow run instead of a job in a workflow run, use the `workflow_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A job in a workflow run finished. This event occurs when a job in a workflow is completed, regardless of whether the job was successful or unsuccessful.",
        "operationId": "workflow-job/completed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-job"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-job-completed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-job",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-job-in-progress": {
      "post": {
        "summary": "This event occurs when there is activity relating to a job in a GitHub Actions workflow. For more information, see \"[Using jobs in a workflow](https://docs.github.com/enterprise-cloud@latest//actions/using-jobs/using-jobs-in-a-workflow).\" For information about the API to manage workflow jobs, see \"[Workflow jobs](https://docs.github.com/enterprise-cloud@latest//rest/actions/workflow-jobs)\" in the REST API documentation.\n\nFor activity relating to a workflow run instead of a job in a workflow run, use the `workflow_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A job in a workflow run started processing on a runner.",
        "operationId": "workflow-job/in-progress",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-job"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-job-in-progress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-job",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-job-queued": {
      "post": {
        "summary": "This event occurs when there is activity relating to a job in a GitHub Actions workflow. For more information, see \"[Using jobs in a workflow](https://docs.github.com/enterprise-cloud@latest//actions/using-jobs/using-jobs-in-a-workflow).\" For information about the API to manage workflow jobs, see \"[Workflow jobs](https://docs.github.com/enterprise-cloud@latest//rest/actions/workflow-jobs)\" in the REST API documentation.\n\nFor activity relating to a workflow run instead of a job in a workflow run, use the `workflow_run` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A job in a workflow run was created.",
        "operationId": "workflow-job/queued",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-job"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-job-queued"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-job",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-job-waiting": {
      "post": {
        "summary": "This event occurs when there is activity relating to a job in a GitHub Actions workflow.\n\nFor more information, see \"[Using jobs in a workflow](https://docs.github.com/enterprise-cloud@latest//actions/using-jobs/using-jobs-in-a-workflow).\" For information about the API to manage workflow jobs, see [the REST API documentation](https://docs.github.com/enterprise-cloud@latest//rest/actions/workflow-jobs).\n\nFor activity relating to a workflow run instead of a job in a workflow run, see the `workflow_run` event.\n\nTo install this event on a GitHub App, the app must have at least read-level access for the Actions metadata permission.",
        "description": "A job in a workflow run was created and is waiting for approvals.",
        "operationId": "workflow-job/waiting",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-job"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-job-waiting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-job",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-run-completed": {
      "post": {
        "summary": "This event occurs when there is activity relating to a run of a GitHub Actions workflow. For more information, see \"[About workflows](https://docs.github.com/enterprise-cloud@latest//actions/using-workflows/about-workflows).\" For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#workflowrun) or \"[Workflow runs](https://docs.github.com/enterprise-cloud@latest//rest/actions/workflow-runs)\" in the REST API documentation.\n\nFor activity relating to a job in a workflow run, use the `workflow_job` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A workflow run finished. This event occurs when a workflow run is completed, regardless of whether the workflow was successful or unsuccessful.",
        "operationId": "workflow-run/completed",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-run-completed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-run",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-run-in-progress": {
      "post": {
        "summary": "This event occurs when there is activity relating to a run of a GitHub Actions workflow. For more information, see \"[About workflows](https://docs.github.com/enterprise-cloud@latest//actions/using-workflows/about-workflows).\" For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#workflowrun) or \"[Workflow runs](https://docs.github.com/enterprise-cloud@latest//rest/actions/workflow-runs)\" in the REST API documentation.\n\nFor activity relating to a job in a workflow run, use the `workflow_job` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A workflow run started processing on a runner.",
        "operationId": "workflow-run/in-progress",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-run-in-progress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-run",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    },
    "workflow-run-requested": {
      "post": {
        "summary": "This event occurs when there is activity relating to a run of a GitHub Actions workflow. For more information, see \"[About workflows](https://docs.github.com/enterprise-cloud@latest//actions/using-workflows/about-workflows).\" For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/enterprise-cloud@latest//graphql/reference/objects#workflowrun) or \"[Workflow runs](https://docs.github.com/enterprise-cloud@latest//rest/actions/workflow-runs)\" in the REST API documentation.\n\nFor activity relating to a job in a workflow run, use the `workflow_job` event.\n\nTo subscribe to this event, a GitHub App must have at least read-level access for the \"Actions\" repository permission.",
        "description": "A workflow run was triggered.",
        "operationId": "workflow-run/requested",
        "externalDocs": {
          "url": "https://docs.github.com/enterprise-cloud@latest//developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow-run"
        },
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "example": "GitHub-Hookshot/123abc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Id",
            "in": "header",
            "example": 12312312,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Event",
            "in": "header",
            "example": "issues",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Id",
            "in": "header",
            "example": 123123,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Github-Hook-Installation-Target-Type",
            "in": "header",
            "example": "repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-GitHub-Delivery",
            "in": "header",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Hub-Signature-256",
            "in": "header",
            "example": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook-workflow-run-requested"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "category": "webhooks",
          "subcategory": "workflow-run",
          "supported-webhook-types": [
            "business",
            "repository",
            "organization",
            "app"
          ]
        }
      }
    }
  },
  "components": {
    "parameters": {
      "enterprise-or-org": {
        "name": "enterprise_or_org",
        "description": "The slug version of the enterprise name or the login of an organization.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enterprise": {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "per-page": {
        "name": "per_page",
        "description": "The number of results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        }
      },
      "page": {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "org-id": {
        "name": "org_id",
        "description": "The unique identifier of the organization.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "visible-to-organization": {
        "name": "visible_to_organization",
        "description": "Only return runner groups that are allowed to be used by this organization.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "runner-group-id": {
        "name": "runner_group_id",
        "description": "Unique identifier of the self-hosted runner group.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "runner-id": {
        "name": "runner_id",
        "description": "Unique identifier of the self-hosted runner.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "runner-label-name": {
        "name": "name",
        "description": "The name of a self-hosted runner's custom label.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "audit-log-enterprise-phrase": {
        "name": "phrase",
        "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-cloud@latest//admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/searching-the-audit-log-for-your-enterprise#searching-the-audit-log).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "audit-log-include": {
        "name": "include",
        "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "web",
            "git",
            "all"
          ]
        }
      },
      "audit-log-after": {
        "name": "after",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events after this cursor.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "audit-log-before": {
        "name": "before",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events before this cursor.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "audit-log-order": {
        "name": "order",
        "description": "The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\nThe default is `desc`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ]
        }
      },
      "tool-name": {
        "name": "tool_name",
        "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
        }
      },
      "tool-guid": {
        "name": "tool_guid",
        "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
        }
      },
      "pagination-before": {
        "name": "before",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "pagination-after": {
        "name": "after",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "direction": {
        "name": "direction",
        "description": "The direction to sort the results by.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        }
      },
      "enterprise-security-product": {
        "name": "security_product",
        "in": "path",
        "description": "The security feature to enable or disable.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "advanced_security",
            "dependabot_alerts",
            "secret_scanning",
            "secret_scanning_push_protection"
          ]
        }
      },
      "enterprise-security-product-enablement": {
        "name": "enablement",
        "in": "path",
        "description": "The action to take.\n\n`enable_all` means to enable the specified security feature for all repositories in the enterprise.\n`disable_all` means to disable the specified security feature for all repositories in the enterprise.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "enable_all",
            "disable_all"
          ]
        }
      },
      "org": {
        "name": "org",
        "description": "The organization name. The name is not case sensitive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "visible-to-repository": {
        "name": "visible_to_repository",
        "description": "Only return runner groups that are allowed to be used by this repository.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "repository-id": {
        "name": "repository_id",
        "description": "The unique identifier of the repository.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "secret-name": {
        "name": "secret_name",
        "description": "The name of the secret.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "audit-log-phrase": {
        "name": "phrase",
        "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "role-id": {
        "name": "role_id",
        "description": "The unique identifier of the role.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "group-id": {
        "name": "group_id",
        "description": "The unique identifier of the group.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "team-slug": {
        "name": "team_slug",
        "description": "The slug of the team name.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "owner": {
        "name": "owner",
        "description": "The account owner of the repository. The name is not case sensitive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repo": {
        "name": "repo",
        "description": "The name of the repository. The name is not case sensitive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "git-ref": {
        "name": "ref",
        "description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/code-scanning-ref"
        }
      },
      "scim-user-id": {
        "name": "scim_user_id",
        "description": "The unique identifier of the SCIM user.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "team-id": {
        "name": "team_id",
        "description": "The unique identifier of the team.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "schemas": {
      "server-statistics": {
        "title": "Server Statistics Proxy Endpoint",
        "description": "Response of S4 Proxy endpoint that provides GHES statistics",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "server_id": {
              "type": "string"
            },
            "collection_date": {
              "type": "string"
            },
            "schema_version": {
              "type": "string"
            },
            "ghes_version": {
              "type": "string"
            },
            "host_name": {
              "type": "string"
            },
            "github_connect": {
              "type": "object",
              "properties": {
                "features_enabled": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "ghe_stats": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "object",
                  "properties": {
                    "total_commit_comments": {
                      "type": "integer"
                    },
                    "total_gist_comments": {
                      "type": "integer"
                    },
                    "total_issue_comments": {
                      "type": "integer"
                    },
                    "total_pull_request_comments": {
                      "type": "integer"
                    }
                  }
                },
                "gists": {
                  "type": "object",
                  "properties": {
                    "total_gists": {
                      "type": "integer"
                    },
                    "private_gists": {
                      "type": "integer"
                    },
                    "public_gists": {
                      "type": "integer"
                    }
                  }
                },
                "hooks": {
                  "type": "object",
                  "properties": {
                    "total_hooks": {
                      "type": "integer"
                    },
                    "active_hooks": {
                      "type": "integer"
                    },
                    "inactive_hooks": {
                      "type": "integer"
                    }
                  }
                },
                "issues": {
                  "type": "object",
                  "properties": {
                    "total_issues": {
                      "type": "integer"
                    },
                    "open_issues": {
                      "type": "integer"
                    },
                    "closed_issues": {
                      "type": "integer"
                    }
                  }
                },
                "milestones": {
                  "type": "object",
                  "properties": {
                    "total_milestones": {
                      "type": "integer"
                    },
                    "open_milestones": {
                      "type": "integer"
                    },
                    "closed_milestones": {
                      "type": "integer"
                    }
                  }
                },
                "orgs": {
                  "type": "object",
                  "properties": {
                    "total_orgs": {
                      "type": "integer"
                    },
                    "disabled_orgs": {
                      "type": "integer"
                    },
                    "total_teams": {
                      "type": "integer"
                    },
                    "total_team_members": {
                      "type": "integer"
                    }
                  }
                },
                "pages": {
                  "type": "object",
                  "properties": {
                    "total_pages": {
                      "type": "integer"
                    }
                  }
                },
                "pulls": {
                  "type": "object",
                  "properties": {
                    "total_pulls": {
                      "type": "integer"
                    },
                    "merged_pulls": {
                      "type": "integer"
                    },
                    "mergeable_pulls": {
                      "type": "integer"
                    },
                    "unmergeable_pulls": {
                      "type": "integer"
                    }
                  }
                },
                "repos": {
                  "type": "object",
                  "properties": {
                    "total_repos": {
                      "type": "integer"
                    },
                    "root_repos": {
                      "type": "integer"
                    },
                    "fork_repos": {
                      "type": "integer"
                    },
                    "org_repos": {
                      "type": "integer"
                    },
                    "total_pushes": {
                      "type": "integer"
                    },
                    "total_wikis": {
                      "type": "integer"
                    }
                  }
                },
                "users": {
                  "type": "object",
                  "properties": {
                    "total_users": {
                      "type": "integer"
                    },
                    "admin_users": {
                      "type": "integer"
                    },
                    "suspended_users": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "dormant_users": {
              "type": "object",
              "properties": {
                "total_dormant_users": {
                  "type": "integer"
                },
                "dormancy_threshold": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "actions-cache-usage-org-enterprise": {
        "type": "object",
        "properties": {
          "total_active_caches_count": {
            "type": "integer",
            "description": "The count of active caches across all repositories of an enterprise or an organization."
          },
          "total_active_caches_size_in_bytes": {
            "type": "integer",
            "description": "The total size in bytes of all active cache items across all repositories of an enterprise or an organization."
          }
        },
        "required": [
          "total_active_caches_count",
          "total_active_caches_size_in_bytes"
        ]
      },
      "actions-oidc-custom-issuer-policy-for-enterprise": {
        "type": "object",
        "properties": {
          "include_enterprise_slug": {
            "description": "Whether the enterprise customer requested a custom issuer URL.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "actions-enterprise-permissions": {
        "type": "object",
        "properties": {
          "enabled_organizations": {
            "$ref": "#/components/schemas/enabled-organizations"
          },
          "selected_organizations_url": {
            "type": "string",
            "description": "The API URL to use to get or set the selected organizations that are allowed to run GitHub Actions, when `enabled_organizations` is set to `selected`."
          },
          "allowed_actions": {
            "$ref": "#/components/schemas/allowed-actions"
          },
          "selected_actions_url": {
            "$ref": "#/components/schemas/selected-actions-url"
          }
        },
        "required": [
          "enabled_organizations"
        ]
      },
      "enabled-organizations": {
        "type": "string",
        "description": "The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions.",
        "enum": [
          "all",
          "none",
          "selected"
        ]
      },
      "allowed-actions": {
        "type": "string",
        "description": "The permissions policy that controls the actions and reusable workflows that are allowed to run.",
        "enum": [
          "all",
          "local_only",
          "selected"
        ]
      },
      "organization-simple": {
        "title": "Organization Simple",
        "description": "A GitHub organization.",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "github"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDEyOk9yZ2FuaXphdGlvbjE="
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/repos"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/events"
          },
          "hooks_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/hooks"
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/issues"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/members{/member}"
          },
          "public_members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/public_members{/member}"
          },
          "avatar_url": {
            "type": "string",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "description": {
            "type": "string",
            "example": "A great organization",
            "nullable": true
          }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description"
        ]
      },
      "selected-actions": {
        "type": "object",
        "properties": {
          "github_owned_allowed": {
            "type": "boolean",
            "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization."
          },
          "verified_allowed": {
            "type": "boolean",
            "description": "Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Marketplace verified creators."
          },
          "patterns_allowed": {
            "type": "array",
            "description": "Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "actions-get-default-workflow-permissions": {
        "type": "object",
        "properties": {
          "default_workflow_permissions": {
            "$ref": "#/components/schemas/actions-default-workflow-permissions"
          },
          "can_approve_pull_request_reviews": {
            "$ref": "#/components/schemas/actions-can-approve-pull-request-reviews"
          }
        },
        "required": [
          "default_workflow_permissions",
          "can_approve_pull_request_reviews"
        ]
      },
      "actions-set-default-workflow-permissions": {
        "type": "object",
        "properties": {
          "default_workflow_permissions": {
            "$ref": "#/components/schemas/actions-default-workflow-permissions"
          },
          "can_approve_pull_request_reviews": {
            "$ref": "#/components/schemas/actions-can-approve-pull-request-reviews"
          }
        }
      },
      "runner-groups-enterprise": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "selected_organizations_url": {
            "type": "string"
          },
          "runners_url": {
            "type": "string"
          },
          "allows_public_repositories": {
            "type": "boolean"
          },
          "workflow_restrictions_read_only": {
            "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
            "type": "boolean",
            "default": false
          },
          "restricted_to_workflows": {
            "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
            "type": "boolean",
            "default": false
          },
          "selected_workflows": {
            "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
              "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main"
            }
          }
        },
        "required": [
          "id",
          "name",
          "visibility",
          "allows_public_repositories",
          "default",
          "runners_url"
        ]
      },
      "runner": {
        "title": "Self hosted runners",
        "description": "A self hosted runner",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the runner.",
            "type": "integer",
            "example": 5
          },
          "runner_group_id": {
            "description": "The id of the runner group.",
            "type": "integer",
            "example": 1
          },
          "name": {
            "description": "The name of the runner.",
            "type": "string",
            "example": "iMac"
          },
          "os": {
            "description": "The Operating System of the runner.",
            "type": "string",
            "example": "macos"
          },
          "status": {
            "description": "The status of the runner.",
            "type": "string",
            "example": "online"
          },
          "busy": {
            "type": "boolean"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runner-label"
            }
          }
        },
        "required": [
          "id",
          "name",
          "os",
          "status",
          "busy",
          "labels"
        ]
      },
      "runner-application": {
        "title": "Runner Application",
        "description": "Runner Application",
        "type": "object",
        "properties": {
          "os": {
            "type": "string"
          },
          "architecture": {
            "type": "string"
          },
          "download_url": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "temp_download_token": {
            "description": "A short lived bearer token used to download the runner, if needed.",
            "type": "string"
          },
          "sha256_checksum": {
            "type": "string"
          }
        },
        "required": [
          "os",
          "architecture",
          "download_url",
          "filename"
        ]
      },
      "authentication-token": {
        "title": "Authentication Token",
        "description": "Authentication Token",
        "type": "object",
        "properties": {
          "token": {
            "description": "The token used for authentication",
            "type": "string",
            "example": "v1.1f699f1069f60xxx"
          },
          "expires_at": {
            "description": "The time this token expires",
            "type": "string",
            "format": "date-time",
            "example": "2016-07-11T22:14:10Z"
          },
          "permissions": {
            "type": "object",
            "example": {
              "issues": "read",
              "deployments": "write"
            }
          },
          "repositories": {
            "description": "The repositories this token has access to",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/repository"
            }
          },
          "single_file": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          }
        },
        "required": [
          "token",
          "expires_at"
        ]
      },
      "announcement-banner": {
        "title": "Announcement Banner",
        "description": "Announcement at either the repository, organization, or enterprise level",
        "type": "object",
        "properties": {
          "announcement": {
            "$ref": "#/components/schemas/announcement-message"
          },
          "expires_at": {
            "$ref": "#/components/schemas/announcement-expiration"
          },
          "user_dismissible": {
            "$ref": "#/components/schemas/announcement-user-dismissible"
          }
        },
        "required": [
          "announcement",
          "expires_at",
          "user_dismissible"
        ]
      },
      "announcement": {
        "title": "Enterprise Announcement",
        "description": "Enterprise global announcement",
        "type": "object",
        "properties": {
          "announcement": {
            "$ref": "#/components/schemas/announcement-message"
          },
          "expires_at": {
            "$ref": "#/components/schemas/announcement-expiration"
          }
        },
        "required": [
          "announcement"
        ]
      },
      "audit-log-event": {
        "type": "object",
        "properties": {
          "@timestamp": {
            "type": "integer",
            "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time)."
          },
          "action": {
            "type": "string",
            "description": "The name of the action that was performed, for example `user.login` or `repo.create`."
          },
          "active": {
            "type": "boolean"
          },
          "active_was": {
            "type": "boolean"
          },
          "actor": {
            "type": "string",
            "description": "The actor who performed the action."
          },
          "actor_id": {
            "type": "integer",
            "description": "The id of the actor who performed the action."
          },
          "actor_location": {
            "type": "object",
            "properties": {
              "country_name": {
                "type": "string"
              }
            }
          },
          "data": {
            "type": "object",
            "additionalProperties": true
          },
          "org_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer"
          },
          "blocked_user": {
            "type": "string",
            "description": "The username of the account being blocked."
          },
          "business": {
            "type": "string"
          },
          "config": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "config_was": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "content_type": {
            "type": "string"
          },
          "operation_type": {
            "type": "string"
          },
          "created_at": {
            "type": "integer",
            "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time)."
          },
          "deploy_key_fingerprint": {
            "type": "string"
          },
          "_document_id": {
            "type": "string",
            "description": "A unique identifier for an audit event."
          },
          "emoji": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "events_were": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "explanation": {
            "type": "string"
          },
          "fingerprint": {
            "type": "string"
          },
          "hook_id": {
            "type": "integer"
          },
          "limited_availability": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "old_user": {
            "type": "string"
          },
          "openssh_public_key": {
            "type": "string"
          },
          "org": {
            "type": "string"
          },
          "previous_visibility": {
            "type": "string"
          },
          "read_only": {
            "type": "boolean"
          },
          "repo": {
            "type": "string",
            "description": "The name of the repository."
          },
          "repository": {
            "type": "string",
            "description": "The name of the repository."
          },
          "repository_public": {
            "type": "boolean"
          },
          "target_login": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "transport_protocol": {
            "type": "integer",
            "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data."
          },
          "transport_protocol_name": {
            "type": "string",
            "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data."
          },
          "user": {
            "type": "string",
            "description": "The user that was affected by the action performed (if available)."
          },
          "visibility": {
            "type": "string",
            "description": "The repository visibility, for example `public` or `private`."
          }
        }
      },
      "code-scanning-alert-state": {
        "type": "string",
        "description": "State of a code scanning alert.",
        "enum": [
          "open",
          "closed",
          "dismissed",
          "fixed"
        ]
      },
      "code-scanning-organization-alert-items": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/alert-number"
          },
          "created_at": {
            "$ref": "#/components/schemas/alert-created-at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/alert-updated-at"
          },
          "url": {
            "$ref": "#/components/schemas/alert-url"
          },
          "html_url": {
            "$ref": "#/components/schemas/alert-html-url"
          },
          "instances_url": {
            "$ref": "#/components/schemas/alert-instances-url"
          },
          "state": {
            "$ref": "#/components/schemas/code-scanning-alert-state"
          },
          "fixed_at": {
            "$ref": "#/components/schemas/alert-fixed-at"
          },
          "dismissed_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "dismissed_at": {
            "$ref": "#/components/schemas/alert-dismissed-at"
          },
          "dismissed_reason": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
          },
          "dismissed_comment": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-comment"
          },
          "rule": {
            "$ref": "#/components/schemas/code-scanning-alert-rule"
          },
          "tool": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool"
          },
          "most_recent_instance": {
            "$ref": "#/components/schemas/code-scanning-alert-instance"
          },
          "repository": {
            "$ref": "#/components/schemas/simple-repository"
          }
        },
        "required": [
          "number",
          "created_at",
          "url",
          "html_url",
          "instances_url",
          "state",
          "dismissed_by",
          "dismissed_at",
          "dismissed_reason",
          "rule",
          "tool",
          "most_recent_instance",
          "repository"
        ]
      },
      "enterprise-security-analysis-settings": {
        "title": "Enterprise Security Analysis Settings",
        "type": "object",
        "properties": {
          "advanced_security_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "Whether GitHub advanced security is automatically enabled for new repositories and repositories transferred to\nthis enterprise."
          },
          "dependabot_alerts_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "Whether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this\nenterprise."
          },
          "secret_scanning_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "Whether secret scanning is automatically enabled for new repositories and repositories transferred to this\nenterprise."
          },
          "secret_scanning_push_protection_enabled_for_new_repositories": {
            "type": "boolean",
            "example": false,
            "description": "Whether secret scanning push protection is automatically enabled for new repositories and repositories\ntransferred to this enterprise."
          },
          "secret_scanning_push_protection_custom_link": {
            "type": "string",
            "nullable": true,
            "example": "https://github.com/test-org/test-repo/blob/main/README.md",
            "description": "An optional URL string to display to contributors who are blocked from pushing a secret."
          }
        },
        "required": [
          "advanced_security_enabled_for_new_repositories",
          "dependabot_alerts_enabled_for_new_repositories",
          "secret_scanning_enabled_for_new_repositories",
          "secret_scanning_push_protection_enabled_for_new_repositories"
        ]
      },
      "get-consumed-licenses": {
        "title": "Enterprise Consumed Licenses",
        "description": "A breakdown of the licenses consumed by an enterprise.",
        "properties": {
          "total_seats_consumed": {
            "type": "integer"
          },
          "total_seats_purchased": {
            "type": "integer"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "github_com_login": {
                  "type": "string"
                },
                "github_com_name": {
                  "type": "string",
                  "nullable": true
                },
                "enterprise_server_user_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "github_com_user": {
                  "type": "boolean"
                },
                "enterprise_server_user": {
                  "type": "boolean",
                  "nullable": true
                },
                "visual_studio_subscription_user": {
                  "type": "boolean"
                },
                "license_type": {
                  "type": "string"
                },
                "github_com_profile": {
                  "type": "string",
                  "nullable": true
                },
                "github_com_member_roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "github_com_enterprise_roles": {
                  "type": "array",
                  "description": "All enterprise roles for a user.",
                  "items": {
                    "type": "string"
                  }
                },
                "github_com_verified_domain_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "github_com_saml_name_id": {
                  "type": "string",
                  "nullable": true
                },
                "github_com_orgs_with_pending_invites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "github_com_two_factor_auth": {
                  "type": "boolean",
                  "nullable": true
                },
                "enterprise_server_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "visual_studio_license_status": {
                  "type": "string",
                  "nullable": true
                },
                "visual_studio_subscription_email": {
                  "type": "string",
                  "nullable": true
                },
                "total_user_accounts": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "get-license-sync-status": {
        "title": "License Sync Status",
        "description": "Information about the status of a license sync job for an enterprise.",
        "properties": {
          "server_instances": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "server_id": {
                  "type": "string"
                },
                "hostname": {
                  "type": "string"
                },
                "last_sync": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "actions-billing-usage": {
        "type": "object",
        "properties": {
          "total_minutes_used": {
            "type": "integer",
            "description": "The sum of the free and paid GitHub Actions minutes used."
          },
          "total_paid_minutes_used": {
            "type": "integer",
            "description": "The total paid GitHub Actions minutes used."
          },
          "included_minutes": {
            "type": "integer",
            "description": "The amount of free GitHub Actions minutes available."
          },
          "minutes_used_breakdown": {
            "type": "object",
            "properties": {
              "UBUNTU": {
                "type": "integer",
                "description": "Total minutes used on Ubuntu runner machines."
              },
              "MACOS": {
                "type": "integer",
                "description": "Total minutes used on macOS runner machines."
              },
              "WINDOWS": {
                "type": "integer",
                "description": "Total minutes used on Windows runner machines."
              },
              "ubuntu_4_core": {
                "type": "integer",
                "description": "Total minutes used on Ubuntu 4 core runner machines."
              },
              "ubuntu_8_core": {
                "type": "integer",
                "description": "Total minutes used on Ubuntu 8 core runner machines."
              },
              "ubuntu_16_core": {
                "type": "integer",
                "description": "Total minutes used on Ubuntu 16 core runner machines."
              },
              "ubuntu_32_core": {
                "type": "integer",
                "description": "Total minutes used on Ubuntu 32 core runner machines."
              },
              "ubuntu_64_core": {
                "type": "integer",
                "description": "Total minutes used on Ubuntu 64 core runner machines."
              },
              "windows_4_core": {
                "type": "integer",
                "description": "Total minutes used on Windows 4 core runner machines."
              },
              "windows_8_core": {
                "type": "integer",
                "description": "Total minutes used on Windows 8 core runner machines."
              },
              "windows_16_core": {
                "type": "integer",
                "description": "Total minutes used on Windows 16 core runner machines."
              },
              "windows_32_core": {
                "type": "integer",
                "description": "Total minutes used on Windows 32 core runner machines."
              },
              "windows_64_core": {
                "type": "integer",
                "description": "Total minutes used on Windows 64 core runner machines."
              },
              "macos_12_core": {
                "type": "integer",
                "description": "Total minutes used on macOS 12 core runner machines."
              },
              "total": {
                "type": "integer",
                "description": "Total minutes used on all runner machines."
              }
            }
          }
        },
        "required": [
          "total_minutes_used",
          "total_paid_minutes_used",
          "included_minutes",
          "minutes_used_breakdown"
        ]
      },
      "advanced-security-active-committers": {
        "type": "object",
        "properties": {
          "total_advanced_security_committers": {
            "type": "integer",
            "example": 25
          },
          "total_count": {
            "type": "integer",
            "example": 2
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/advanced-security-active-committers-repository"
            }
          }
        },
        "required": [
          "repositories"
        ]
      },
      "packages-billing-usage": {
        "type": "object",
        "properties": {
          "total_gigabytes_bandwidth_used": {
            "type": "integer",
            "description": "Sum of the free and paid storage space (GB) for GitHuub Packages."
          },
          "total_paid_gigabytes_bandwidth_used": {
            "type": "integer",
            "description": "Total paid storage space (GB) for GitHuub Packages."
          },
          "included_gigabytes_bandwidth": {
            "type": "integer",
            "description": "Free storage space (GB) for GitHub Packages."
          }
        },
        "required": [
          "total_gigabytes_bandwidth_used",
          "total_paid_gigabytes_bandwidth_used",
          "included_gigabytes_bandwidth"
        ]
      },
      "combined-billing-usage": {
        "type": "object",
        "properties": {
          "days_left_in_billing_cycle": {
            "type": "integer",
            "description": "Numbers of days left in billing cycle."
          },
          "estimated_paid_storage_for_month": {
            "type": "integer",
            "description": "Estimated storage space (GB) used in billing cycle."
          },
          "estimated_storage_for_month": {
            "type": "integer",
            "description": "Estimated sum of free and paid storage space (GB) used in billing cycle."
          }
        },
        "required": [
          "days_left_in_billing_cycle",
          "estimated_paid_storage_for_month",
          "estimated_storage_for_month"
        ]
      },
      "organization-custom-repository-role": {
        "title": "Organization Custom Repository Role",
        "description": "Custom repository roles created by organization administrators",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the custom role.",
            "type": "integer"
          },
          "name": {
            "description": "The name of the custom role.",
            "type": "string"
          },
          "description": {
            "description": "A short description about who this role is for or what permissions it grants.",
            "type": "string",
            "nullable": true
          },
          "base_role": {
            "type": "string",
            "description": "The system role from which this role inherits permissions.",
            "enum": [
              "read",
              "triage",
              "write",
              "maintain"
            ]
          },
          "permissions": {
            "description": "A list of additional permissions included in this role.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organization": {
            "$ref": "#/components/schemas/simple-user"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "base_role",
          "permissions",
          "organization",
          "created_at",
          "updated_at"
        ]
      },
      "runner-groups-org": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "selected_repositories_url": {
            "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
            "type": "string"
          },
          "runners_url": {
            "type": "string"
          },
          "inherited": {
            "type": "boolean"
          },
          "inherited_allows_public_repositories": {
            "type": "boolean"
          },
          "allows_public_repositories": {
            "type": "boolean"
          },
          "workflow_restrictions_read_only": {
            "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
            "type": "boolean",
            "default": false
          },
          "restricted_to_workflows": {
            "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
            "type": "boolean",
            "default": false
          },
          "selected_workflows": {
            "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
              "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main"
            }
          }
        },
        "required": [
          "id",
          "name",
          "visibility",
          "default",
          "runners_url",
          "inherited",
          "allows_public_repositories"
        ]
      },
      "minimal-repository": {
        "title": "Minimal Repository",
        "description": "Minimal Repository",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1296269
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "type": "string",
            "example": "Hello-World"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string"
          },
          "mirror_url": {
            "type": "string",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string"
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer"
          },
          "stargazers_count": {
            "type": "integer"
          },
          "watchers_count": {
            "type": "integer"
          },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer"
          },
          "default_branch": {
            "type": "string"
          },
          "open_issues_count": {
            "type": "integer"
          },
          "is_template": {
            "type": "boolean"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "type": "boolean"
          },
          "has_projects": {
            "type": "boolean"
          },
          "has_wiki": {
            "type": "boolean"
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "type": "boolean"
          },
          "has_discussions": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          },
          "visibility": {
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              }
            }
          },
          "role_name": {
            "type": "string",
            "example": "admin"
          },
          "temp_clone_token": {
            "type": "string"
          },
          "delete_branch_on_merge": {
            "type": "boolean"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "code_of_conduct": {
            "$ref": "#/components/schemas/code-of-conduct"
          },
          "license": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "spdx_id": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "node_id": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "forks": {
            "type": "integer",
            "example": 0
          },
          "open_issues": {
            "type": "integer",
            "example": 0
          },
          "watchers": {
            "type": "integer",
            "example": 0
          },
          "allow_forking": {
            "type": "boolean"
          },
          "web_commit_signoff_required": {
            "type": "boolean",
            "example": false
          },
          "security_and_analysis": {
            "$ref": "#/components/schemas/security-and-analysis"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ]
      },
      "empty-object": {
        "title": "Empty Object",
        "description": "An object without any properties.",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "credential-authorization": {
        "title": "Credential Authorization",
        "description": "Credential Authorization",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "monalisa",
            "description": "User login that owns the underlying credential."
          },
          "credential_id": {
            "type": "integer",
            "example": 1,
            "description": "Unique identifier for the credential."
          },
          "credential_type": {
            "type": "string",
            "example": "SSH Key",
            "description": "Human-readable description of the credential type."
          },
          "token_last_eight": {
            "type": "string",
            "example": "12345678",
            "description": "Last eight characters of the credential. Only included in responses with credential_type of personal access token."
          },
          "credential_authorized_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "description": "Date when the credential was authorized for use."
          },
          "scopes": {
            "type": "array",
            "example": [
              "user",
              "repo"
            ],
            "description": "List of oauth scopes the token has been granted.",
            "items": {
              "type": "string"
            }
          },
          "fingerprint": {
            "type": "string",
            "example": "jklmnop12345678",
            "description": "Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key."
          },
          "credential_accessed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "description": "Date when the credential was last accessed. May be null if it was never accessed",
            "nullable": true
          },
          "authorized_credential_id": {
            "type": "integer",
            "nullable": true,
            "example": 12345678
          },
          "authorized_credential_title": {
            "type": "string",
            "nullable": true,
            "example": "my ssh key",
            "description": "The title given to the ssh key. This will only be present when the credential is an ssh key."
          },
          "authorized_credential_note": {
            "type": "string",
            "nullable": true,
            "example": "my token",
            "description": "The note given to the token. This will only be present when the credential is a token."
          },
          "authorized_credential_expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The expiry for the token. This will only be present when the credential is a token."
          }
        },
        "required": [
          "login",
          "credential_id",
          "credential_type",
          "credential_authorized_at",
          "credential_accessed_at",
          "authorized_credential_id"
        ]
      },
      "organization-custom-repository-role-create-schema": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the custom role.",
            "type": "string"
          },
          "description": {
            "description": "A short description about who this role is for or what permissions it grants.",
            "type": "string",
            "nullable": true
          },
          "base_role": {
            "type": "string",
            "description": "The system role from which this role inherits permissions.",
            "enum": [
              "read",
              "triage",
              "write",
              "maintain"
            ]
          },
          "permissions": {
            "description": "A list of additional permissions included in this role.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "base_role",
          "permissions"
        ]
      },
      "organization-custom-repository-role-update-schema": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the custom role.",
            "type": "string"
          },
          "description": {
            "description": "A short description about who this role is for or what permissions it grants.",
            "type": "string",
            "nullable": true
          },
          "base_role": {
            "type": "string",
            "description": "The system role from which this role inherits permissions.",
            "enum": [
              "read",
              "triage",
              "write",
              "maintain"
            ]
          },
          "permissions": {
            "description": "A list of additional permissions included in this role.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "external-group": {
        "title": "ExternalGroup",
        "description": "Information about an external group's usage and its members",
        "type": "object",
        "required": [
          "group_id",
          "group_name",
          "teams",
          "members"
        ],
        "properties": {
          "group_id": {
            "description": "The internal ID of the group",
            "example": 1,
            "type": "integer"
          },
          "group_name": {
            "description": "The display name for the group",
            "example": "group-azuread-test",
            "type": "string"
          },
          "updated_at": {
            "description": "The date when the group was last updated_at",
            "example": "2021-01-03 22:27:15:000 -700",
            "type": "string"
          },
          "teams": {
            "description": "An array of teams linked to this group",
            "example": [
              {
                "team_id": 1,
                "team_name": "team-test"
              },
              {
                "team_id": 2,
                "team_name": "team-test2"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "team_id",
                "team_name"
              ],
              "properties": {
                "team_id": {
                  "description": "The id for a team",
                  "example": 1,
                  "type": "integer"
                },
                "team_name": {
                  "description": "The name of the team",
                  "example": "team-test",
                  "type": "string"
                }
              }
            }
          },
          "members": {
            "description": "An array of external members linked to this group",
            "example": [
              {
                "member_id": 1,
                "member_login": "mona-lisa_eocsaxrs",
                "member_name": "Mona Lisa",
                "member_email": "mona_lisa@github.com"
              },
              {
                "member_id": 2,
                "member_login": "octo-lisa_eocsaxrs",
                "member_name": "Octo Lisa",
                "member_email": "octo_lisa@github.com"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "member_id",
                "member_login",
                "member_name",
                "member_email"
              ],
              "properties": {
                "member_id": {
                  "description": "The internal user ID of the identity",
                  "example": 1,
                  "type": "integer"
                },
                "member_login": {
                  "description": "The handle/login for the user",
                  "example": "mona-lisa_eocsaxrs",
                  "type": "string"
                },
                "member_name": {
                  "description": "The user display name/profile name",
                  "example": "Mona Lisa",
                  "type": "string"
                },
                "member_email": {
                  "description": "An email attached to a user",
                  "example": "mona_lisa@github.com",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "external-groups": {
        "title": "ExternalGroups",
        "description": "A list of external groups available to be connected to a team",
        "type": "object",
        "properties": {
          "groups": {
            "description": "An array of external groups available to be mapped to a team",
            "example": [
              {
                "group_id": 1,
                "group_name": "group-azuread-test",
                "updated_at": "2021-01-03 22:27:15:000 -700"
              },
              {
                "group_id": 2,
                "group_name": "group-azuread-test2",
                "updated_at": "2021-06-03 22:27:15:000 -700"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "group_id",
                "group_name",
                "updated_at"
              ],
              "properties": {
                "group_id": {
                  "description": "The internal ID of the group",
                  "example": 1,
                  "type": "integer"
                },
                "group_name": {
                  "description": "The display name of the group",
                  "example": "group-azuread-test",
                  "type": "string"
                },
                "updated_at": {
                  "description": "The time of the last update for this group",
                  "example": "2019-06-03 22:27:15:000 -700",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "repository-fine-grained-permission": {
        "title": "Repository Fine-Grained Permission",
        "description": "A fine-grained permission that protects repository resources.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "repository": {
        "title": "Repository",
        "description": "A repository on GitHub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "example": "Team Environment"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "license": {
            "$ref": "#/components/schemas/nullable-license-simple"
          },
          "organization": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "forks": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_discussions": {
            "description": "Whether discussions are enabled.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "nullable": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  }
                }
              },
              "private": {
                "type": "boolean"
              },
              "html_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fork": {
                "type": "boolean"
              },
              "url": {
                "type": "string"
              },
              "archive_url": {
                "type": "string"
              },
              "assignees_url": {
                "type": "string"
              },
              "blobs_url": {
                "type": "string"
              },
              "branches_url": {
                "type": "string"
              },
              "collaborators_url": {
                "type": "string"
              },
              "comments_url": {
                "type": "string"
              },
              "commits_url": {
                "type": "string"
              },
              "compare_url": {
                "type": "string"
              },
              "contents_url": {
                "type": "string"
              },
              "contributors_url": {
                "type": "string"
              },
              "deployments_url": {
                "type": "string"
              },
              "downloads_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "forks_url": {
                "type": "string"
              },
              "git_commits_url": {
                "type": "string"
              },
              "git_refs_url": {
                "type": "string"
              },
              "git_tags_url": {
                "type": "string"
              },
              "git_url": {
                "type": "string"
              },
              "issue_comment_url": {
                "type": "string"
              },
              "issue_events_url": {
                "type": "string"
              },
              "issues_url": {
                "type": "string"
              },
              "keys_url": {
                "type": "string"
              },
              "labels_url": {
                "type": "string"
              },
              "languages_url": {
                "type": "string"
              },
              "merges_url": {
                "type": "string"
              },
              "milestones_url": {
                "type": "string"
              },
              "notifications_url": {
                "type": "string"
              },
              "pulls_url": {
                "type": "string"
              },
              "releases_url": {
                "type": "string"
              },
              "ssh_url": {
                "type": "string"
              },
              "stargazers_url": {
                "type": "string"
              },
              "statuses_url": {
                "type": "string"
              },
              "subscribers_url": {
                "type": "string"
              },
              "subscription_url": {
                "type": "string"
              },
              "tags_url": {
                "type": "string"
              },
              "teams_url": {
                "type": "string"
              },
              "trees_url": {
                "type": "string"
              },
              "clone_url": {
                "type": "string"
              },
              "mirror_url": {
                "type": "string"
              },
              "hooks_url": {
                "type": "string"
              },
              "svn_url": {
                "type": "string"
              },
              "homepage": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "forks_count": {
                "type": "integer"
              },
              "stargazers_count": {
                "type": "integer"
              },
              "watchers_count": {
                "type": "integer"
              },
              "size": {
                "type": "integer"
              },
              "default_branch": {
                "type": "string"
              },
              "open_issues_count": {
                "type": "integer"
              },
              "is_template": {
                "type": "boolean"
              },
              "topics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "has_issues": {
                "type": "boolean"
              },
              "has_projects": {
                "type": "boolean"
              },
              "has_wiki": {
                "type": "boolean"
              },
              "has_pages": {
                "type": "boolean"
              },
              "has_downloads": {
                "type": "boolean"
              },
              "archived": {
                "type": "boolean"
              },
              "disabled": {
                "type": "boolean"
              },
              "visibility": {
                "type": "string"
              },
              "pushed_at": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "permissions": {
                "type": "object",
                "properties": {
                  "admin": {
                    "type": "boolean"
                  },
                  "maintain": {
                    "type": "boolean"
                  },
                  "push": {
                    "type": "boolean"
                  },
                  "triage": {
                    "type": "boolean"
                  },
                  "pull": {
                    "type": "boolean"
                  }
                }
              },
              "allow_rebase_merge": {
                "type": "boolean"
              },
              "temp_clone_token": {
                "type": "string"
              },
              "allow_squash_merge": {
                "type": "boolean"
              },
              "allow_auto_merge": {
                "type": "boolean"
              },
              "delete_branch_on_merge": {
                "type": "boolean"
              },
              "allow_update_branch": {
                "type": "boolean"
              },
              "use_squash_pr_title_as_default": {
                "type": "boolean"
              },
              "squash_merge_commit_title": {
                "type": "string",
                "enum": [
                  "PR_TITLE",
                  "COMMIT_OR_PR_TITLE"
                ],
                "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
              },
              "squash_merge_commit_message": {
                "type": "string",
                "enum": [
                  "PR_BODY",
                  "COMMIT_MESSAGES",
                  "BLANK"
                ],
                "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
              },
              "merge_commit_title": {
                "type": "string",
                "enum": [
                  "PR_TITLE",
                  "MERGE_MESSAGE"
                ],
                "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
              },
              "merge_commit_message": {
                "type": "string",
                "enum": [
                  "PR_BODY",
                  "PR_TITLE",
                  "BLANK"
                ],
                "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
              },
              "allow_merge_commit": {
                "type": "boolean"
              },
              "subscribers_count": {
                "type": "integer"
              },
              "network_count": {
                "type": "integer"
              }
            }
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_auto_merge": {
            "description": "Whether to allow Auto-merge to be used on pull requests.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_update_branch": {
            "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "use_squash_pr_title_as_default": {
            "type": "boolean",
            "description": "Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
            "default": false,
            "deprecated": true
          },
          "squash_merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "COMMIT_OR_PR_TITLE"
            ],
            "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
          },
          "squash_merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "COMMIT_MESSAGES",
              "BLANK"
            ],
            "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
          },
          "merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "MERGE_MESSAGE"
            ],
            "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
          },
          "merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "PR_TITLE",
              "BLANK"
            ],
            "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_forking": {
            "description": "Whether to allow forking this repo",
            "type": "boolean"
          },
          "web_commit_signoff_required": {
            "description": "Whether to require contributors to sign off on web-based commits",
            "default": false,
            "type": "boolean"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:42Z\""
          },
          "anonymous_access_enabled": {
            "type": "boolean",
            "description": "Whether anonymous git access is enabled for this repository"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ]
      },
      "group-mapping": {
        "title": "GroupMapping",
        "description": "External Groups to be mapped to a team for membership",
        "type": "object",
        "properties": {
          "groups": {
            "description": "Array of groups to be mapped to this team",
            "example": [
              {
                "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                "group_name": "saml-azuread-test",
                "group_description": "A group of Developers working on AzureAD SAML SSO"
              },
              {
                "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                "group_name": "saml-azuread-test2",
                "group_description": "Another group of Developers working on AzureAD SAML SSO"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "group_id",
                "group_name",
                "group_description"
              ],
              "properties": {
                "group_id": {
                  "description": "The ID of the group",
                  "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                  "type": "string"
                },
                "group_name": {
                  "description": "The name of the group",
                  "example": "saml-azuread-test",
                  "type": "string"
                },
                "group_description": {
                  "description": "a description of the group",
                  "example": "A group of Developers working on AzureAD SAML SSO",
                  "type": "string"
                },
                "status": {
                  "description": "synchronization status for this group mapping",
                  "example": "unsynced",
                  "type": "string"
                },
                "synced_at": {
                  "description": "the time of the last sync for this group-mapping",
                  "example": "2019-06-03 22:27:15:000 -700",
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "full-repository": {
        "title": "Full Repository",
        "description": "Full Repository",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1296269
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "type": "string",
            "example": "Hello-World"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "octocat",
              "atom",
              "electron",
              "API"
            ]
          },
          "has_issues": {
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "type": "boolean",
            "example": true
          },
          "has_discussions": {
            "type": "boolean",
            "example": true
          },
          "archived": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "type": "string",
            "example": "public"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "allow_rebase_merge": {
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "$ref": "#/components/schemas/nullable-repository"
          },
          "temp_clone_token": {
            "type": "string",
            "nullable": true
          },
          "allow_squash_merge": {
            "type": "boolean",
            "example": true
          },
          "allow_auto_merge": {
            "type": "boolean",
            "example": false
          },
          "delete_branch_on_merge": {
            "type": "boolean",
            "example": false
          },
          "allow_merge_commit": {
            "type": "boolean",
            "example": true
          },
          "allow_update_branch": {
            "type": "boolean",
            "example": true
          },
          "use_squash_pr_title_as_default": {
            "type": "boolean",
            "example": false
          },
          "squash_merge_commit_title": {
            "type": "string",
            "example": "PR_TITLE",
            "enum": [
              "PR_TITLE",
              "COMMIT_OR_PR_TITLE"
            ],
            "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
          },
          "squash_merge_commit_message": {
            "type": "string",
            "example": "PR_BODY",
            "enum": [
              "PR_BODY",
              "COMMIT_MESSAGES",
              "BLANK"
            ],
            "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
          },
          "merge_commit_title": {
            "type": "string",
            "example": "PR_TITLE",
            "enum": [
              "PR_TITLE",
              "MERGE_MESSAGE"
            ],
            "description": "The default value for a merge commit title.\n\n  - `PR_TITLE` - default to the pull request's title.\n  - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
          },
          "merge_commit_message": {
            "type": "string",
            "example": "PR_BODY",
            "enum": [
              "PR_BODY",
              "PR_TITLE",
              "BLANK"
            ],
            "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
          },
          "allow_forking": {
            "type": "boolean",
            "example": true
          },
          "web_commit_signoff_required": {
            "type": "boolean",
            "example": false
          },
          "subscribers_count": {
            "type": "integer",
            "example": 42
          },
          "network_count": {
            "type": "integer",
            "example": 0
          },
          "license": {
            "$ref": "#/components/schemas/nullable-license-simple"
          },
          "organization": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "parent": {
            "$ref": "#/components/schemas/repository"
          },
          "source": {
            "$ref": "#/components/schemas/repository"
          },
          "forks": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "anonymous_access_enabled": {
            "description": "Whether anonymous git access is allowed.",
            "default": true,
            "type": "boolean"
          },
          "code_of_conduct": {
            "$ref": "#/components/schemas/code-of-conduct-simple"
          },
          "security_and_analysis": {
            "$ref": "#/components/schemas/security-and-analysis"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "has_discussions",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at",
          "network_count",
          "subscribers_count"
        ]
      },
      "actions-workflow-access-to-repository": {
        "type": "object",
        "properties": {
          "access_level": {
            "type": "string",
            "description": "Defines the level of access that workflows outside of the repository have to actions and reusable workflows within the\nrepository.\n\n`none` means the access is only possible from workflows in this repository. `user` level access allows sharing across user owned private repos only. `organization` level access allows sharing across the organization. `enterprise` level access allows sharing across the enterprise.",
            "enum": [
              "none",
              "user",
              "organization",
              "enterprise"
            ]
          }
        },
        "required": [
          "access_level"
        ]
      },
      "code-scanning-alert-severity": {
        "type": "string",
        "description": "Severity of a code scanning alert.",
        "enum": [
          "critical",
          "high",
          "medium",
          "low",
          "warning",
          "note",
          "error"
        ]
      },
      "code-scanning-alert-items": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/alert-number"
          },
          "created_at": {
            "$ref": "#/components/schemas/alert-created-at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/alert-updated-at"
          },
          "url": {
            "$ref": "#/components/schemas/alert-url"
          },
          "html_url": {
            "$ref": "#/components/schemas/alert-html-url"
          },
          "instances_url": {
            "$ref": "#/components/schemas/alert-instances-url"
          },
          "state": {
            "$ref": "#/components/schemas/code-scanning-alert-state"
          },
          "fixed_at": {
            "$ref": "#/components/schemas/alert-fixed-at"
          },
          "dismissed_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "dismissed_at": {
            "$ref": "#/components/schemas/alert-dismissed-at"
          },
          "dismissed_reason": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
          },
          "dismissed_comment": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-comment"
          },
          "rule": {
            "$ref": "#/components/schemas/code-scanning-alert-rule-summary"
          },
          "tool": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool"
          },
          "most_recent_instance": {
            "$ref": "#/components/schemas/code-scanning-alert-instance"
          }
        },
        "required": [
          "number",
          "created_at",
          "url",
          "html_url",
          "instances_url",
          "state",
          "dismissed_by",
          "dismissed_at",
          "dismissed_reason",
          "rule",
          "tool",
          "most_recent_instance"
        ]
      },
      "scim-user-list": {
        "title": "SCIM User List",
        "description": "SCIM User List",
        "type": "object",
        "properties": {
          "schemas": {
            "description": "SCIM schema used.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            }
          },
          "totalResults": {
            "type": "integer",
            "example": 3
          },
          "itemsPerPage": {
            "type": "integer",
            "example": 10
          },
          "startIndex": {
            "type": "integer",
            "example": 1
          },
          "Resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scim-user"
            }
          }
        },
        "required": [
          "schemas",
          "totalResults",
          "itemsPerPage",
          "startIndex",
          "Resources"
        ]
      },
      "scim-user": {
        "title": "SCIM /Users",
        "description": "SCIM /Users provisioning endpoints",
        "type": "object",
        "properties": {
          "schemas": {
            "description": "SCIM schema used.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:schemas:core:2.0:User"
            }
          },
          "id": {
            "description": "Unique identifier of an external identity",
            "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
            "type": "string"
          },
          "externalId": {
            "description": "The ID of the User.",
            "type": "string",
            "example": "a7b0f98395",
            "nullable": true
          },
          "userName": {
            "description": "Configured by the admin. Could be an email, login, or username",
            "example": "someone@example.com",
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "description": "The name of the user, suitable for display to end-users",
            "example": "Jon Doe",
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "object",
            "properties": {
              "givenName": {
                "type": "string",
                "nullable": true
              },
              "familyName": {
                "type": "string",
                "nullable": true
              },
              "formatted": {
                "type": "string",
                "nullable": true
              }
            },
            "example": {
              "givenName": "Jane",
              "familyName": "User"
            }
          },
          "emails": {
            "description": "user emails",
            "example": [
              {
                "value": "someone@example.com",
                "primary": true
              },
              {
                "value": "another@example.com",
                "primary": false
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "primary": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "active": {
            "description": "The active status of the User.",
            "type": "boolean",
            "example": true
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string",
                "example": "User"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2019-01-24T22:45:36.000Z"
              },
              "lastModified": {
                "type": "string",
                "format": "date-time",
                "example": "2019-01-24T22:45:36.000Z"
              },
              "location": {
                "type": "string",
                "format": "uri",
                "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d"
              }
            }
          },
          "organization_id": {
            "description": "The ID of the organization.",
            "type": "integer"
          },
          "operations": {
            "description": "Set of operations to be performed",
            "example": [
              {
                "op": "replace",
                "value": {
                  "active": false
                }
              }
            ],
            "type": "array",
            "minItems": 1,
            "items": {
              "properties": {
                "op": {
                  "type": "string",
                  "enum": [
                    "add",
                    "remove",
                    "replace"
                  ]
                },
                "path": {
                  "type": "string"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    },
                    {
                      "type": "array",
                      "items": {}
                    }
                  ]
                }
              },
              "required": [
                "op"
              ],
              "type": "object"
            }
          },
          "groups": {
            "description": "associated groups",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "display": {
                  "type": "string"
                }
              }
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "primary": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string"
                },
                "display": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "schemas",
          "emails",
          "active",
          "meta"
        ]
      },
      "basic-error": {
        "title": "Basic Error",
        "description": "Basic Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "selected-actions-url": {
        "type": "string",
        "description": "The API URL to use to get or set the actions and reusable workflows that are allowed to run, when `allowed_actions` is set to `selected`."
      },
      "actions-default-workflow-permissions": {
        "type": "string",
        "description": "The default workflow permissions granted to the GITHUB_TOKEN when running workflows.",
        "enum": [
          "read",
          "write"
        ]
      },
      "actions-can-approve-pull-request-reviews": {
        "type": "boolean",
        "description": "Whether GitHub Actions can approve pull requests. Enabling this can be a security risk."
      },
      "runner-label": {
        "title": "Self hosted runner label",
        "description": "A label for a self hosted runner",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the label."
          },
          "name": {
            "type": "string",
            "description": "Name of the label."
          },
          "type": {
            "type": "string",
            "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
            "enum": [
              "read-only",
              "custom"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "validation-error-simple": {
        "title": "Validation Error Simple",
        "description": "Validation Error Simple",
        "type": "object",
        "required": [
          "message",
          "documentation_url"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "announcement-message": {
        "type": "string",
        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-cloud@latest//github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
        "example": "Very **important** announcement about _something_.",
        "nullable": true
      },
      "announcement-expiration": {
        "type": "string",
        "format": "date-time",
        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
        "example": "\"2021-01-01T00:00:00.000-07:00\"",
        "nullable": true
      },
      "announcement-user-dismissible": {
        "type": "boolean",
        "description": "Whether an announcement can be dismissed by the user.",
        "example": false,
        "nullable": true,
        "default": false
      },
      "code-scanning-analysis-tool-name": {
        "type": "string",
        "description": "The name of the tool used to generate the code scanning analysis."
      },
      "code-scanning-analysis-tool-guid": {
        "nullable": true,
        "type": "string",
        "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data."
      },
      "alert-number": {
        "type": "integer",
        "description": "The security alert number.",
        "readOnly": true
      },
      "alert-created-at": {
        "type": "string",
        "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "alert-updated-at": {
        "type": "string",
        "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "alert-url": {
        "type": "string",
        "description": "The REST API URL of the alert resource.",
        "format": "uri",
        "readOnly": true
      },
      "alert-html-url": {
        "type": "string",
        "description": "The GitHub URL of the alert resource.",
        "format": "uri",
        "readOnly": true
      },
      "alert-instances-url": {
        "type": "string",
        "description": "The REST API URL for fetching the list of instances for an alert.",
        "format": "uri",
        "readOnly": true
      },
      "alert-fixed-at": {
        "type": "string",
        "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": true
      },
      "nullable-simple-user": {
        "title": "Simple User",
        "description": "A GitHub user.",
        "type": "object",
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ],
        "nullable": true
      },
      "alert-dismissed-at": {
        "type": "string",
        "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": true
      },
      "code-scanning-alert-dismissed-reason": {
        "type": "string",
        "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert.",
        "nullable": true,
        "enum": [
          null,
          "false positive",
          "won't fix",
          "used in tests"
        ]
      },
      "code-scanning-alert-dismissed-comment": {
        "type": "string",
        "description": "The dismissal comment associated with the dismissal of the alert.",
        "nullable": true,
        "maxLength": 280
      },
      "code-scanning-alert-rule": {
        "type": "object",
        "properties": {
          "id": {
            "nullable": true,
            "type": "string",
            "description": "A unique identifier for the rule used to detect the alert."
          },
          "name": {
            "type": "string",
            "description": "The name of the rule used to detect the alert."
          },
          "severity": {
            "nullable": true,
            "type": "string",
            "description": "The severity of the alert.",
            "enum": [
              "none",
              "note",
              "warning",
              "error"
            ]
          },
          "security_severity_level": {
            "nullable": true,
            "type": "string",
            "description": "The security severity of the alert.",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "description": {
            "type": "string",
            "description": "A short description of the rule used to detect the alert."
          },
          "full_description": {
            "type": "string",
            "description": "description of the rule used to detect the alert."
          },
          "tags": {
            "nullable": true,
            "type": "array",
            "description": "A set of tags applicable for the rule.",
            "items": {
              "type": "string"
            }
          },
          "help": {
            "nullable": true,
            "type": "string",
            "description": "Detailed documentation for the rule as GitHub Flavored Markdown."
          },
          "help_uri": {
            "nullable": true,
            "type": "string",
            "description": "A link to the documentation for the rule used to detect the alert."
          }
        }
      },
      "code-scanning-analysis-tool": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
          },
          "version": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-version"
          },
          "guid": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
          }
        }
      },
      "code-scanning-analysis-tool-version": {
        "nullable": true,
        "type": "string",
        "description": "The version of the tool used to generate the code scanning analysis."
      },
      "code-scanning-alert-instance": {
        "type": "object",
        "properties": {
          "ref": {
            "$ref": "#/components/schemas/code-scanning-ref"
          },
          "analysis_key": {
            "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
          },
          "environment": {
            "$ref": "#/components/schemas/code-scanning-alert-environment"
          },
          "category": {
            "$ref": "#/components/schemas/code-scanning-analysis-category"
          },
          "state": {
            "$ref": "#/components/schemas/code-scanning-alert-state"
          },
          "commit_sha": {
            "type": "string"
          },
          "message": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              }
            }
          },
          "location": {
            "$ref": "#/components/schemas/code-scanning-alert-location"
          },
          "html_url": {
            "type": "string"
          },
          "classifications": {
            "type": "array",
            "description": "Classifications that have been applied to the file that triggered the alert.\nFor example identifying it as documentation, or a generated file.",
            "items": {
              "$ref": "#/components/schemas/code-scanning-alert-classification"
            }
          }
        }
      },
      "code-scanning-ref": {
        "type": "string",
        "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`."
      },
      "code-scanning-analysis-analysis-key": {
        "type": "string",
        "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
      },
      "code-scanning-alert-environment": {
        "type": "string",
        "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
      },
      "code-scanning-analysis-category": {
        "type": "string",
        "description": "Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code."
      },
      "code-scanning-alert-location": {
        "type": "object",
        "description": "Describe a region within a file for the alert.",
        "properties": {
          "path": {
            "type": "string"
          },
          "start_line": {
            "type": "integer"
          },
          "end_line": {
            "type": "integer"
          },
          "start_column": {
            "type": "integer"
          },
          "end_column": {
            "type": "integer"
          }
        }
      },
      "code-scanning-alert-classification": {
        "type": "string",
        "description": "A classification of the file. For example to identify it as generated.",
        "nullable": true,
        "enum": [
          "source",
          "generated",
          "test",
          "library"
        ]
      },
      "simple-repository": {
        "title": "Simple Repository",
        "description": "A GitHub repository.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1296269,
            "description": "A unique identifier of the repository."
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "description": "The GraphQL identifier of the repository."
          },
          "name": {
            "type": "string",
            "example": "Hello-World",
            "description": "The name of the repository."
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World",
            "description": "The full, globally unique, name of the repository."
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "type": "boolean",
            "description": "Whether the repository is private."
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World",
            "description": "The URL to view the repository on GitHub.com."
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true,
            "description": "The repository description."
          },
          "fork": {
            "type": "boolean",
            "description": "Whether the repository is a fork."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World",
            "description": "The URL to get more information about the repository from the GitHub API."
          },
          "archive_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "description": "A template for the API URL to download the repository as an archive."
          },
          "assignees_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "description": "A template for the API URL to list the available assignees for issues in the repository."
          },
          "blobs_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
          },
          "branches_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "description": "A template for the API URL to get information about branches in the repository."
          },
          "collaborators_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "description": "A template for the API URL to get information about collaborators of the repository."
          },
          "comments_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "description": "A template for the API URL to get information about comments on the repository."
          },
          "commits_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "description": "A template for the API URL to get information about commits on the repository."
          },
          "compare_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "description": "A template for the API URL to compare two commits or refs."
          },
          "contents_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "description": "A template for the API URL to get the contents of the repository."
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "description": "A template for the API URL to list the contributors to the repository."
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "description": "The API URL to list the deployments of the repository."
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "description": "The API URL to list the downloads on the repository."
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/events",
            "description": "The API URL to list the events of the repository."
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/forks",
            "description": "The API URL to list the forks of the repository."
          },
          "git_commits_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "description": "A template for the API URL to get information about Git commits of the repository."
          },
          "git_refs_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "description": "A template for the API URL to get information about Git refs of the repository."
          },
          "git_tags_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "description": "A template for the API URL to get information about Git tags of the repository."
          },
          "issue_comment_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "description": "A template for the API URL to get information about issue comments on the repository."
          },
          "issue_events_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "description": "A template for the API URL to get information about issue events on the repository."
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "description": "A template for the API URL to get information about issues on the repository."
          },
          "keys_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "description": "A template for the API URL to get information about deploy keys on the repository."
          },
          "labels_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "description": "A template for the API URL to get information about labels of the repository."
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/languages",
            "description": "The API URL to get information about the languages of the repository."
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/merges",
            "description": "The API URL to merge branches in the repository."
          },
          "milestones_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "description": "A template for the API URL to get information about milestones of the repository."
          },
          "notifications_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "description": "A template for the API URL to get information about notifications on the repository."
          },
          "pulls_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "description": "A template for the API URL to get information about pull requests on the repository."
          },
          "releases_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "description": "A template for the API URL to get information about releases on the repository."
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "description": "The API URL to list the stargazers on the repository."
          },
          "statuses_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "description": "A template for the API URL to get information about statuses of a commit."
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "description": "The API URL to list the subscribers on the repository."
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "description": "The API URL to subscribe to notifications for this repository."
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/tags",
            "description": "The API URL to get information about tags on the repository."
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/teams",
            "description": "The API URL to list the teams on the repository."
          },
          "trees_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "description": "The API URL to list the hooks on the repository."
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ]
      },
      "simple-user": {
        "title": "Simple User",
        "description": "A GitHub user.",
        "type": "object",
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "advanced-security-active-committers-repository": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "advanced_security_committers": {
            "type": "integer",
            "example": 25
          },
          "advanced_security_committers_breakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/advanced-security-active-committers-user"
            }
          }
        },
        "required": [
          "name",
          "advanced_security_committers",
          "advanced_security_committers_breakdown"
        ]
      },
      "advanced-security-active-committers-user": {
        "type": "object",
        "properties": {
          "user_login": {
            "type": "string"
          },
          "last_pushed_date": {
            "type": "string",
            "example": "2021-11-03"
          }
        },
        "required": [
          "user_login",
          "last_pushed_date"
        ]
      },
      "code-of-conduct": {
        "title": "Code Of Conduct",
        "description": "Code Of Conduct",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "contributor_covenant"
          },
          "name": {
            "type": "string",
            "example": "Contributor Covenant"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
          },
          "body": {
            "type": "string",
            "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "required": [
          "url",
          "html_url",
          "key",
          "name"
        ]
      },
      "security-and-analysis": {
        "nullable": true,
        "type": "object",
        "properties": {
          "advanced_security": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "secret_scanning": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          },
          "secret_scanning_push_protection": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              }
            }
          }
        }
      },
      "validation-error": {
        "title": "Validation Error",
        "description": "Validation Error",
        "type": "object",
        "required": [
          "message",
          "documentation_url"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "code"
              ],
              "properties": {
                "resource": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "string",
                      "nullable": true
                    },
                    {
                      "type": "integer",
                      "nullable": true
                    },
                    {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "nullable-license-simple": {
        "title": "License Simple",
        "description": "License Simple",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "mit"
          },
          "name": {
            "type": "string",
            "example": "MIT License"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://api.github.com/licenses/mit"
          },
          "spdx_id": {
            "type": "string",
            "nullable": true,
            "example": "MIT"
          },
          "node_id": {
            "type": "string",
            "example": "MDc6TGljZW5zZW1pdA=="
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id"
        ],
        "nullable": true
      },
      "nullable-repository": {
        "title": "Repository",
        "description": "A repository on GitHub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "example": "Team Environment"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "license": {
            "$ref": "#/components/schemas/nullable-license-simple"
          },
          "organization": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "forks": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_discussions": {
            "description": "Whether discussions are enabled.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "nullable": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  }
                }
              },
              "private": {
                "type": "boolean"
              },
              "html_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fork": {
                "type": "boolean"
              },
              "url": {
                "type": "string"
              },
              "archive_url": {
                "type": "string"
              },
              "assignees_url": {
                "type": "string"
              },
              "blobs_url": {
                "type": "string"
              },
              "branches_url": {
                "type": "string"
              },
              "collaborators_url": {
                "type": "string"
              },
              "comments_url": {
                "type": "string"
              },
              "commits_url": {
                "type": "string"
              },
              "compare_url": {
                "type": "string"
              },
              "contents_url": {
                "type": "string"
              },
              "contributors_url": {
                "type": "string"
              },
              "deployments_url": {
                "type": "string"
              },
              "downloads_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "forks_url": {
                "type": "string"
              },
              "git_commits_url": {
                "type": "string"
              },
              "git_refs_url": {
                "type": "string"
              },
              "git_tags_url": {
                "type": "string"
              },
              "git_url": {
                "type": "string"
              },
              "issue_comment_url": {
                "type": "string"
              },
              "issue_events_url": {
                "type": "string"
              },
              "issues_url": {
                "type": "string"
              },
              "keys_url": {
                "type": "string"
              },
              "labels_url": {
                "type": "string"
              },
              "languages_url": {
                "type": "string"
              },
              "merges_url": {
                "type": "string"
              },
              "milestones_url": {
                "type": "string"
              },
              "notifications_url": {
                "type": "string"
              },
              "pulls_url": {
                "type": "string"
              },
              "releases_url": {
                "type": "string"
              },
              "ssh_url": {
                "type": "string"
              },
              "stargazers_url": {
                "type": "string"
              },
              "statuses_url": {
                "type": "string"
              },
              "subscribers_url": {
                "type": "string"
              },
              "subscription_url": {
                "type": "string"
              },
              "tags_url": {
                "type": "string"
              },
              "teams_url": {
                "type": "string"
              },
              "trees_url": {
                "type": "string"
              },
              "clone_url": {
                "type": "string"
              },
              "mirror_url": {
                "type": "string"
              },
              "hooks_url": {
                "type": "string"
              },
              "svn_url": {
                "type": "string"
              },
              "homepage": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "forks_count": {
                "type": "integer"
              },
              "stargazers_count": {
                "type": "integer"
              },
              "watchers_count": {
                "type": "integer"
              },
              "size": {
                "type": "integer"
              },
              "default_branch": {
                "type": "string"
              },
              "open_issues_count": {
                "type": "integer"
              },
              "is_template": {
                "type": "boolean"
              },
              "topics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "has_issues": {
                "type": "boolean"
              },
              "has_projects": {
                "type": "boolean"
              },
              "has_wiki": {
                "type": "boolean"
              },
              "has_pages": {
                "type": "boolean"
              },
              "has_downloads": {
                "type": "boolean"
              },
              "archived": {
                "type": "boolean"
              },
              "disabled": {
                "type": "boolean"
              },
              "visibility": {
                "type": "string"
              },
              "pushed_at": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "permissions": {
                "type": "object",
                "properties": {
                  "admin": {
                    "type": "boolean"
                  },
                  "maintain": {
                    "type": "boolean"
                  },
                  "push": {
                    "type": "boolean"
                  },
                  "triage": {
                    "type": "boolean"
                  },
                  "pull": {
                    "type": "boolean"
                  }
                }
              },
              "allow_rebase_merge": {
                "type": "boolean"
              },
              "temp_clone_token": {
                "type": "string"
              },
              "allow_squash_merge": {
                "type": "boolean"
              },
              "allow_auto_merge": {
                "type": "boolean"
              },
              "delete_branch_on_merge": {
                "type": "boolean"
              },
              "allow_update_branch": {
                "type": "boolean"
              },
              "use_squash_pr_title_as_default": {
                "type": "boolean"
              },
              "squash_merge_commit_title": {
                "type": "string",
                "enum": [
                  "PR_TITLE",
                  "COMMIT_OR_PR_TITLE"
                ],
                "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
              },
              "squash_merge_commit_message": {
                "type": "string",
                "enum": [
                  "PR_BODY",
                  "COMMIT_MESSAGES",
                  "BLANK"
                ],
                "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
              },
              "merge_commit_title": {
                "type": "string",
                "enum": [
                  "PR_TITLE",
                  "MERGE_MESSAGE"
                ],
                "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
              },
              "merge_commit_message": {
                "type": "string",
                "enum": [
                  "PR_BODY",
                  "PR_TITLE",
                  "BLANK"
                ],
                "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
              },
              "allow_merge_commit": {
                "type": "boolean"
              },
              "subscribers_count": {
                "type": "integer"
              },
              "network_count": {
                "type": "integer"
              }
            }
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_auto_merge": {
            "description": "Whether to allow Auto-merge to be used on pull requests.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_update_branch": {
            "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "use_squash_pr_title_as_default": {
            "type": "boolean",
            "description": "Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
            "default": false,
            "deprecated": true
          },
          "squash_merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "COMMIT_OR_PR_TITLE"
            ],
            "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit)."
          },
          "squash_merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "COMMIT_MESSAGES",
              "BLANK"
            ],
            "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message."
          },
          "merge_commit_title": {
            "type": "string",
            "enum": [
              "PR_TITLE",
              "MERGE_MESSAGE"
            ],
            "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
          },
          "merge_commit_message": {
            "type": "string",
            "enum": [
              "PR_BODY",
              "PR_TITLE",
              "BLANK"
            ],
            "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message."
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_forking": {
            "description": "Whether to allow forking this repo",
            "type": "boolean"
          },
          "web_commit_signoff_required": {
            "description": "Whether to require contributors to sign off on web-based commits",
            "default": false,
            "type": "boolean"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:42Z\""
          },
          "anonymous_access_enabled": {
            "type": "boolean",
            "description": "Whether anonymous git access is enabled for this repository"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ],
        "nullable": true
      },
      "code-of-conduct-simple": {
        "title": "Code Of Conduct Simple",
        "description": "Code of Conduct Simple",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/github/docs/community/code_of_conduct"
          },
          "key": {
            "type": "string",
            "example": "citizen_code_of_conduct"
          },
          "name": {
            "type": "string",
            "example": "Citizen Code of Conduct"
          },
          "html_url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md"
          }
        },
        "required": [
          "url",
          "key",
          "name",
          "html_url"
        ]
      },
      "code-scanning-alert-rule-summary": {
        "type": "object",
        "properties": {
          "id": {
            "nullable": true,
            "type": "string",
            "description": "A unique identifier for the rule used to detect the alert."
          },
          "name": {
            "type": "string",
            "description": "The name of the rule used to detect the alert."
          },
          "tags": {
            "nullable": true,
            "type": "array",
            "description": "A set of tags applicable for the rule.",
            "items": {
              "type": "string"
            }
          },
          "severity": {
            "nullable": true,
            "type": "string",
            "description": "The severity of the alert.",
            "enum": [
              "none",
              "note",
              "warning",
              "error"
            ]
          },
          "description": {
            "type": "string",
            "description": "A short description of the rule used to detect the alert."
          }
        }
      },
      "scim-error": {
        "title": "Scim Error",
        "description": "Scim Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "documentation_url": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer"
          },
          "scimType": {
            "type": "string",
            "nullable": true
          },
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "examples": {
      "server-statistics": {
        "value": {
          "server_id": "ea6088f3-f095-4bf2-8d7f-c573819e8768",
          "collection_date": "2021-12-14T23:59:59Z",
          "schema_version": "20220111",
          "ghes_version": "3.5.0",
          "host_name": "github.example.com",
          "github_connect": {
            "features_enabled": [
              "license_usage_sync",
              "content_analysis",
              "content_analysis_notifications"
            ]
          },
          "ghe_stats": {
            "comments": {
              "total_commit_comments": 1000,
              "total_gist_comments": 1000,
              "total_issue_comments": 0,
              "total_pull_request_comments": 0
            },
            "gists": {
              "total_gists": 100,
              "private_gists": 59,
              "public_gists": 41
            },
            "hooks": {
              "total_hooks": 2,
              "active_hooks": 1,
              "inactive_hooks": 1
            },
            "issues": {
              "total_issues": 3421,
              "open_issues": 1234,
              "closed_issues": 1222
            },
            "milestones": {
              "total_milestones": 50,
              "open_milestones": 20,
              "closed_milestones": 30
            },
            "orgs": {
              "total_orgs": 100,
              "disabled_orgs": 22,
              "total_teams": 299,
              "total_team_members": 400
            },
            "pages": {
              "total_pages": 10
            },
            "pulls": {
              "total_pulls": 1232,
              "merged_pulls": 223,
              "mergeable_pulls": 435,
              "unmergeable_pulls": 0
            },
            "repos": {
              "total_repos": 12,
              "root_repos": 1,
              "fork_repos": 2,
              "org_repos": 1,
              "total_pushes": 42,
              "total_wikis": 1
            },
            "users": {
              "total_users": 2000,
              "admin_users": 299,
              "suspended_users": 423
            }
          },
          "dormant_users": {
            "total_dormant_users": 5,
            "dormancy_threshold": "90 days"
          }
        }
      },
      "actions-cache-usage-org-enterprise": {
        "value": {
          "total_active_caches_size_in_bytes": 3344284,
          "total_active_caches_count": 5
        }
      },
      "actions-oidc-custom-issuer-policy-for-enterprise": {
        "value": {
          "include_enterprise_slug": true
        }
      },
      "actions-enterprise-permissions": {
        "value": {
          "enabled_organizations": "all",
          "allowed_actions": "selected",
          "selected_actions_url": "https://api.github.com/enterprises/2/actions/permissions/selected-actions"
        }
      },
      "organization-targets": {
        "value": {
          "total_count": 1,
          "organizations": [
            {
              "login": "octocat",
              "id": 161335,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "url": "https://api.github.com/orgs/octo-org",
              "repos_url": "https://api.github.com/orgs/octo-org/repos",
              "events_url": "https://api.github.com/orgs/octo-org/events",
              "hooks_url": "https://api.github.com/orgs/octo-org/hooks",
              "issues_url": "https://api.github.com/orgs/octo-org/issues",
              "members_url": "https://api.github.com/orgs/octo-org/members{/member}",
              "public_members_url": "https://api.github.com/orgs/octo-org/public_members{/member}",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "description": "A great organization"
            }
          ]
        }
      },
      "selected-actions": {
        "value": {
          "github_owned_allowed": true,
          "verified_allowed": false,
          "patterns_allowed": [
            "monalisa/octocat@*",
            "docker/*"
          ]
        }
      },
      "actions-default-workflow-permissions": {
        "summary": "Give read-only permission, and allow approving PRs.",
        "value": {
          "default_workflow_permissions": "read",
          "can_approve_pull_request_reviews": true
        }
      },
      "runner-groups-enterprise": {
        "value": {
          "total_count": 3,
          "runner_groups": [
            {
              "id": 1,
              "name": "Default",
              "visibility": "all",
              "default": true,
              "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/1/runners",
              "allows_public_repositories": false,
              "restricted_to_workflows": false,
              "selected_workflows": [],
              "workflow_restrictions_read_only": false
            },
            {
              "id": 2,
              "name": "octo-runner-group",
              "visibility": "selected",
              "default": false,
              "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/2/organizations",
              "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/2/runners",
              "allows_public_repositories": true,
              "restricted_to_workflows": true,
              "selected_workflows": [
                "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
              ],
              "workflow_restrictions_read_only": false
            },
            {
              "id": 3,
              "name": "expensive-hardware",
              "visibility": "private",
              "default": false,
              "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/3/runners",
              "allows_public_repositories": true,
              "restricted_to_workflows": false,
              "selected_workflows": [
                "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
              ],
              "workflow_restrictions_read_only": false
            }
          ]
        }
      },
      "runner-group-enterprise": {
        "value": {
          "id": 2,
          "name": "octo-runner-group",
          "visibility": "selected",
          "default": false,
          "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
          "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
          "allows_public_repositories": false,
          "restricted_to_workflows": true,
          "selected_workflows": [
            "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
          ],
          "workflow_restrictions_read_only": false
        }
      },
      "runner-group-update-enterprise": {
        "value": {
          "id": 2,
          "name": "Expensive hardware runners",
          "visibility": "selected",
          "default": false,
          "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
          "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
          "allows_public_repositories": true,
          "restricted_to_workflows": false,
          "selected_workflows": [
            "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
          ],
          "workflow_restrictions_read_only": false
        }
      },
      "runner-paginated": {
        "value": {
          "total_count": 2,
          "runners": [
            {
              "id": 23,
              "name": "linux_runner",
              "os": "linux",
              "status": "online",
              "busy": true,
              "labels": [
                {
                  "id": 5,
                  "name": "self-hosted",
                  "type": "read-only"
                },
                {
                  "id": 7,
                  "name": "X64",
                  "type": "read-only"
                },
                {
                  "id": 11,
                  "name": "Linux",
                  "type": "read-only"
                }
              ]
            },
            {
              "id": 24,
              "name": "mac_runner",
              "os": "macos",
              "status": "offline",
              "busy": false,
              "labels": [
                {
                  "id": 5,
                  "name": "self-hosted",
                  "type": "read-only"
                },
                {
                  "id": 7,
                  "name": "X64",
                  "type": "read-only"
                },
                {
                  "id": 20,
                  "name": "macOS",
                  "type": "read-only"
                },
                {
                  "id": 21,
                  "name": "no-gpu",
                  "type": "custom"
                }
              ]
            }
          ]
        }
      },
      "runner-application-items": {
        "value": [
          {
            "os": "osx",
            "architecture": "x64",
            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz",
            "filename": "actions-runner-osx-x64-2.164.0.tar.gz"
          },
          {
            "os": "linux",
            "architecture": "x64",
            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz",
            "filename": "actions-runner-linux-x64-2.164.0.tar.gz"
          },
          {
            "os": "linux",
            "architecture": "arm",
            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz",
            "filename": "actions-runner-linux-arm-2.164.0.tar.gz"
          },
          {
            "os": "win",
            "architecture": "x64",
            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip",
            "filename": "actions-runner-win-x64-2.164.0.zip"
          },
          {
            "os": "linux",
            "architecture": "arm64",
            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz",
            "filename": "actions-runner-linux-arm64-2.164.0.tar.gz"
          }
        ]
      },
      "authentication-token": {
        "value": {
          "token": "LLBF3JGZDX3P5PMEXLND6TS6FCWO6",
          "expires_at": "2020-01-22T12:13:35.123-08:00"
        }
      },
      "authentication-token-2": {
        "value": {
          "token": "AABF3JGZDX3P5PMEXLND6TS6FCWO6",
          "expires_at": "2020-01-29T12:13:35.123-08:00"
        }
      },
      "runner": {
        "value": {
          "id": 23,
          "name": "MBP",
          "os": "macos",
          "status": "online",
          "busy": true,
          "labels": [
            {
              "id": 5,
              "name": "self-hosted",
              "type": "read-only"
            },
            {
              "id": 7,
              "name": "X64",
              "type": "read-only"
            },
            {
              "id": 20,
              "name": "macOS",
              "type": "read-only"
            },
            {
              "id": 21,
              "name": "no-gpu",
              "type": "custom"
            }
          ]
        }
      },
      "announcement": {
        "summary": "Announcement banner",
        "value": {
          "announcement": "Very **important** announcement about _something_.",
          "expires_at": "2021-01-01T00:00:00.000+00:00",
          "user_dismissible": false
        }
      },
      "audit-log": {
        "value": [
          {
            "@timestamp": 1606929874512,
            "action": "team.add_member",
            "actor": "octocat",
            "created_at": 1606929874512,
            "_document_id": "xJJFlFOhQ6b-5vaAFy9Rjw",
            "org": "octo-corp",
            "team": "octo-corp/example-team",
            "user": "monalisa"
          },
          {
            "@timestamp": 1606507117008,
            "action": "org.create",
            "actor": "octocat",
            "created_at": 1606507117008,
            "_document_id": "Vqvg6kZ4MYqwWRKFDzlMoQ",
            "org": "octocat-test-org"
          },
          {
            "@timestamp": 1605719148837,
            "action": "repo.destroy",
            "actor": "monalisa",
            "created_at": 1605719148837,
            "_document_id": "LwW2vpJZCDS-WUmo9Z-ifw",
            "org": "mona-org",
            "repo": "mona-org/mona-test-repo",
            "visibility": "private"
          }
        ]
      },
      "code-scanning-organization-alert-items": {
        "value": [
          {
            "number": 4,
            "created_at": "2020-02-13T12:29:18Z",
            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4",
            "html_url": "https://github.com/octocat/hello-world/code-scanning/4",
            "state": "open",
            "dismissed_by": null,
            "dismissed_at": null,
            "dismissed_reason": null,
            "dismissed_comment": null,
            "rule": {
              "id": "js/zipslip",
              "severity": "error",
              "tags": [
                "security",
                "external/cwe/cwe-022"
              ],
              "description": "Arbitrary file write during zip extraction",
              "name": "js/zipslip"
            },
            "tool": {
              "name": "CodeQL",
              "guid": null,
              "version": "2.4.0"
            },
            "most_recent_instance": {
              "ref": "refs/heads/main",
              "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "category": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "environment": "{}",
              "state": "open",
              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
              "message": {
                "text": "This path depends on a user-provided value."
              },
              "location": {
                "path": "spec-main/api-session-spec.ts",
                "start_line": 917,
                "end_line": 917,
                "start_column": 7,
                "end_column": 18
              },
              "classifications": [
                "test"
              ]
            },
            "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4/instances",
            "repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks"
            }
          },
          {
            "number": 3,
            "created_at": "2020-02-13T12:29:18Z",
            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3",
            "html_url": "https://github.com/octocat/hello-world/code-scanning/3",
            "state": "dismissed",
            "dismissed_by": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "dismissed_at": "2020-02-14T12:29:18Z",
            "dismissed_reason": "false positive",
            "dismissed_comment": "This alert is not actually correct, because there's a sanitizer included in the library.",
            "rule": {
              "id": "js/zipslip",
              "severity": "error",
              "tags": [
                "security",
                "external/cwe/cwe-022"
              ],
              "description": "Arbitrary file write during zip extraction",
              "name": "js/zipslip"
            },
            "tool": {
              "name": "CodeQL",
              "guid": null,
              "version": "2.4.0"
            },
            "most_recent_instance": {
              "ref": "refs/heads/main",
              "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "category": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "environment": "{}",
              "state": "open",
              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
              "message": {
                "text": "This path depends on a user-provided value."
              },
              "location": {
                "path": "lib/ab12-gen.js",
                "start_line": 917,
                "end_line": 917,
                "start_column": 7,
                "end_column": 18
              },
              "classifications": []
            },
            "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3/instances",
            "repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks"
            }
          }
        ]
      },
      "enterprise-security-analysis-settings": {
        "value": {
          "advanced_security_enabled_for_new_repositories": true,
          "dependabot_alerts_enabled_for_new_repositories": true,
          "secret_scanning_enabled_for_new_repositories": true,
          "secret_scanning_push_protection_enabled_for_new_repositories": true,
          "secret_scanning_push_protection_custom_link": "https://github.com/test-org/test-repo/blob/main/README.md"
        }
      },
      "get-consumed-licenses": {
        "value": {
          "total_seats_consumed": 5000,
          "total_seats_purchased": 4500,
          "users": [
            {
              "github_com_login": "monalisa",
              "github_com_name": "Mona Lisa",
              "enterprise_server_user_ids": [
                "example_host_name.com:123",
                "example_host_name_2:222"
              ],
              "github_com_user": true,
              "enterprise_server_user": true,
              "visual_studio_subscription_user": false,
              "license_type": "enterprise",
              "github_com_profile": "https://github.com/monalisa",
              "github_com_member_roles": [
                "org1:Owner",
                "org2:Owner"
              ],
              "github_com_enterprise_roles": [
                "owner"
              ],
              "github_com_verified_domain_emails": [
                "monalisa@github.com"
              ],
              "github_com_saml_name_id": "monalisa",
              "github_com_orgs_with_pending_invites": [
                "org1",
                "org2"
              ],
              "github_com_two_factor_auth": true,
              "enterprise_server_primary_emails": [
                "monalisa@github.com"
              ],
              "visual_studio_license_status": "",
              "visual_studio_subscription_email": "",
              "total_user_accounts": 3
            },
            {
              "github_com_login": "",
              "github_com_name": "",
              "enterprise_server_user_ids": [
                "example_host_name:123"
              ],
              "github_com_user": false,
              "enterprise_server_user": true,
              "visual_studio_subscription_user": false,
              "license_type": "enterprise",
              "github_com_profile": "",
              "github_com_member_roles": [],
              "github_com_enterprise_role": "",
              "github_com_enterprise_roles": [],
              "github_com_verified_domain_emails": [],
              "github_com_saml_name_id": "",
              "github_com_orgs_with_pending_invites": [],
              "github_com_two_factor_auth": "",
              "enterprise_server_emails": [
                "hubot@example.com"
              ],
              "visual_studio_license_status": "",
              "visual_studio_subscription_email": "",
              "total_user_accounts": 1
            }
          ]
        }
      },
      "get-license-sync-status": {
        "value": {
          "server_instances": [
            {
              "server_id": "deadbeef1",
              "hostname": "github.example.com",
              "last_sync": {
                "date": "2020-01-01T00:00:00Z",
                "status": "success",
                "error": ""
              }
            },
            {
              "server_id": "filetoffish1",
              "hostname": "github2.example.com",
              "last_sync": {
                "date": "2020-01-01T00:00:00Z",
                "status": "success",
                "error": ""
              }
            }
          ]
        }
      },
      "actions-billing-usage": {
        "value": {
          "total_minutes_used": 305,
          "total_paid_minutes_used": 0,
          "included_minutes": 3000,
          "minutes_used_breakdown": {
            "UBUNTU": 205,
            "MACOS": 10,
            "WINDOWS": 90
          }
        }
      },
      "advanced-security-active-committers": {
        "value": {
          "total_advanced_security_committers": 2,
          "total_count": 2,
          "repositories": [
            {
              "name": "octocat-org/Hello-World",
              "advanced_security_committers": 2,
              "advanced_security_committers_breakdown": [
                {
                  "user_login": "octocat",
                  "last_pushed_date": "2021-11-03"
                },
                {
                  "user_login": "octokitten",
                  "last_pushed_date": "2021-10-25"
                }
              ]
            },
            {
              "name": "octocat-org/server",
              "advanced_security_committers": 1,
              "advanced_security_committers_breakdown": [
                {
                  "user_login": "octokitten",
                  "last_pushed_date": "2021-10-26"
                }
              ]
            }
          ]
        }
      },
      "packages-billing-usage": {
        "value": {
          "total_gigabytes_bandwidth_used": 50,
          "total_paid_gigabytes_bandwidth_used": 40,
          "included_gigabytes_bandwidth": 10
        }
      },
      "combined-billing-usage": {
        "value": {
          "days_left_in_billing_cycle": 20,
          "estimated_paid_storage_for_month": 15,
          "estimated_storage_for_month": 40
        }
      },
      "organization-custom-repository-role-example": {
        "value": {
          "id": 8030,
          "name": "Security Engineer",
          "description": "Able to contribute code and maintain the security pipeline",
          "base_role": "maintain",
          "permissions": [
            "delete_alerts_code_scanning"
          ],
          "organization": {
            "login": "github",
            "id": 9919,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github",
            "html_url": "https://github.com/github",
            "followers_url": "https://api.github.com/users/github/followers",
            "following_url": "https://api.github.com/users/github/following{/other_user}",
            "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github/subscriptions",
            "organizations_url": "https://api.github.com/users/github/orgs",
            "repos_url": "https://api.github.com/users/github/repos",
            "events_url": "https://api.github.com/users/github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "created_at": "2022-07-04T22:19:11Z",
          "updated_at": "2022-07-04T22:20:11Z"
        }
      },
      "runner-groups-org": {
        "value": {
          "total_count": 3,
          "runner_groups": [
            {
              "id": 1,
              "name": "Default",
              "visibility": "all",
              "default": true,
              "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/1/runners",
              "inherited": false,
              "allows_public_repositories": true,
              "restricted_to_workflows": false,
              "selected_workflows": [],
              "workflow_restrictions_read_only": false
            },
            {
              "id": 2,
              "name": "octo-runner-group",
              "visibility": "selected",
              "default": false,
              "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories",
              "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
              "inherited": true,
              "allows_public_repositories": true,
              "restricted_to_workflows": true,
              "selected_workflows": [
                "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
              ],
              "workflow_restrictions_read_only": true
            },
            {
              "id": 3,
              "name": "expensive-hardware",
              "visibility": "private",
              "default": false,
              "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/3/runners",
              "inherited": false,
              "allows_public_repositories": true,
              "restricted_to_workflows": false,
              "selected_workflows": [
                "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
              ],
              "workflow_restrictions_read_only": false
            }
          ]
        }
      },
      "runner-group": {
        "value": {
          "id": 2,
          "name": "octo-runner-group",
          "visibility": "selected",
          "default": false,
          "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner-groups/2/repositories",
          "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
          "inherited": false,
          "allows_public_repositories": true,
          "restricted_to_workflows": true,
          "selected_workflows": [
            "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
          ],
          "workflow_restrictions_read_only": false
        }
      },
      "runner-group-item": {
        "value": {
          "id": 2,
          "name": "octo-runner-group",
          "visibility": "selected",
          "default": false,
          "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories",
          "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
          "inherited": false,
          "allows_public_repositories": true,
          "restricted_to_workflows": true,
          "selected_workflows": [
            "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
          ],
          "workflow_restrictions_read_only": false
        }
      },
      "minimal-repository-paginated": {
        "value": {
          "total_count": 1,
          "repositories": [
            {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World",
              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World",
              "homepage": "https://github.com",
              "language": null,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues_count": 0,
              "is_template": true,
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "visibility": "public",
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "template_repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "organization": null,
                "language": null,
                "forks": 9,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "watchers": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues": 0,
                "open_issues_count": 0,
                "is_template": true,
                "license": {
                  "key": "mit",
                  "name": "MIT License",
                  "url": "https://api.github.com/licenses/mit",
                  "spdx_id": "MIT",
                  "node_id": "MDc6TGljZW5zZW1pdA==",
                  "html_url": "https://api.github.com/licenses/mit"
                },
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "visibility": "public",
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "template_repository": null,
                "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                "allow_squash_merge": true,
                "allow_auto_merge": false,
                "delete_branch_on_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              },
              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
              "delete_branch_on_merge": true,
              "subscribers_count": 42,
              "network_count": 0,
              "license": {
                "key": "mit",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT",
                "node_id": "MDc6TGljZW5zZW1pdA=="
              },
              "forks": 1,
              "open_issues": 1,
              "watchers": 1
            }
          ]
        }
      },
      "credential-authorization-items": {
        "value": [
          {
            "login": "octocat",
            "credential_id": 161195,
            "credential_type": "personal access token",
            "token_last_eight": "71c3fc11",
            "credential_authorized_at": "2011-01-26T19:06:43Z",
            "credential_accessed_at": "2011-01-26T19:06:43Z",
            "authorized_credential_expires_at": "2011-02-25T19:06:43Z",
            "scopes": [
              "user",
              "repo"
            ]
          },
          {
            "login": "hubot",
            "credential_id": 161196,
            "credential_type": "personal access token",
            "token_last_eight": "Ae178B4a",
            "credential_authorized_at": "2019-03-29T19:06:43Z",
            "credential_accessed_at": "2011-01-26T19:06:43Z",
            "authorized_credential_expires_at": "2019-04-28T19:06:43Z",
            "scopes": [
              "repo"
            ]
          }
        ]
      },
      "organization-custom-repository-role-list-example": {
        "value": {
          "total_count": 2,
          "custom_roles": [
            {
              "id": 8030,
              "name": "Security Engineer",
              "description": "Able to contribute code and maintain the security pipeline",
              "base_role": "maintain",
              "permissions": [
                "delete_alerts_code_scanning"
              ],
              "organization": {
                "login": "github",
                "id": 9919,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/github",
                "html_url": "https://github.com/github",
                "followers_url": "https://api.github.com/users/github/followers",
                "following_url": "https://api.github.com/users/github/following{/other_user}",
                "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                "organizations_url": "https://api.github.com/users/github/orgs",
                "repos_url": "https://api.github.com/users/github/repos",
                "events_url": "https://api.github.com/users/github/events{/privacy}",
                "received_events_url": "https://api.github.com/users/github/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "created_at": "2022-07-04T22:19:11Z",
              "updated_at": "2022-07-04T22:20:11Z"
            },
            {
              "id": 8031,
              "name": "Community manager",
              "description": "Able to handle all the community interactions without being able to contribute code",
              "base_role": "read",
              "permissions": [
                "mark_as_duplicate",
                "manage_settings_pages",
                "manage_settings_wiki",
                "set_social_preview",
                "edit_repo_metadata",
                "toggle_discussion_comment_minimize"
              ],
              "organization": {
                "login": "github",
                "id": 9919,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/github",
                "html_url": "https://github.com/github",
                "followers_url": "https://api.github.com/users/github/followers",
                "following_url": "https://api.github.com/users/github/following{/other_user}",
                "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                "organizations_url": "https://api.github.com/users/github/orgs",
                "repos_url": "https://api.github.com/users/github/repos",
                "events_url": "https://api.github.com/users/github/events{/privacy}",
                "received_events_url": "https://api.github.com/users/github/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "created_at": "2022-07-05T12:01:11Z",
              "updated_at": "2022-07-05T12:20:11Z"
            }
          ]
        }
      },
      "external-group": {
        "value": {
          "group_id": "123",
          "group_name": "Octocat admins",
          "updated_at": "2021-01-24T11:31:04-06:00",
          "teams": [
            {
              "team_id": 1,
              "team_name": "team-test"
            },
            {
              "team_id": 2,
              "team_name": "team-test2"
            }
          ],
          "members": [
            {
              "member_id": 1,
              "member_login": "mona-lisa_eocsaxrs",
              "member_name": "Mona Lisa",
              "member_email": "mona_lisa@github.com"
            },
            {
              "member_id": 2,
              "member_login": "octo-lisa_eocsaxrs",
              "member_name": "Octo Lisa",
              "member_email": "octo_lisa@github.com"
            }
          ]
        }
      },
      "external-groups": {
        "value": {
          "groups": [
            {
              "group_id": "123",
              "group_name": "Octocat admins",
              "updated_at": "2021-01-24T11:31:04-06:00"
            },
            {
              "group_id": "456",
              "group_name": "Octocat docs members",
              "updated_at": "2021-03-24T11:31:04-06:00"
            }
          ]
        }
      },
      "repository-fine-grained-permission-example": {
        "value": [
          {
            "name": "add_assignee",
            "description": "Assign or remove a user"
          },
          {
            "name": "remove_assignee",
            "description": "Remove an assigned user"
          },
          {
            "name": "add_label",
            "description": "Add or remove a label"
          }
        ]
      },
      "minimal-repository-items": {
        "value": [
          {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": false,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "has_discussions": false,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "security_and_analysis": {
              "advanced_security": {
                "status": "enabled"
              },
              "secret_scanning": {
                "status": "enabled"
              },
              "secret_scanning_push_protection": {
                "status": "disabled"
              }
            }
          }
        ]
      },
      "repository": {
        "value": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "organization": null,
          "language": null,
          "forks": 9,
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "watchers": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues": 0,
          "open_issues_count": 0,
          "is_template": true,
          "license": {
            "key": "mit",
            "name": "MIT License",
            "url": "https://api.github.com/licenses/mit",
            "spdx_id": "MIT",
            "node_id": "MDc6TGljZW5zZW1pdA==",
            "html_url": "https://api.github.com/licenses/mit"
          },
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "visibility": "public",
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "push": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": null,
          "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
          "allow_squash_merge": true,
          "allow_auto_merge": false,
          "delete_branch_on_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0
        }
      },
      "group-mapping-3": {
        "value": {
          "groups": [
            {
              "group_id": "123",
              "group_name": "Octocat admins",
              "group_description": "The people who configure your octoworld."
            },
            {
              "group_id": "456",
              "group_name": "Octocat docs members",
              "group_description": "The people who make your octoworld come to life."
            }
          ]
        }
      },
      "group-mapping": {
        "value": {
          "groups": [
            {
              "group_id": "123",
              "group_name": "Octocat admins",
              "group_description": "The people who configure your octoworld."
            },
            {
              "group_id": "456",
              "group_name": "Octocat docs members",
              "group_description": "The people who make your octoworld come to life."
            }
          ]
        }
      },
      "full-repository": {
        "value": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "license": {
            "key": "mit",
            "name": "MIT License",
            "url": "https://api.github.com/licenses/mit",
            "spdx_id": "MIT",
            "node_id": "MDc6TGljZW5zZW1pdA==",
            "html_url": "https://github.com/licenses/mit"
          },
          "language": null,
          "forks_count": 9,
          "forks": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "watchers": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "open_issues": 0,
          "is_template": false,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "visibility": "public",
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "pull": true,
            "push": false,
            "admin": false
          },
          "allow_rebase_merge": true,
          "template_repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World-Template",
            "full_name": "octocat/Hello-World-Template",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World-Template",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World-Template",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World-Template.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World-Template.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
            "homepage": "https://github.com",
            "language": null,
            "forks": 9,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "watchers": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues": 0,
            "open_issues_count": 0,
            "is_template": true,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "url": "https://api.github.com/licenses/mit",
              "spdx_id": "MIT",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "https://api.github.com/licenses/mit"
            },
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "allow_squash_merge": true,
            "allow_auto_merge": false,
            "delete_branch_on_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0
          },
          "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
          "allow_squash_merge": true,
          "allow_auto_merge": false,
          "delete_branch_on_merge": true,
          "allow_merge_commit": true,
          "allow_forking": true,
          "web_commit_signoff_required": false,
          "subscribers_count": 42,
          "network_count": 0,
          "organization": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "parent": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "allow_squash_merge": true,
            "allow_auto_merge": false,
            "delete_branch_on_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "url": "https://api.github.com/licenses/mit",
              "spdx_id": "MIT",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "https://api.github.com/licenses/mit"
            },
            "forks": 1,
            "open_issues": 1,
            "watchers": 1
          },
          "source": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "allow_squash_merge": true,
            "allow_auto_merge": false,
            "delete_branch_on_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "url": "https://api.github.com/licenses/mit",
              "spdx_id": "MIT",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "https://api.github.com/licenses/mit"
            },
            "forks": 1,
            "open_issues": 1,
            "watchers": 1
          }
        }
      },
      "actions-workflow-access-to-repository": {
        "value": {
          "access_level": "organization"
        }
      },
      "code-scanning-alert-items": {
        "value": [
          {
            "number": 4,
            "created_at": "2020-02-13T12:29:18Z",
            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4",
            "html_url": "https://github.com/octocat/hello-world/code-scanning/4",
            "state": "open",
            "fixed_at": null,
            "dismissed_by": null,
            "dismissed_at": null,
            "dismissed_reason": null,
            "dismissed_comment": null,
            "rule": {
              "id": "js/zipslip",
              "severity": "error",
              "tags": [
                "security",
                "external/cwe/cwe-022"
              ],
              "description": "Arbitrary file write during zip extraction",
              "name": "js/zipslip"
            },
            "tool": {
              "name": "CodeQL",
              "guid": null,
              "version": "2.4.0"
            },
            "most_recent_instance": {
              "ref": "refs/heads/main",
              "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "category": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "environment": "{}",
              "state": "open",
              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
              "message": {
                "text": "This path depends on a user-provided value."
              },
              "location": {
                "path": "spec-main/api-session-spec.ts",
                "start_line": 917,
                "end_line": 917,
                "start_column": 7,
                "end_column": 18
              },
              "classifications": [
                "test"
              ]
            },
            "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4/instances"
          },
          {
            "number": 3,
            "created_at": "2020-02-13T12:29:18Z",
            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3",
            "html_url": "https://github.com/octocat/hello-world/code-scanning/3",
            "state": "dismissed",
            "fixed_at": null,
            "dismissed_by": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "dismissed_at": "2020-02-14T12:29:18Z",
            "dismissed_reason": "false positive",
            "dismissed_comment": "This alert is not actually correct, because there's a sanitizer included in the library.",
            "rule": {
              "id": "js/zipslip",
              "severity": "error",
              "tags": [
                "security",
                "external/cwe/cwe-022"
              ],
              "description": "Arbitrary file write during zip extraction",
              "name": "js/zipslip"
            },
            "tool": {
              "name": "CodeQL",
              "guid": null,
              "version": "2.4.0"
            },
            "most_recent_instance": {
              "ref": "refs/heads/main",
              "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "category": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "environment": "{}",
              "state": "open",
              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
              "message": {
                "text": "This path depends on a user-provided value."
              },
              "location": {
                "path": "lib/ab12-gen.js",
                "start_line": 917,
                "end_line": 917,
                "start_column": 7,
                "end_column": 18
              },
              "classifications": []
            },
            "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3/instances"
          }
        ]
      },
      "scim-user-list-response-with-filter": {
        "summary": "Response with filter",
        "value": {
          "schemas": [
            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
          ],
          "totalResults": 1,
          "itemsPerPage": 1,
          "startIndex": 1,
          "Resources": [
            {
              "schemas": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ],
              "id": "5fc0c238-1112-11e8-8e45-920c87bdbd75",
              "externalId": "00u1dhhb1fkIGP7RL1d8",
              "userName": "octocat@github.com",
              "displayName": "Mona Octocat",
              "name": {
                "givenName": "Mona",
                "familyName": "Octocat",
                "formatted": "Mona Octocat"
              },
              "emails": [
                {
                  "value": "octocat@github.com",
                  "primary": true
                }
              ],
              "active": true,
              "meta": {
                "resourceType": "User",
                "created": "2018-02-13T15:05:24.000-08:00",
                "lastModified": "2018-02-13T15:05:55.000-08:00",
                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/5fc0c238-1112-11e8-8e45-920c87bdbd75"
              }
            }
          ]
        }
      },
      "scim-user-list-response-without-filter": {
        "summary": "Response without filter",
        "value": {
          "schemas": [
            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
          ],
          "totalResults": 2,
          "itemsPerPage": 2,
          "startIndex": 1,
          "Resources": [
            {
              "schemas": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ],
              "id": "edefdfedf-050c-11e7-8d32",
              "externalId": "a7d0f98382",
              "userName": "mona.octocat@okta.example.com",
              "displayName": "Mona Octocat",
              "name": {
                "givenName": "Mona",
                "familyName": "Octocat",
                "formatted": "Mona Octocat"
              },
              "emails": [
                {
                  "value": "mona.octocat@okta.example.com",
                  "primary": true
                }
              ],
              "active": true,
              "meta": {
                "resourceType": "User",
                "created": "2017-03-09T16:11:13-05:00",
                "lastModified": "2017-03-09T16:11:13-05:00",
                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
              }
            },
            {
              "schemas": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ],
              "id": "77563764-eb6-24-0598234-958243",
              "externalId": "sdfoiausdofiua",
              "userName": "hubot@example.com",
              "displayName": "hu bot",
              "name": {
                "givenName": "hu",
                "familyName": "bot",
                "formatted": "hu bot"
              },
              "emails": [
                {
                  "value": "hubot@example.com",
                  "primary": true
                }
              ],
              "active": true,
              "meta": {
                "resourceType": "User",
                "created": "2017-03-09T16:11:13-05:00",
                "lastModified": "2017-03-09T16:11:13-05:00",
                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/77563764-eb6-24-0598234-958243"
              }
            }
          ]
        }
      },
      "scim-user": {
        "value": {
          "schemas": [
            "urn:ietf:params:scim:schemas:core:2.0:User"
          ],
          "id": "edefdfedf-050c-11e7-8d32",
          "externalId": "a7d0f98382",
          "userName": "mona.octocat@okta.example.com",
          "displayName": "Monalisa Octocat",
          "name": {
            "givenName": "Monalisa",
            "familyName": "Octocat",
            "formatted": "Monalisa Octocat"
          },
          "emails": [
            {
              "value": "mona.octocat@okta.example.com",
              "primary": true
            },
            {
              "value": "monalisa@octocat.github.com"
            }
          ],
          "active": true,
          "meta": {
            "resourceType": "User",
            "created": "2017-03-09T16:11:13-05:00",
            "lastModified": "2017-03-09T16:11:13-05:00",
            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
          }
        }
      },
      "group-mapping-2": {
        "value": {
          "groups": [
            {
              "group_id": "123",
              "group_name": "Octocat admins",
              "group_description": "The people who configure your octoworld."
            }
          ]
        }
      },
      "runner-labels": {
        "value": {
          "total_count": 4,
          "labels": [
            {
              "id": 5,
              "name": "self-hosted",
              "type": "read-only"
            },
            {
              "id": 7,
              "name": "X64",
              "type": "read-only"
            },
            {
              "id": 20,
              "name": "macOS",
              "type": "read-only"
            },
            {
              "id": 21,
              "name": "no-gpu",
              "type": "custom"
            }
          ]
        }
      },
      "runner-labels-readonly": {
        "value": {
          "total_count": 3,
          "labels": [
            {
              "id": 5,
              "name": "self-hosted",
              "type": "read-only"
            },
            {
              "id": 7,
              "name": "X64",
              "type": "read-only"
            },
            {
              "id": 20,
              "name": "macOS",
              "type": "read-only"
            }
          ]
        }
      }
    },
    "headers": {
      "link": {
        "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "actions_runner_labels": {
        "description": "Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "total_count",
                "labels"
              ],
              "properties": {
                "total_count": {
                  "type": "integer"
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/runner-label"
                  }
                }
              }
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/runner-labels"
              }
            }
          }
        }
      },
      "not_found": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "validation_failed_simple": {
        "description": "Validation failed, or the endpoint has been spammed.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/validation-error-simple"
            }
          }
        }
      },
      "actions_runner_labels_readonly": {
        "description": "Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "total_count",
                "labels"
              ],
              "properties": {
                "total_count": {
                  "type": "integer"
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/runner-label"
                  }
                }
              }
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/runner-labels-readonly"
              }
            }
          }
        }
      },
      "service_unavailable": {
        "description": "Service unavailable",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "documentation_url": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "code_scanning_forbidden_read": {
        "description": "Response if GitHub Advanced Security is not enabled for this repository",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "validation_failed": {
        "description": "Validation failed, or the endpoint has been spammed.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/validation-error"
            }
          }
        }
      },
      "forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "temporary_redirect": {
        "description": "Temporary Redirect",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "not_modified": {
        "description": "Not modified"
      },
      "bad_request": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "scim_bad_request": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "scim_forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "scim_not_found": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "scim_too_many_requests": {
        "description": "Too many requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "scim_conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "scim_internal_error": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      }
    }
  }
}