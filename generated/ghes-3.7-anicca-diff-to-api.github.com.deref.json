{
  "info": {
    "contact": null,
    "description": null,
    "extensions": {
      "added": [
        [
          "x-github-release",
          3.7
        ]
      ],
      "changed": {
        "x-github-plan": {
          "from": "api.github.com",
          "to": "ghes"
        }
      }
    },
    "license": null,
    "terms_of_service": null,
    "title": null,
    "version": null
  },
  "paths": {
    "added": {
      "/admin/hooks": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#list-global-webhooks"
          },
          "operationId": "enterprise-admin/list-global-webhooks",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "active": true,
                          "config": {
                            "content_type": "json",
                            "insecure_ssl": "0",
                            "secret": "********",
                            "url": "https://example.com"
                          },
                          "created_at": "2017-12-07T00:14:59Z",
                          "events": [
                            "organization",
                            "user"
                          ],
                          "id": 1,
                          "name": "web",
                          "ping_url": "https://api.github.com/admin/hooks/1/pings",
                          "type": "Global",
                          "updated_at": "2017-12-07T00:14:59Z",
                          "url": "https://api.github.com/admin/hooks/1"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "config": {
                          "properties": {
                            "content_type": {
                              "type": "string"
                            },
                            "insecure_ssl": {
                              "type": "string"
                            },
                            "secret": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "events": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "ping_url": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List global webhooks",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        },
        "post": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#create-a-global-webhook"
          },
          "operationId": "enterprise-admin/create-global-webhook",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "config": {
                        "content_type": "json",
                        "secret": "secret",
                        "url": "https://example.com/webhook"
                      },
                      "events": [
                        "organization",
                        "user"
                      ],
                      "name": "web"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "active": {
                      "default": true,
                      "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                      "type": "boolean"
                    },
                    "config": {
                      "description": "Key/value pairs to provide settings for this webhook.",
                      "properties": {
                        "content_type": {
                          "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                          "type": "string"
                        },
                        "insecure_ssl": {
                          "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                          "type": "string"
                        },
                        "secret": {
                          "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@3.7/webhooks/event-payloads/#delivery-headers) header.",
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL to which the payloads will be delivered.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    },
                    "events": {
                      "description": "The [events](https://docs.github.com/enterprise-server@3.7/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "Must be passed as \"web\".",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "config"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "config": {
                          "content_type": "json",
                          "insecure_ssl": "0",
                          "secret": "********",
                          "url": "https://example.com"
                        },
                        "created_at": "2017-12-07T00:14:59Z",
                        "events": [
                          "organization",
                          "user"
                        ],
                        "id": 1,
                        "name": "web",
                        "ping_url": "https://api.github.com/admin/hooks/1/pings",
                        "type": "Global",
                        "updated_at": "2017-12-07T00:14:59Z",
                        "url": "https://api.github.com/admin/hooks/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "config": {
                        "properties": {
                          "content_type": {
                            "type": "string"
                          },
                          "insecure_ssl": {
                            "type": "string"
                          },
                          "secret": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "ping_url": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        }
      },
      "/admin/hooks/{hook_id}": {
        "delete": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#delete-a-global-webhook"
          },
          "operationId": "enterprise-admin/delete-global-webhook",
          "parameters": [
            {
              "description": "The unique identifier of the hook.",
              "in": "path",
              "name": "hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-a-global-webhook"
          },
          "operationId": "enterprise-admin/get-global-webhook",
          "parameters": [
            {
              "description": "The unique identifier of the hook.",
              "in": "path",
              "name": "hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "config": {
                          "content_type": "json",
                          "insecure_ssl": "0",
                          "secret": "********",
                          "url": "https://example.com"
                        },
                        "created_at": "2017-12-07T00:14:59Z",
                        "events": [
                          "organization",
                          "user"
                        ],
                        "id": 1,
                        "name": "web",
                        "ping_url": "https://api.github.com/admin/hooks/1/pings",
                        "type": "Global",
                        "updated_at": "2017-12-07T00:14:59Z",
                        "url": "https://api.github.com/admin/hooks/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "config": {
                        "properties": {
                          "content_type": {
                            "type": "string"
                          },
                          "insecure_ssl": {
                            "type": "string"
                          },
                          "secret": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "ping_url": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Parameters that are not provided will be overwritten with the default value or removed if no default exists.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-a-global-webhook"
          },
          "operationId": "enterprise-admin/update-global-webhook",
          "parameters": [
            {
              "description": "The unique identifier of the hook.",
              "in": "path",
              "name": "hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "config": {
                        "url": "https://example.com/webhook"
                      },
                      "events": [
                        "organization"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "active": {
                      "default": true,
                      "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                      "type": "boolean"
                    },
                    "config": {
                      "description": "Key/value pairs to provide settings for this webhook.",
                      "properties": {
                        "content_type": {
                          "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                          "type": "string"
                        },
                        "insecure_ssl": {
                          "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                          "type": "string"
                        },
                        "secret": {
                          "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@3.7/webhooks/event-payloads/#delivery-headers) header.",
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL to which the payloads will be delivered.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    },
                    "events": {
                      "description": "The [events](https://docs.github.com/enterprise-server@3.7/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "config": {
                          "content_type": "form",
                          "insecure_ssl": "0",
                          "url": "https://example.com"
                        },
                        "created_at": "2017-12-07T00:14:59Z",
                        "events": [
                          "organization"
                        ],
                        "id": 1,
                        "name": "web",
                        "ping_url": "https://api.github.com/admin/hooks/1/pings",
                        "type": "Global",
                        "updated_at": "2017-12-07T00:14:59Z",
                        "url": "https://api.github.com/admin/hooks/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "config": {
                        "properties": {
                          "content_type": {
                            "type": "string"
                          },
                          "insecure_ssl": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "ping_url": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        }
      },
      "/admin/hooks/{hook_id}/pings": {
        "post": {
          "deprecated": null,
          "description": "This will trigger a [ping event](https://docs.github.com/enterprise-server@3.7/webhooks/#ping-event) to be sent to the webhook.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#ping-a-global-webhook"
          },
          "operationId": "enterprise-admin/ping-global-webhook",
          "parameters": [
            {
              "description": "The unique identifier of the hook.",
              "in": "path",
              "name": "hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Ping a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        }
      },
      "/admin/keys": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#list-public-keys"
          },
          "operationId": "enterprise-admin/list-public-keys",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The direction to sort the results by.",
              "in": "query",
              "name": "direction",
              "required": false,
              "schema": {
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "default": "created",
                "enum": [
                  "created",
                  "updated",
                  "accessed"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Only show public keys accessed after the given time.",
              "in": "query",
              "name": "since",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "created_at": "2020-06-11T21:31:57Z",
                          "id": 2,
                          "key": "2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234",
                          "last_used": "2020-06-11T22:31:57Z",
                          "read_only": false,
                          "repository_id": 2,
                          "title": "ssh-rsa AAAAB3NzaC1yc2EAAA",
                          "url": "https://api.github.com/user/keys/2",
                          "user_id": 1,
                          "verified": false
                        },
                        {
                          "created_at": "2020-06-11T21:31:57Z",
                          "id": 3,
                          "key": "9Og8iYjAyymI9LvABpJerYrMxURPc8r+dB7TJyvv1234",
                          "last_used": "2020-06-11T22:31:57Z",
                          "read_only": false,
                          "repository_id": 2,
                          "title": "ssh-rsa AAAAB3NzaC1yc2EAAA",
                          "url": "https://api.github.com/user/keys/2",
                          "user_id": 1,
                          "verified": false
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "added_by": {
                          "nullable": true,
                          "type": "string"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "key": {
                          "type": "string"
                        },
                        "last_used": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "read_only": {
                          "type": "boolean"
                        },
                        "repository_id": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "user_id": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "verified": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "key",
                        "url",
                        "title",
                        "verified",
                        "created_at",
                        "read_only",
                        "last_used",
                        "user_id",
                        "repository_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List public keys",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/keys/{key_ids}": {
        "delete": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#delete-a-public-key"
          },
          "operationId": "enterprise-admin/delete-public-key",
          "parameters": [
            {
              "description": "The unique identifier of the key.",
              "in": "path",
              "name": "key_ids",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a public key",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/ldap/teams/{team_id}/mapping": {
        "patch": {
          "deprecated": null,
          "description": "Updates the [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. [LDAP synchronization](https://docs.github.com/enterprise-server@3.7/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap#enabling-ldap-sync) must be enabled to map LDAP entries to a team. Use the [Create a team](https://docs.github.com/enterprise-server@3.7/rest/reference/teams/#create-a-team) endpoint to create a team with LDAP mapping.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team"
          },
          "operationId": "enterprise-admin/update-ldap-mapping-for-team",
          "parameters": [
            {
              "description": "The unique identifier of the team.",
              "in": "path",
              "name": "team_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "ldap_dn": "cn=Enterprise Ops,ou=teams,dc=github,dc=com"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "ldap_dn": {
                      "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "ldap_dn"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "description": "A great team.",
                        "html_url": "https://github.com/orgs/github/teams/justice-league",
                        "id": 1,
                        "ldap_dn": "cn=Enterprise Ops,ou=teams,dc=github,dc=com",
                        "members_url": "https://api.github.com/teams/1/members{/member}",
                        "name": "Justice League",
                        "node_id": "MDQ6VGVhbTE=",
                        "parent": null,
                        "permission": "admin",
                        "privacy": "closed",
                        "repositories_url": "https://api.github.com/teams/1/repos",
                        "slug": "justice-league",
                        "url": "https://api.github.com/teams/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "description": {
                        "nullable": true,
                        "type": "string"
                      },
                      "html_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "ldap_dn": {
                        "type": "string"
                      },
                      "members_url": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "node_id": {
                        "type": "string"
                      },
                      "parent": {
                        "nullable": true
                      },
                      "permission": {
                        "type": "string"
                      },
                      "privacy": {
                        "type": "string"
                      },
                      "repositories_url": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update LDAP mapping for a team",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "ldap"
          }
        }
      },
      "/admin/ldap/teams/{team_id}/sync": {
        "post": {
          "deprecated": null,
          "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-team"
          },
          "operationId": "enterprise-admin/sync-ldap-mapping-for-team",
          "parameters": [
            {
              "description": "The unique identifier of the team.",
              "in": "path",
              "name": "team_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "status": "queued"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "status": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Sync LDAP mapping for a team",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "ldap"
          }
        }
      },
      "/admin/ldap/users/{username}/mapping": {
        "patch": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user"
          },
          "operationId": "enterprise-admin/update-ldap-mapping-for-user",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "ldap_dn": "uid=asdf,ou=users,dc=github,dc=com"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "ldap_dn": {
                      "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "ldap_dn"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                        "bio": "There once was...",
                        "blog": "https://github.com/blog",
                        "collaborators": 8,
                        "company": "GitHub",
                        "created_at": "2008-01-14T04:33:35Z",
                        "disk_usage": 10000,
                        "email": "octocat@github.com",
                        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                        "followers": 20,
                        "followers_url": "https://api.github.com/users/octocat/followers",
                        "following": 0,
                        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                        "hireable": false,
                        "html_url": "https://github.com/octocat",
                        "id": 1,
                        "ldap_dn": "uid=asdf,ou=users,dc=github,dc=com",
                        "location": "San Francisco",
                        "login": "octocat",
                        "name": "monalisa octocat",
                        "node_id": "MDQ6VXNlcjE=",
                        "organizations_url": "https://api.github.com/users/octocat/orgs",
                        "owned_private_repos": 100,
                        "plan": {
                          "collaborators": 0,
                          "name": "Medium",
                          "private_repos": 20,
                          "space": 400
                        },
                        "private_gists": 81,
                        "public_gists": 1,
                        "public_repos": 2,
                        "received_events_url": "https://api.github.com/users/octocat/received_events",
                        "repos_url": "https://api.github.com/users/octocat/repos",
                        "site_admin": false,
                        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                        "total_private_repos": 100,
                        "twitter_username": "monatheoctocat",
                        "two_factor_authentication": true,
                        "type": "User",
                        "updated_at": "2008-01-14T04:33:35Z",
                        "url": "https://api.github.com/users/octocat"
                      }
                    }
                  },
                  "schema": {
                    "description": "Ldap Private User",
                    "properties": {
                      "avatar_url": {
                        "example": "https://github.com/images/error/octocat_happy.gif",
                        "format": "uri",
                        "type": "string"
                      },
                      "bio": {
                        "example": "There once was...",
                        "nullable": true,
                        "type": "string"
                      },
                      "blog": {
                        "example": "https://github.com/blog",
                        "nullable": true,
                        "type": "string"
                      },
                      "business_plus": {
                        "type": "boolean"
                      },
                      "collaborators": {
                        "example": 8,
                        "type": "integer"
                      },
                      "company": {
                        "example": "GitHub",
                        "nullable": true,
                        "type": "string"
                      },
                      "created_at": {
                        "example": "2008-01-14T04:33:35Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "disk_usage": {
                        "example": 10000,
                        "type": "integer"
                      },
                      "email": {
                        "example": "octocat@github.com",
                        "format": "email",
                        "nullable": true,
                        "type": "string"
                      },
                      "events_url": {
                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                        "type": "string"
                      },
                      "followers": {
                        "example": 20,
                        "type": "integer"
                      },
                      "followers_url": {
                        "example": "https://api.github.com/users/octocat/followers",
                        "format": "uri",
                        "type": "string"
                      },
                      "following": {
                        "example": 0,
                        "type": "integer"
                      },
                      "following_url": {
                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                        "type": "string"
                      },
                      "gists_url": {
                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                        "type": "string"
                      },
                      "gravatar_id": {
                        "example": "41d064eb2195891e12d0413f63227ea7",
                        "nullable": true,
                        "type": "string"
                      },
                      "hireable": {
                        "nullable": true,
                        "type": "boolean"
                      },
                      "html_url": {
                        "example": "https://github.com/octocat",
                        "format": "uri",
                        "type": "string"
                      },
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "ldap_dn": {
                        "type": "string"
                      },
                      "location": {
                        "example": "San Francisco",
                        "nullable": true,
                        "type": "string"
                      },
                      "login": {
                        "example": "octocat",
                        "type": "string"
                      },
                      "name": {
                        "example": "monalisa octocat",
                        "nullable": true,
                        "type": "string"
                      },
                      "node_id": {
                        "example": "MDQ6VXNlcjE=",
                        "type": "string"
                      },
                      "organizations_url": {
                        "example": "https://api.github.com/users/octocat/orgs",
                        "format": "uri",
                        "type": "string"
                      },
                      "owned_private_repos": {
                        "example": 100,
                        "type": "integer"
                      },
                      "plan": {
                        "properties": {
                          "collaborators": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "private_repos": {
                            "type": "integer"
                          },
                          "space": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "collaborators",
                          "name",
                          "space",
                          "private_repos"
                        ],
                        "type": "object"
                      },
                      "private_gists": {
                        "example": 81,
                        "type": "integer"
                      },
                      "public_gists": {
                        "example": 1,
                        "type": "integer"
                      },
                      "public_repos": {
                        "example": 2,
                        "type": "integer"
                      },
                      "received_events_url": {
                        "example": "https://api.github.com/users/octocat/received_events",
                        "format": "uri",
                        "type": "string"
                      },
                      "repos_url": {
                        "example": "https://api.github.com/users/octocat/repos",
                        "format": "uri",
                        "type": "string"
                      },
                      "site_admin": {
                        "type": "boolean"
                      },
                      "starred_url": {
                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                        "type": "string"
                      },
                      "subscriptions_url": {
                        "example": "https://api.github.com/users/octocat/subscriptions",
                        "format": "uri",
                        "type": "string"
                      },
                      "suspended_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "total_private_repos": {
                        "example": 100,
                        "type": "integer"
                      },
                      "twitter_username": {
                        "example": "monalisa",
                        "nullable": true,
                        "type": "string"
                      },
                      "two_factor_authentication": {
                        "example": true,
                        "type": "boolean"
                      },
                      "type": {
                        "example": "User",
                        "type": "string"
                      },
                      "updated_at": {
                        "example": "2008-01-14T04:33:35Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "example": "https://api.github.com/users/octocat",
                        "format": "uri",
                        "type": "string"
                      }
                    },
                    "required": [
                      "avatar_url",
                      "events_url",
                      "followers_url",
                      "following_url",
                      "gists_url",
                      "gravatar_id",
                      "html_url",
                      "id",
                      "node_id",
                      "login",
                      "organizations_url",
                      "received_events_url",
                      "repos_url",
                      "site_admin",
                      "starred_url",
                      "subscriptions_url",
                      "type",
                      "url",
                      "bio",
                      "blog",
                      "company",
                      "email",
                      "followers",
                      "following",
                      "hireable",
                      "location",
                      "name",
                      "public_gists",
                      "public_repos",
                      "created_at",
                      "updated_at",
                      "collaborators",
                      "disk_usage",
                      "owned_private_repos",
                      "private_gists",
                      "total_private_repos",
                      "two_factor_authentication"
                    ],
                    "title": "Ldap Private User",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update LDAP mapping for a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "ldap"
          }
        }
      },
      "/admin/ldap/users/{username}/sync": {
        "post": {
          "deprecated": null,
          "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-user"
          },
          "operationId": "enterprise-admin/sync-ldap-mapping-for-user",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "status": "queued"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "status": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Sync LDAP mapping for a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "ldap"
          }
        }
      },
      "/admin/organizations": {
        "post": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#create-an-organization"
          },
          "operationId": "enterprise-admin/create-org",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "admin": "monalisaoctocat",
                      "login": "github",
                      "profile_name": "GitHub, Inc."
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "admin": {
                      "description": "The login of the user who will manage this organization.",
                      "type": "string"
                    },
                    "login": {
                      "description": "The organization's username.",
                      "type": "string"
                    },
                    "profile_name": {
                      "description": "The organization's display name.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "admin"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                        "description": "A great organization",
                        "events_url": "https://api.github.com/orgs/github/events",
                        "hooks_url": "https://api.github.com/orgs/github/hooks",
                        "id": 1,
                        "issues_url": "https://api.github.com/orgs/github/issues",
                        "login": "github",
                        "members_url": "https://api.github.com/orgs/github/members{/member}",
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                        "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                        "repos_url": "https://api.github.com/orgs/github/repos",
                        "url": "https://api.github.com/orgs/github"
                      }
                    }
                  },
                  "schema": {
                    "description": "A GitHub organization.",
                    "properties": {
                      "avatar_url": {
                        "example": "https://github.com/images/error/octocat_happy.gif",
                        "type": "string"
                      },
                      "description": {
                        "example": "A great organization",
                        "nullable": true,
                        "type": "string"
                      },
                      "events_url": {
                        "example": "https://api.github.com/orgs/github/events",
                        "format": "uri",
                        "type": "string"
                      },
                      "hooks_url": {
                        "example": "https://api.github.com/orgs/github/hooks",
                        "type": "string"
                      },
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "issues_url": {
                        "example": "https://api.github.com/orgs/github/issues",
                        "type": "string"
                      },
                      "login": {
                        "example": "github",
                        "type": "string"
                      },
                      "members_url": {
                        "example": "https://api.github.com/orgs/github/members{/member}",
                        "type": "string"
                      },
                      "node_id": {
                        "example": "MDEyOk9yZ2FuaXphdGlvbjE=",
                        "type": "string"
                      },
                      "public_members_url": {
                        "example": "https://api.github.com/orgs/github/public_members{/member}",
                        "type": "string"
                      },
                      "repos_url": {
                        "example": "https://api.github.com/orgs/github/repos",
                        "format": "uri",
                        "type": "string"
                      },
                      "url": {
                        "example": "https://api.github.com/orgs/github",
                        "format": "uri",
                        "type": "string"
                      }
                    },
                    "required": [
                      "login",
                      "url",
                      "id",
                      "node_id",
                      "repos_url",
                      "events_url",
                      "hooks_url",
                      "issues_url",
                      "members_url",
                      "public_members_url",
                      "avatar_url",
                      "description"
                    ],
                    "title": "Organization Simple",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create an organization",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "orgs"
          }
        }
      },
      "/admin/organizations/{org}": {
        "patch": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-an-organization-name"
          },
          "operationId": "enterprise-admin/update-org-name",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "login": "the-new-octocats"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "login": {
                      "description": "The organization's new name.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "login"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "202": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "message": "Job queued to rename organization. It may take a few minutes to complete.",
                        "url": "https://<hostname>/api/v3/organizations/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update an organization name",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "orgs"
          }
        }
      },
      "/admin/pre-receive-environments": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#list-pre-receive-environments"
          },
          "operationId": "enterprise-admin/list-pre-receive-environments",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The direction to sort the results by.",
              "in": "query",
              "name": "direction",
              "required": false,
              "schema": {
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "default": "created",
                "enum": [
                  "created",
                  "updated",
                  "name"
                ],
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": true,
                          "download": {
                            "downloaded_at": "2016-05-26T07:42:53-05:00",
                            "message": null,
                            "state": "not_started",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest"
                          },
                          "hooks_count": 14,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/1",
                          "id": 1,
                          "image_url": "githubenterprise://internal",
                          "name": "Default",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1"
                        },
                        {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": false,
                          "download": {
                            "downloaded_at": "2016-05-26T07:42:53-05:00",
                            "message": null,
                            "state": "success",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                          },
                          "hooks_count": 1,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                          "id": 2,
                          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                          "name": "DevTools Hook Env",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "default_environment": {
                          "type": "boolean"
                        },
                        "download": {
                          "properties": {
                            "downloaded_at": {
                              "nullable": true,
                              "type": "string"
                            },
                            "message": {
                              "nullable": true,
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "hooks_count": {
                          "type": "integer"
                        },
                        "html_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "image_url": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List pre-receive environments",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        },
        "post": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#create-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/create-pre-receive-environment",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                      "name": "DevTools Hook Env"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "image_url": {
                      "description": "URL from which to download a tarball of this environment.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The new pre-receive environment's name.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image_url"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "created_at": "2016-05-20T11:35:45-05:00",
                        "default_environment": false,
                        "download": {
                          "downloaded_at": null,
                          "message": null,
                          "state": "not_started",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                        },
                        "hooks_count": 1,
                        "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                        "id": 2,
                        "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                        "name": "DevTools Hook Env",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "default_environment": {
                        "type": "boolean"
                      },
                      "download": {
                        "properties": {
                          "downloaded_at": {
                            "nullable": true,
                            "type": "string"
                          },
                          "message": {
                            "nullable": true,
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "hooks_count": {
                        "type": "integer"
                      },
                      "html_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        }
      },
      "/admin/pre-receive-environments/{pre_receive_environment_id}": {
        "delete": {
          "deprecated": null,
          "description": "If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Cannot delete environment that has hooks_\n*   _Cannot delete environment when download is in progress_",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#delete-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/delete-pre-receive-environment",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "examples": {
                    "client-errors": {
                      "value": {
                        "errors": [
                          {
                            "code": "custom",
                            "message": "Cannot modify or delete the default environment",
                            "resource": "PreReceiveEnvironment"
                          }
                        ],
                        "message": "Validation Failed"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Client Errors"
            }
          },
          "summary": "Delete a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/get-pre-receive-environment",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "created_at": "2016-05-20T11:35:45-05:00",
                        "default_environment": false,
                        "download": {
                          "downloaded_at": null,
                          "message": null,
                          "state": "not_started",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                        },
                        "hooks_count": 1,
                        "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                        "id": 2,
                        "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                        "name": "DevTools Hook Env",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "default_environment": {
                        "type": "boolean"
                      },
                      "download": {
                        "properties": {
                          "downloaded_at": {
                            "nullable": true,
                            "type": "string"
                          },
                          "message": {
                            "nullable": true,
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "hooks_count": {
                        "type": "integer"
                      },
                      "html_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "You cannot modify the default environment. If you attempt to modify the default environment, you will receive a `422 Unprocessable Entity` response.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/update-pre-receive-environment",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                      "name": "DevTools Hook Env"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "image_url": {
                      "description": "URL from which to download a tarball of this environment.",
                      "type": "string"
                    },
                    "name": {
                      "description": "This pre-receive environment's new name.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default-response": {
                      "value": {
                        "created_at": "2016-05-20T11:35:45-05:00",
                        "default_environment": false,
                        "download": {
                          "downloaded_at": "2016-05-26T07:42:53-05:00",
                          "message": null,
                          "state": "success",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                        },
                        "hooks_count": 1,
                        "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                        "id": 2,
                        "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                        "name": "DevTools Hook Env",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "default_environment": {
                        "type": "boolean"
                      },
                      "download": {
                        "properties": {
                          "downloaded_at": {
                            "nullable": true,
                            "type": "string"
                          },
                          "message": {
                            "nullable": true,
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "hooks_count": {
                        "type": "integer"
                      },
                      "html_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "examples": {
                    "client-errors": {
                      "value": {
                        "errors": [
                          {
                            "code": "custom",
                            "message": "Cannot modify or delete the default environment",
                            "resource": "PreReceiveEnvironment"
                          }
                        ],
                        "message": "Validation Failed"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Client Errors"
            }
          },
          "summary": "Update a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        }
      },
      "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads": {
        "post": {
          "deprecated": null,
          "description": "Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.\n\nIf a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n* _Cannot modify or delete the default environment_\n* _Can not start a new download when a download is in progress_",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#start-a-pre-receive-environment-download"
          },
          "operationId": "enterprise-admin/start-pre-receive-environment-download",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "202": {
              "content": {
                "application/json": {
                  "examples": {
                    "default-response": {
                      "value": {
                        "downloaded_at": null,
                        "message": null,
                        "state": "not_started",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "downloaded_at": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "examples": {
                    "client-errors": {
                      "value": {
                        "errors": [
                          {
                            "code": "custom",
                            "message": "Can not start a new download when a download is in progress",
                            "resource": "PreReceiveEnvironment"
                          }
                        ],
                        "message": "Validation Failed"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Client Errors"
            }
          },
          "summary": "Start a pre-receive environment download",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        }
      },
      "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest": {
        "get": {
          "deprecated": null,
          "description": "In addition to seeing the download status at the \"[Get a pre-receive environment](#get-a-pre-receive-environment)\" endpoint, there is also this separate endpoint for just the download status.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-the-download-status-for-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/get-download-status-for-pre-receive-environment",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "downloaded_at": "2016-05-26T07:42:53-05:00",
                        "message": null,
                        "state": "success",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "downloaded_at": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the download status for a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        }
      },
      "/admin/pre-receive-hooks": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#list-pre-receive-hooks"
          },
          "operationId": "enterprise-admin/list-pre-receive-hooks",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The direction to sort the results by.",
              "in": "query",
              "name": "direction",
              "required": false,
              "schema": {
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The property to sort the results by.",
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "default": "created",
                "enum": [
                  "created",
                  "updated",
                  "name"
                ],
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "allow_downstream_configuration": false,
                          "enforcement": "disabled",
                          "environment": {
                            "created_at": "2016-05-20T11:35:45-05:00",
                            "default_environment": false,
                            "download": {
                              "downloaded_at": "2016-05-26T07:42:53-05:00",
                              "message": null,
                              "state": "success",
                              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                            },
                            "hooks_count": 1,
                            "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                            "id": 2,
                            "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                            "name": "DevTools Hook Env",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                          },
                          "id": 1,
                          "name": "Check Commits",
                          "script": "scripts/commmit_check.sh",
                          "script_repository": {
                            "full_name": "DevIT/hooks",
                            "html_url": "https://github.example.com/DevIT/hooks",
                            "id": 595,
                            "url": "https://github.example.com/api/v3/repos/DevIT/hooks"
                          }
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "allow_downstream_configuration": {
                          "type": "boolean"
                        },
                        "enforcement": {
                          "type": "string"
                        },
                        "environment": {
                          "properties": {
                            "created_at": {
                              "type": "string"
                            },
                            "default_environment": {
                              "type": "boolean"
                            },
                            "download": {
                              "properties": {
                                "downloaded_at": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "message": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "hooks_count": {
                              "type": "integer"
                            },
                            "html_url": {
                              "type": "string"
                            },
                            "id": {
                              "type": "integer"
                            },
                            "image_url": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "script": {
                          "type": "string"
                        },
                        "script_repository": {
                          "properties": {
                            "full_name": {
                              "type": "string"
                            },
                            "html_url": {
                              "type": "string"
                            },
                            "id": {
                              "type": "integer"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List pre-receive hooks",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-hooks"
          }
        },
        "post": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#create-a-pre-receive-hook"
          },
          "operationId": "enterprise-admin/create-pre-receive-hook",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "allow_downstream_configuration": false,
                      "enforcement": "disabled",
                      "environment": {
                        "id": 2
                      },
                      "name": "Check Commits",
                      "script": "scripts/commit_check.sh",
                      "script_repository": {
                        "full_name": "DevIT/hooks"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "allow_downstream_configuration": {
                      "description": "Whether enforcement can be overridden at the org or repo level. default: `false`",
                      "type": "boolean"
                    },
                    "enforcement": {
                      "description": "The state of enforcement for this hook. default: `disabled`",
                      "type": "string"
                    },
                    "environment": {
                      "additionalProperties": true,
                      "description": "The pre-receive environment where the script is executed.",
                      "type": "object"
                    },
                    "name": {
                      "description": "The name of the hook.",
                      "type": "string"
                    },
                    "script": {
                      "description": "The script that the hook runs.",
                      "type": "string"
                    },
                    "script_repository": {
                      "additionalProperties": true,
                      "description": "The GitHub repository where the script is kept.",
                      "type": "object"
                    }
                  },
                  "required": [
                    "name",
                    "script",
                    "script_repository",
                    "environment"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allow_downstream_configuration": false,
                        "enforcement": "disabled",
                        "environment": {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": false,
                          "download": {
                            "downloaded_at": "2016-05-26T07:42:53-05:00",
                            "message": null,
                            "state": "success",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                          },
                          "hooks_count": 1,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                          "id": 2,
                          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                          "name": "DevTools Hook Env",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                        },
                        "id": 1,
                        "name": "Check Commits",
                        "script": "scripts/commmit_check.sh",
                        "script_repository": {
                          "full_name": "DevIT/hooks",
                          "html_url": "https://github.example.com/DevIT/hooks",
                          "id": 595,
                          "url": "https://github.example.com/api/v3/repos/DevIT/hooks"
                        }
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allow_downstream_configuration": {
                        "type": "boolean"
                      },
                      "enforcement": {
                        "type": "string"
                      },
                      "environment": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "default_environment": {
                            "type": "boolean"
                          },
                          "download": {
                            "properties": {
                              "downloaded_at": {
                                "nullable": true,
                                "type": "string"
                              },
                              "message": {
                                "nullable": true,
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "hooks_count": {
                            "type": "integer"
                          },
                          "html_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "script": {
                        "type": "string"
                      },
                      "script_repository": {
                        "properties": {
                          "full_name": {
                            "type": "string"
                          },
                          "html_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a pre-receive hook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-hooks"
          }
        }
      },
      "/admin/pre-receive-hooks/{pre_receive_hook_id}": {
        "delete": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#delete-a-pre-receive-hook"
          },
          "operationId": "enterprise-admin/delete-pre-receive-hook",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive hook.",
              "in": "path",
              "name": "pre_receive_hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a pre-receive hook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-hooks"
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-a-pre-receive-hook"
          },
          "operationId": "enterprise-admin/get-pre-receive-hook",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive hook.",
              "in": "path",
              "name": "pre_receive_hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allow_downstream_configuration": false,
                        "enforcement": "disabled",
                        "environment": {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": false,
                          "download": {
                            "downloaded_at": "2016-05-26T07:42:53-05:00",
                            "message": null,
                            "state": "success",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                          },
                          "hooks_count": 1,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                          "id": 2,
                          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                          "name": "DevTools Hook Env",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                        },
                        "id": 1,
                        "name": "Check Commits",
                        "script": "scripts/commmit_check.sh",
                        "script_repository": {
                          "full_name": "DevIT/hooks",
                          "html_url": "https://github.example.com/DevIT/hooks",
                          "id": 595,
                          "url": "https://github.example.com/api/v3/repos/DevIT/hooks"
                        }
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allow_downstream_configuration": {
                        "type": "boolean"
                      },
                      "enforcement": {
                        "type": "string"
                      },
                      "environment": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "default_environment": {
                            "type": "boolean"
                          },
                          "download": {
                            "properties": {
                              "downloaded_at": {
                                "nullable": true,
                                "type": "string"
                              },
                              "message": {
                                "nullable": true,
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "hooks_count": {
                            "type": "integer"
                          },
                          "html_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "script": {
                        "type": "string"
                      },
                      "script_repository": {
                        "properties": {
                          "full_name": {
                            "type": "string"
                          },
                          "html_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a pre-receive hook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-hooks"
          }
        },
        "patch": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-a-pre-receive-hook"
          },
          "operationId": "enterprise-admin/update-pre-receive-hook",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive hook.",
              "in": "path",
              "name": "pre_receive_hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "allow_downstream_configuration": true,
                      "environment": {
                        "id": 1
                      },
                      "name": "Check Commits"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "allow_downstream_configuration": {
                      "description": "Whether enforcement can be overridden at the org or repo level.",
                      "type": "boolean"
                    },
                    "enforcement": {
                      "description": "The state of enforcement for this hook.",
                      "type": "string"
                    },
                    "environment": {
                      "additionalProperties": true,
                      "description": "The pre-receive environment where the script is executed.",
                      "type": "object"
                    },
                    "name": {
                      "description": "The name of the hook.",
                      "type": "string"
                    },
                    "script": {
                      "description": "The script that the hook runs.",
                      "type": "string"
                    },
                    "script_repository": {
                      "additionalProperties": true,
                      "description": "The GitHub repository where the script is kept.",
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allow_downstream_configuration": true,
                        "enforcement": "disabled",
                        "environment": {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": true,
                          "download": {
                            "downloaded_at": "2016-05-26T07:42:53-05:00",
                            "message": null,
                            "state": "success",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest"
                          },
                          "hooks_count": 1,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/1",
                          "id": 1,
                          "image_url": "githubenterprise://internal",
                          "name": "Default",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1"
                        },
                        "id": 1,
                        "name": "Check Commits",
                        "script": "scripts/commmit_check.sh",
                        "script_repository": {
                          "full_name": "DevIT/hooks",
                          "html_url": "https://github.example.com/DevIT/hooks",
                          "id": 595,
                          "url": "https://github.example.com/api/v3/repos/DevIT/hooks"
                        }
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allow_downstream_configuration": {
                        "type": "boolean"
                      },
                      "enforcement": {
                        "type": "string"
                      },
                      "environment": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "default_environment": {
                            "type": "boolean"
                          },
                          "download": {
                            "properties": {
                              "downloaded_at": {
                                "nullable": true,
                                "type": "string"
                              },
                              "message": {
                                "nullable": true,
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "hooks_count": {
                            "type": "integer"
                          },
                          "html_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "script": {
                        "type": "string"
                      },
                      "script_repository": {
                        "properties": {
                          "full_name": {
                            "type": "string"
                          },
                          "html_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update a pre-receive hook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-hooks"
          }
        }
      },
      "/admin/tokens": {
        "get": {
          "deprecated": null,
          "description": "Lists personal access tokens for all users, including admin users.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#list-personal-access-tokens"
          },
          "operationId": "enterprise-admin/list-personal-access-tokens",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "app": {
                            "client_id": "00000000000000000000",
                            "name": "My personal access token",
                            "url": "https://docs.github.com/enterprise/rest/reference/enterprise-admin#list-personal-access-tokens"
                          },
                          "created_at": "2019-04-24T21:49:02Z",
                          "fingerprint": null,
                          "hashed_token": "23cffb2fab1b0a62747863eba88cb9327e561f2f7a0c8661c0d9b83146cb8d45",
                          "id": 2,
                          "note": "My personal access token",
                          "note_url": null,
                          "scopes": [
                            "admin:business",
                            "admin:gpg_key",
                            "admin:org",
                            "admin:org_hook",
                            "admin:pre_receive_hook",
                            "admin:public_key",
                            "admin:repo_hook",
                            "delete_repo",
                            "gist",
                            "notifications",
                            "repo",
                            "user",
                            "write:discussion"
                          ],
                          "token": "ghp_16C7e42F292c6912E7710c838347Ae178B4a",
                          "token_last_eight": "Ae178B4a",
                          "updated_at": "2019-04-24T21:49:02Z",
                          "url": "https://enterprise.octocat.com/api/v3/authorizations/2"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                      "properties": {
                        "app": {
                          "properties": {
                            "client_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "url": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "client_id",
                            "name",
                            "url"
                          ],
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "expires_at": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "fingerprint": {
                          "nullable": true,
                          "type": "string"
                        },
                        "hashed_token": {
                          "nullable": true,
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "installation": {
                          "nullable": true,
                          "properties": {
                            "account": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "has_multiple_single_files": {
                              "example": true,
                              "type": "boolean"
                            },
                            "permissions": {
                              "description": "The permissions granted to the user-to-server access token.",
                              "example": {
                                "contents": "read",
                                "deployments": "write",
                                "issues": "read",
                                "single_file": "read"
                              },
                              "properties": {
                                "actions": {
                                  "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "administration": {
                                  "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "checks": {
                                  "description": "The level of permission to grant the access token for checks on code.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "contents": {
                                  "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "deployments": {
                                  "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "environments": {
                                  "description": "The level of permission to grant the access token for managing repository environments.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "issues": {
                                  "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "members": {
                                  "description": "The level of permission to grant the access token for organization teams and members.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "metadata": {
                                  "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_administration": {
                                  "description": "The level of permission to grant the access token to manage access to an organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_hooks": {
                                  "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_packages": {
                                  "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_plan": {
                                  "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                  "enum": [
                                    "read"
                                  ],
                                  "type": "string"
                                },
                                "organization_projects": {
                                  "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                  "enum": [
                                    "read",
                                    "write",
                                    "admin"
                                  ],
                                  "type": "string"
                                },
                                "organization_secrets": {
                                  "description": "The level of permission to grant the access token to manage organization secrets.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_self_hosted_runners": {
                                  "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_user_blocking": {
                                  "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "packages": {
                                  "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "pages": {
                                  "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "pull_requests": {
                                  "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "repository_hooks": {
                                  "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "repository_projects": {
                                  "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                  "enum": [
                                    "read",
                                    "write",
                                    "admin"
                                  ],
                                  "type": "string"
                                },
                                "secret_scanning_alerts": {
                                  "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "secrets": {
                                  "description": "The level of permission to grant the access token to manage repository secrets.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "security_events": {
                                  "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "single_file": {
                                  "description": "The level of permission to grant the access token to manage just a single file.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "statuses": {
                                  "description": "The level of permission to grant the access token for commit statuses.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "team_discussions": {
                                  "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "vulnerability_alerts": {
                                  "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "workflows": {
                                  "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                  "enum": [
                                    "write"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "App Permissions",
                              "type": "object"
                            },
                            "repositories_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "repository_selection": {
                              "description": "Describe whether all repositories have been selected or there's a selection involved",
                              "enum": [
                                "all",
                                "selected"
                              ],
                              "type": "string"
                            },
                            "single_file_name": {
                              "example": "config.yaml",
                              "nullable": true,
                              "type": "string"
                            },
                            "single_file_paths": {
                              "example": [
                                "config.yml",
                                ".github/issue_TEMPLATE.md"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "permissions",
                            "repository_selection",
                            "single_file_name",
                            "repositories_url",
                            "account"
                          ],
                          "title": "Scoped Installation",
                          "type": "object"
                        },
                        "note": {
                          "nullable": true,
                          "type": "string"
                        },
                        "note_url": {
                          "format": "uri",
                          "nullable": true,
                          "type": "string"
                        },
                        "scopes": {
                          "description": "A list of scopes that this authorization is in.",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "token": {
                          "type": "string"
                        },
                        "token_last_eight": {
                          "nullable": true,
                          "type": "string"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "user": {
                          "description": "A GitHub user.",
                          "nullable": true,
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                              "type": "string"
                            },
                            "followers_url": {
                              "example": "https://api.github.com/users/octocat/followers",
                              "format": "uri",
                              "type": "string"
                            },
                            "following_url": {
                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                              "type": "string"
                            },
                            "gists_url": {
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "type": "string"
                            },
                            "gravatar_id": {
                              "example": "41d064eb2195891e12d0413f63227ea7",
                              "nullable": true,
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "login": {
                              "example": "octocat",
                              "type": "string"
                            },
                            "name": {
                              "nullable": true,
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDQ6VXNlcjE=",
                              "type": "string"
                            },
                            "organizations_url": {
                              "example": "https://api.github.com/users/octocat/orgs",
                              "format": "uri",
                              "type": "string"
                            },
                            "received_events_url": {
                              "example": "https://api.github.com/users/octocat/received_events",
                              "format": "uri",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "site_admin": {
                              "type": "boolean"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:55Z\"",
                              "type": "string"
                            },
                            "starred_url": {
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "type": "string"
                            },
                            "subscriptions_url": {
                              "example": "https://api.github.com/users/octocat/subscriptions",
                              "format": "uri",
                              "type": "string"
                            },
                            "type": {
                              "example": "User",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/users/octocat",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "title": "Simple User",
                          "type": "object"
                        }
                      },
                      "required": [
                        "app",
                        "id",
                        "note",
                        "note_url",
                        "scopes",
                        "token",
                        "hashed_token",
                        "token_last_eight",
                        "fingerprint",
                        "url",
                        "created_at",
                        "updated_at",
                        "expires_at"
                      ],
                      "title": "Authorization",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List personal access tokens",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/tokens/{token_id}": {
        "delete": {
          "deprecated": null,
          "description": "Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#delete-a-personal-access-token"
          },
          "operationId": "enterprise-admin/delete-personal-access-token",
          "parameters": [
            {
              "description": "The unique identifier of the token.",
              "in": "path",
              "name": "token_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a personal access token",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/users": {
        "post": {
          "deprecated": null,
          "description": "If an external authentication mechanism is used, the login name should match the login name in the external system. If you are using LDAP authentication, you should also [update the LDAP mapping](https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user) for the user.\n\nThe login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send `\"octo_cat\"` as the login, a user named `\"octo-cat\"` will be created.\n\nIf the login name or email address is already associated with an account, the server will return a `422` response.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#create-a-user"
          },
          "operationId": "enterprise-admin/create-user",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "email": "octocat@github.com",
                      "login": "monalisa"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "email": {
                      "description": "**Required for built-in authentication.** The user's email\naddress. This parameter can be omitted when using CAS, LDAP, or SAML.\nFor more information, see \"[About authentication for your enterprise](https://docs.github.com/enterprise-server@3.7/admin/identity-and-access-management/managing-iam-for-your-enterprise/about-authentication-for-your-enterprise).\"",
                      "type": "string"
                    },
                    "login": {
                      "description": "The user's username.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "login"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                        "followers_url": "https://api.github.com/users/octocat/followers",
                        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                        "html_url": "https://github.com/octocat",
                        "id": 1,
                        "login": "octocat",
                        "node_id": "MDQ6VXNlcjE=",
                        "organizations_url": "https://api.github.com/users/octocat/orgs",
                        "received_events_url": "https://api.github.com/users/octocat/received_events",
                        "repos_url": "https://api.github.com/users/octocat/repos",
                        "site_admin": false,
                        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                        "type": "User",
                        "url": "https://api.github.com/users/octocat"
                      }
                    }
                  },
                  "schema": {
                    "description": "A GitHub user.",
                    "properties": {
                      "avatar_url": {
                        "example": "https://github.com/images/error/octocat_happy.gif",
                        "format": "uri",
                        "type": "string"
                      },
                      "email": {
                        "nullable": true,
                        "type": "string"
                      },
                      "events_url": {
                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                        "type": "string"
                      },
                      "followers_url": {
                        "example": "https://api.github.com/users/octocat/followers",
                        "format": "uri",
                        "type": "string"
                      },
                      "following_url": {
                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                        "type": "string"
                      },
                      "gists_url": {
                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                        "type": "string"
                      },
                      "gravatar_id": {
                        "example": "41d064eb2195891e12d0413f63227ea7",
                        "nullable": true,
                        "type": "string"
                      },
                      "html_url": {
                        "example": "https://github.com/octocat",
                        "format": "uri",
                        "type": "string"
                      },
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "login": {
                        "example": "octocat",
                        "type": "string"
                      },
                      "name": {
                        "nullable": true,
                        "type": "string"
                      },
                      "node_id": {
                        "example": "MDQ6VXNlcjE=",
                        "type": "string"
                      },
                      "organizations_url": {
                        "example": "https://api.github.com/users/octocat/orgs",
                        "format": "uri",
                        "type": "string"
                      },
                      "received_events_url": {
                        "example": "https://api.github.com/users/octocat/received_events",
                        "format": "uri",
                        "type": "string"
                      },
                      "repos_url": {
                        "example": "https://api.github.com/users/octocat/repos",
                        "format": "uri",
                        "type": "string"
                      },
                      "site_admin": {
                        "type": "boolean"
                      },
                      "starred_at": {
                        "example": "\"2020-07-09T00:17:55Z\"",
                        "type": "string"
                      },
                      "starred_url": {
                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                        "type": "string"
                      },
                      "subscriptions_url": {
                        "example": "https://api.github.com/users/octocat/subscriptions",
                        "format": "uri",
                        "type": "string"
                      },
                      "type": {
                        "example": "User",
                        "type": "string"
                      },
                      "url": {
                        "example": "https://api.github.com/users/octocat",
                        "format": "uri",
                        "type": "string"
                      }
                    },
                    "required": [
                      "avatar_url",
                      "events_url",
                      "followers_url",
                      "following_url",
                      "gists_url",
                      "gravatar_id",
                      "html_url",
                      "id",
                      "node_id",
                      "login",
                      "organizations_url",
                      "received_events_url",
                      "repos_url",
                      "site_admin",
                      "starred_url",
                      "subscriptions_url",
                      "type",
                      "url"
                    ],
                    "title": "Simple User",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/users/{username}": {
        "delete": {
          "deprecated": null,
          "description": "Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#suspend-a-user) is often a better option.\n\nYou can delete any user account except your own.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#delete-a-user"
          },
          "operationId": "enterprise-admin/delete-user",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        },
        "patch": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-the-username-for-a-user"
          },
          "operationId": "enterprise-admin/update-username-for-user",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "login": "thenewmonalisa"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "login": {
                      "description": "The user's new username.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "login"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "202": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "message": "Job queued to rename user. It may take a few minutes to complete.",
                        "url": "https://api.github.com/user/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update the username for a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/users/{username}/authorizations": {
        "delete": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#delete-an-impersonation-oauth-token"
          },
          "operationId": "enterprise-admin/delete-impersonation-o-auth-token",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete an impersonation OAuth token",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        },
        "post": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#create-an-impersonation-oauth-token"
          },
          "operationId": "enterprise-admin/create-impersonation-o-auth-token",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "scopes": [
                        "public_repo"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "scopes": {
                      "description": "A list of [scopes](https://docs.github.com/enterprise-server@3.7/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "scopes"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response when getting an existing impersonation OAuth token"
            },
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response when creating a new impersonation OAuth token"
            }
          },
          "summary": "Create an impersonation OAuth token",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/applications/grants": {
        "get": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#list-your-grants"
          },
          "operationId": "oauth-authorizations/list-grants",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The client ID of your GitHub app.",
              "in": "query",
              "name": "client_id",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "app": {
                            "client_id": "abcde12345fghij67890",
                            "name": "my github app",
                            "url": "http://my-github-app.com"
                          },
                          "created_at": "2011-09-06T17:26:27Z",
                          "id": 1,
                          "scopes": [
                            "public_repo"
                          ],
                          "updated_at": "2011-09-06T20:39:23Z",
                          "url": "https://api.github.com/applications/grants/1"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "The authorization associated with an OAuth Access.",
                      "properties": {
                        "app": {
                          "properties": {
                            "client_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "url": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "client_id",
                            "name",
                            "url"
                          ],
                          "type": "object"
                        },
                        "created_at": {
                          "example": "2011-09-06T17:26:27Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "example": 1,
                          "type": "integer"
                        },
                        "scopes": {
                          "example": [
                            "public_repo"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "updated_at": {
                          "example": "2011-09-06T20:39:23Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/applications/grants/1",
                          "format": "uri",
                          "type": "string"
                        },
                        "user": {
                          "description": "A GitHub user.",
                          "nullable": true,
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                              "type": "string"
                            },
                            "followers_url": {
                              "example": "https://api.github.com/users/octocat/followers",
                              "format": "uri",
                              "type": "string"
                            },
                            "following_url": {
                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                              "type": "string"
                            },
                            "gists_url": {
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "type": "string"
                            },
                            "gravatar_id": {
                              "example": "41d064eb2195891e12d0413f63227ea7",
                              "nullable": true,
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "login": {
                              "example": "octocat",
                              "type": "string"
                            },
                            "name": {
                              "nullable": true,
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDQ6VXNlcjE=",
                              "type": "string"
                            },
                            "organizations_url": {
                              "example": "https://api.github.com/users/octocat/orgs",
                              "format": "uri",
                              "type": "string"
                            },
                            "received_events_url": {
                              "example": "https://api.github.com/users/octocat/received_events",
                              "format": "uri",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "site_admin": {
                              "type": "boolean"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:55Z\"",
                              "type": "string"
                            },
                            "starred_url": {
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "type": "string"
                            },
                            "subscriptions_url": {
                              "example": "https://api.github.com/users/octocat/subscriptions",
                              "format": "uri",
                              "type": "string"
                            },
                            "type": {
                              "example": "User",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/users/octocat",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "title": "Simple User",
                          "type": "object"
                        }
                      },
                      "required": [
                        "app",
                        "id",
                        "scopes",
                        "url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Application Grant",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "304": {
              "description": "Not modified"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Requires authentication"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "List your grants",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        }
      },
      "/applications/grants/{grant_id}": {
        "delete": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#delete-a-grant"
          },
          "operationId": "oauth-authorizations/delete-grant",
          "parameters": [
            {
              "description": "The unique identifier of the grant.",
              "in": "path",
              "name": "grant_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Requires authentication"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            }
          },
          "summary": "Delete a grant",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        },
        "get": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#get-a-single-grant"
          },
          "operationId": "oauth-authorizations/get-grant",
          "parameters": [
            {
              "description": "The unique identifier of the grant.",
              "in": "path",
              "name": "grant_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "id": 1,
                        "scopes": [
                          "public_repo"
                        ],
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/applications/grants/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization associated with an OAuth Access.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "example": "2011-09-06T17:26:27Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "scopes": {
                        "example": [
                          "public_repo"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "example": "2011-09-06T20:39:23Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "example": "https://api.github.com/applications/grants/1",
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "scopes",
                      "url",
                      "created_at",
                      "updated_at"
                    ],
                    "title": "Application Grant",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Requires authentication"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            }
          },
          "summary": "Get a single grant",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        }
      },
      "/authorizations": {
        "get": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#list-your-authorizations"
          },
          "operationId": "oauth-authorizations/list-authorizations",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The client ID of your GitHub app.",
              "in": "query",
              "name": "client_id",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "app": {
                            "client_id": "00000000000000000000",
                            "name": "My personal access token",
                            "url": "https://docs.github.com/enterprise/rest/reference/enterprise-admin#list-personal-access-tokens"
                          },
                          "created_at": "2019-04-24T21:49:02Z",
                          "fingerprint": null,
                          "hashed_token": "23cffb2fab1b0a62747863eba88cb9327e561f2f7a0c8661c0d9b83146cb8d45",
                          "id": 2,
                          "note": "My personal access token",
                          "note_url": null,
                          "scopes": [
                            "admin:business",
                            "admin:gpg_key",
                            "admin:org",
                            "admin:org_hook",
                            "admin:pre_receive_hook",
                            "admin:public_key",
                            "admin:repo_hook",
                            "delete_repo",
                            "gist",
                            "notifications",
                            "repo",
                            "user",
                            "write:discussion"
                          ],
                          "token": "ghp_16C7e42F292c6912E7710c838347Ae178B4a",
                          "token_last_eight": "Ae178B4a",
                          "updated_at": "2019-04-24T21:49:02Z",
                          "url": "https://enterprise.octocat.com/api/v3/authorizations/2"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                      "properties": {
                        "app": {
                          "properties": {
                            "client_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "url": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "client_id",
                            "name",
                            "url"
                          ],
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "expires_at": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "fingerprint": {
                          "nullable": true,
                          "type": "string"
                        },
                        "hashed_token": {
                          "nullable": true,
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "installation": {
                          "nullable": true,
                          "properties": {
                            "account": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "has_multiple_single_files": {
                              "example": true,
                              "type": "boolean"
                            },
                            "permissions": {
                              "description": "The permissions granted to the user-to-server access token.",
                              "example": {
                                "contents": "read",
                                "deployments": "write",
                                "issues": "read",
                                "single_file": "read"
                              },
                              "properties": {
                                "actions": {
                                  "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "administration": {
                                  "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "checks": {
                                  "description": "The level of permission to grant the access token for checks on code.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "contents": {
                                  "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "deployments": {
                                  "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "environments": {
                                  "description": "The level of permission to grant the access token for managing repository environments.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "issues": {
                                  "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "members": {
                                  "description": "The level of permission to grant the access token for organization teams and members.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "metadata": {
                                  "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_administration": {
                                  "description": "The level of permission to grant the access token to manage access to an organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_hooks": {
                                  "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_packages": {
                                  "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_plan": {
                                  "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                  "enum": [
                                    "read"
                                  ],
                                  "type": "string"
                                },
                                "organization_projects": {
                                  "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                  "enum": [
                                    "read",
                                    "write",
                                    "admin"
                                  ],
                                  "type": "string"
                                },
                                "organization_secrets": {
                                  "description": "The level of permission to grant the access token to manage organization secrets.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_self_hosted_runners": {
                                  "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_user_blocking": {
                                  "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "packages": {
                                  "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "pages": {
                                  "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "pull_requests": {
                                  "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "repository_hooks": {
                                  "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "repository_projects": {
                                  "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                  "enum": [
                                    "read",
                                    "write",
                                    "admin"
                                  ],
                                  "type": "string"
                                },
                                "secret_scanning_alerts": {
                                  "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "secrets": {
                                  "description": "The level of permission to grant the access token to manage repository secrets.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "security_events": {
                                  "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "single_file": {
                                  "description": "The level of permission to grant the access token to manage just a single file.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "statuses": {
                                  "description": "The level of permission to grant the access token for commit statuses.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "team_discussions": {
                                  "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "vulnerability_alerts": {
                                  "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "workflows": {
                                  "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                  "enum": [
                                    "write"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "App Permissions",
                              "type": "object"
                            },
                            "repositories_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "repository_selection": {
                              "description": "Describe whether all repositories have been selected or there's a selection involved",
                              "enum": [
                                "all",
                                "selected"
                              ],
                              "type": "string"
                            },
                            "single_file_name": {
                              "example": "config.yaml",
                              "nullable": true,
                              "type": "string"
                            },
                            "single_file_paths": {
                              "example": [
                                "config.yml",
                                ".github/issue_TEMPLATE.md"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "permissions",
                            "repository_selection",
                            "single_file_name",
                            "repositories_url",
                            "account"
                          ],
                          "title": "Scoped Installation",
                          "type": "object"
                        },
                        "note": {
                          "nullable": true,
                          "type": "string"
                        },
                        "note_url": {
                          "format": "uri",
                          "nullable": true,
                          "type": "string"
                        },
                        "scopes": {
                          "description": "A list of scopes that this authorization is in.",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "token": {
                          "type": "string"
                        },
                        "token_last_eight": {
                          "nullable": true,
                          "type": "string"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "user": {
                          "description": "A GitHub user.",
                          "nullable": true,
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                              "type": "string"
                            },
                            "followers_url": {
                              "example": "https://api.github.com/users/octocat/followers",
                              "format": "uri",
                              "type": "string"
                            },
                            "following_url": {
                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                              "type": "string"
                            },
                            "gists_url": {
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "type": "string"
                            },
                            "gravatar_id": {
                              "example": "41d064eb2195891e12d0413f63227ea7",
                              "nullable": true,
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "login": {
                              "example": "octocat",
                              "type": "string"
                            },
                            "name": {
                              "nullable": true,
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDQ6VXNlcjE=",
                              "type": "string"
                            },
                            "organizations_url": {
                              "example": "https://api.github.com/users/octocat/orgs",
                              "format": "uri",
                              "type": "string"
                            },
                            "received_events_url": {
                              "example": "https://api.github.com/users/octocat/received_events",
                              "format": "uri",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "site_admin": {
                              "type": "boolean"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:55Z\"",
                              "type": "string"
                            },
                            "starred_url": {
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "type": "string"
                            },
                            "subscriptions_url": {
                              "example": "https://api.github.com/users/octocat/subscriptions",
                              "format": "uri",
                              "type": "string"
                            },
                            "type": {
                              "example": "User",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/users/octocat",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "title": "Simple User",
                          "type": "object"
                        }
                      },
                      "required": [
                        "app",
                        "id",
                        "note",
                        "note_url",
                        "scopes",
                        "token",
                        "hashed_token",
                        "token_last_eight",
                        "fingerprint",
                        "url",
                        "created_at",
                        "updated_at",
                        "expires_at"
                      ],
                      "title": "Authorization",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "304": {
              "description": "Not modified"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Requires authentication"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "List your authorizations",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        },
        "post": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@3.7/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates OAuth tokens using [Basic Authentication](https://docs.github.com/enterprise-server@3.7/rest/overview/other-authentication-methods#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@3.7/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub Enterprise Server from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://docs.github.com/enterprise-server@3.7/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://docs.github.com/enterprise-server@3.7/articles/about-identity-and-access-management-with-saml-single-sign-on).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#create-a-new-authorization"
          },
          "operationId": "oauth-authorizations/create-authorization",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "summary": "Create an authorization",
                    "value": {
                      "client_id": "abcde12345fghij67890",
                      "client_secret": "3ef4ad510c59ad37bac6bb4f80047fb3aee3cc7f",
                      "note": "optional note",
                      "note_url": "http://optional/note/url",
                      "scopes": [
                        "public_repo"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "client_id": {
                      "description": "The OAuth app client key for which to create the token.",
                      "maxLength": 20,
                      "type": "string"
                    },
                    "client_secret": {
                      "description": "The OAuth app client secret for which to create the token.",
                      "maxLength": 40,
                      "type": "string"
                    },
                    "fingerprint": {
                      "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                      "type": "string"
                    },
                    "note": {
                      "description": "A note to remind you what the OAuth token is for.",
                      "example": "Update all gems",
                      "type": "string"
                    },
                    "note_url": {
                      "description": "A URL to remind you what app the OAuth token is for.",
                      "type": "string"
                    },
                    "scopes": {
                      "description": "A list of scopes that this authorization is in.",
                      "example": [
                        "public_repo",
                        "user"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Location": {
                  "example": "https://api.github.com/authorizations/1",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "304": {
              "description": "Not modified"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Requires authentication"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "410": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Gone"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Create a new authorization",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        }
      },
      "/authorizations/clients/{client_id}": {
        "put": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@3.7/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@3.7/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\n**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app"
          },
          "operationId": "oauth-authorizations/get-or-create-authorization-for-app",
          "parameters": [
            {
              "description": "The client ID of the OAuth app.",
              "examples": {
                "default": {
                  "value": "abcde12345fghij67890"
                }
              },
              "in": "path",
              "name": "client_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "summary": "Create an authorization for an app",
                    "value": {
                      "client_secret": "3ef4ad510c59ad37bac6bb4f80047fb3aee3cc7f",
                      "note": "optional note",
                      "note_url": "http://optional/note/url",
                      "scopes": [
                        "public_repo"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "client_secret": {
                      "description": "The OAuth app client secret for which to create the token.",
                      "maxLength": 40,
                      "type": "string"
                    },
                    "fingerprint": {
                      "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                      "type": "string"
                    },
                    "note": {
                      "description": "A note to remind you what the OAuth token is for.",
                      "example": "Update all gems",
                      "type": "string"
                    },
                    "note_url": {
                      "description": "A URL to remind you what app the OAuth token is for.",
                      "type": "string"
                    },
                    "scopes": {
                      "description": "A list of scopes that this authorization is in.",
                      "example": [
                        "public_repo",
                        "user"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "type": "array"
                    }
                  },
                  "required": [
                    "client_secret"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "response-if-returning-an-existing-token": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "if returning an existing token",
              "headers": {
                "Location": {
                  "example": "https://api.github.com/authorizations/1",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "headers": {
                "Location": {
                  "example": "https://api.github.com/authorizations/1",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "304": {
              "description": "Not modified"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Requires authentication"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Get-or-create an authorization for a specific app",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        }
      },
      "/authorizations/clients/{client_id}/{fingerprint}": {
        "put": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@3.7/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nThis method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@3.7/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app-and-fingerprint"
          },
          "operationId": "oauth-authorizations/get-or-create-authorization-for-app-and-fingerprint",
          "parameters": [
            {
              "description": "The client ID of the OAuth app.",
              "examples": {
                "default": {
                  "value": "abcde12345fghij67890"
                }
              },
              "in": "path",
              "name": "client_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "in": "path",
              "name": "fingerprint",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "summary": "Create an authorization for an app and fingerprint",
                    "value": {
                      "client_secret": "3ef4ad510c59ad37bac6bb4f80047fb3aee3cc7f",
                      "note": "optional note",
                      "note_url": "http://optional/note/url",
                      "scopes": [
                        "public_repo"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "client_secret": {
                      "description": "The OAuth app client secret for which to create the token.",
                      "maxLength": 40,
                      "type": "string"
                    },
                    "note": {
                      "description": "A note to remind you what the OAuth token is for.",
                      "example": "Update all gems",
                      "type": "string"
                    },
                    "note_url": {
                      "description": "A URL to remind you what app the OAuth token is for.",
                      "type": "string"
                    },
                    "scopes": {
                      "description": "A list of scopes that this authorization is in.",
                      "example": [
                        "public_repo",
                        "user"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "type": "array"
                    }
                  },
                  "required": [
                    "client_secret"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "response-if-returning-an-existing-token": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "if returning an existing token",
              "headers": {
                "Location": {
                  "example": "https://api.github.com/authorizations/1",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2012-10-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response if returning a new token",
              "headers": {
                "Location": {
                  "example": "https://api.github.com/authorizations/1",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Get-or-create an authorization for a specific app and fingerprint",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        }
      },
      "/authorizations/{authorization_id}": {
        "delete": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#delete-an-authorization"
          },
          "operationId": "oauth-authorizations/delete-authorization",
          "parameters": [
            {
              "description": "The unique identifier of the authorization.",
              "in": "path",
              "name": "authorization_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Requires authentication"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            }
          },
          "summary": "Delete an authorization",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        },
        "get": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#get-a-single-authorization"
          },
          "operationId": "oauth-authorizations/get-authorization",
          "parameters": [
            {
              "description": "The unique identifier of the authorization.",
              "in": "path",
              "name": "authorization_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Requires authentication"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            }
          },
          "summary": "Get a single authorization",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        },
        "patch": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.7/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@3.7/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/oauth-authorizations#update-an-existing-authorization"
          },
          "operationId": "oauth-authorizations/update-authorization",
          "parameters": [
            {
              "description": "The unique identifier of the authorization.",
              "in": "path",
              "name": "authorization_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "summary": "Example of updating scopes and note",
                    "value": {
                      "add_scopes": [
                        "public_repo"
                      ],
                      "note": "optional note",
                      "remove_scopes": [
                        "user"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "add_scopes": {
                      "description": "A list of scopes to add to this authorization.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "fingerprint": {
                      "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                      "type": "string"
                    },
                    "note": {
                      "description": "A note to remind you what the OAuth token is for.",
                      "example": "Update all gems",
                      "type": "string"
                    },
                    "note_url": {
                      "description": "A URL to remind you what app the OAuth token is for.",
                      "type": "string"
                    },
                    "remove_scopes": {
                      "description": "A list of scopes to remove from this authorization.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "scopes": {
                      "description": "A list of scopes that this authorization is in.",
                      "example": [
                        "public_repo",
                        "user"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Update an existing authorization",
          "tags": [
            "oauth-authorizations"
          ],
          "x-github": {
            "category": "oauth-authorizations",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2020-11-13",
            "subcategory": null
          }
        }
      },
      "/enterprise/announcement": {
        "delete": {
          "deprecated": null,
          "description": "Removes the global announcement banner in your enterprise.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/enterprise-admin/announcement#remove-the-global-announcement-banner"
          },
          "operationId": "enterprise-admin/remove-announcement",
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove the global announcement banner",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "announcement"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Gets the current message and expiration date of the global announcement banner in your enterprise.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/enterprise-admin/announcement#get-the-global-announcement-banner"
          },
          "operationId": "enterprise-admin/get-announcement",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Announcement banner",
                      "value": {
                        "announcement": "Very **important** announcement about _something_.",
                        "expires_at": "2021-01-01T00:00:00.000+00:00",
                        "user_dismissible": false
                      }
                    }
                  },
                  "schema": {
                    "description": "Enterprise global announcement",
                    "properties": {
                      "announcement": {
                        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-server@3.7/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                        "example": "Very **important** announcement about _something_.",
                        "nullable": true,
                        "type": "string"
                      },
                      "expires_at": {
                        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                        "example": "\"2021-01-01T00:00:00.000-07:00\"",
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "announcement"
                    ],
                    "title": "Enterprise Announcement",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the global announcement banner",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "announcement"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Sets the message and expiration time for the global announcement banner in your enterprise.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/enterprise-admin/announcement#set-the-global-announcement-banner"
          },
          "operationId": "enterprise-admin/set-announcement",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "announcement": "Very **important** announcement about _something_.",
                      "expires_at": "2021-01-01T00:00:00.000+00:00"
                    }
                  }
                },
                "schema": {
                  "description": "Enterprise global announcement",
                  "properties": {
                    "announcement": {
                      "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-server@3.7/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                      "example": "Very **important** announcement about _something_.",
                      "nullable": true,
                      "type": "string"
                    },
                    "expires_at": {
                      "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                      "example": "\"2021-01-01T00:00:00.000-07:00\"",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "announcement"
                  ],
                  "title": "Enterprise Announcement",
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Announcement banner",
                      "value": {
                        "announcement": "Very **important** announcement about _something_.",
                        "expires_at": "2021-01-01T00:00:00.000+00:00",
                        "user_dismissible": false
                      }
                    }
                  },
                  "schema": {
                    "description": "Enterprise global announcement",
                    "properties": {
                      "announcement": {
                        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-server@3.7/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                        "example": "Very **important** announcement about _something_.",
                        "nullable": true,
                        "type": "string"
                      },
                      "expires_at": {
                        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                        "example": "\"2021-01-01T00:00:00.000-07:00\"",
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "announcement"
                    ],
                    "title": "Enterprise Announcement",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Set the global announcement banner",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "announcement"
          }
        }
      },
      "/enterprise/settings/license": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-license-information"
          },
          "operationId": "enterprise-admin/get-license-information",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "days_until_expiration": 365,
                        "expire_at": "2016/02/06 12:41:52 -0600",
                        "kind": "standard",
                        "seats": 1400,
                        "seats_available": 84,
                        "seats_used": 1316
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "days_until_expiration": {
                        "type": "integer"
                      },
                      "expire_at": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "seats": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          }
                        ]
                      },
                      "seats_available": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          }
                        ]
                      },
                      "seats_used": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get license information",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "license"
          }
        }
      },
      "/enterprise/stats/all": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-statistics"
          },
          "operationId": "enterprise-admin/get-all-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "comments": {
                          "total_commit_comments": 6,
                          "total_gist_comments": 28,
                          "total_issue_comments": 366,
                          "total_pull_request_comments": 30
                        },
                        "gists": {
                          "private_gists": 151,
                          "public_gists": 25,
                          "total_gists": 178
                        },
                        "hooks": {
                          "active_hooks": 23,
                          "inactive_hooks": 4,
                          "total_hooks": 27
                        },
                        "issues": {
                          "closed_issues": 96,
                          "open_issues": 83,
                          "total_issues": 179
                        },
                        "milestones": {
                          "closed_milestones": 1,
                          "open_milestones": 6,
                          "total_milestones": 7
                        },
                        "orgs": {
                          "disabled_orgs": 0,
                          "total_orgs": 33,
                          "total_team_members": 314,
                          "total_teams": 60
                        },
                        "pages": {
                          "total_pages": 36
                        },
                        "pulls": {
                          "mergeable_pulls": 21,
                          "merged_pulls": 60,
                          "total_pulls": 86,
                          "unmergeable_pulls": 3
                        },
                        "repos": {
                          "fork_repos": 18,
                          "org_repos": 51,
                          "root_repos": 194,
                          "total_pushes": 3082,
                          "total_repos": 212,
                          "total_wikis": 15
                        },
                        "users": {
                          "admin_users": 45,
                          "suspended_users": 21,
                          "total_users": 254
                        }
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "comments": {
                        "properties": {
                          "total_commit_comments": {
                            "type": "integer"
                          },
                          "total_gist_comments": {
                            "type": "integer"
                          },
                          "total_issue_comments": {
                            "type": "integer"
                          },
                          "total_pull_request_comments": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_commit_comments",
                          "total_gist_comments",
                          "total_issue_comments",
                          "total_pull_request_comments"
                        ],
                        "title": "Enterprise Comment Stats",
                        "type": "object"
                      },
                      "gists": {
                        "properties": {
                          "private_gists": {
                            "type": "integer"
                          },
                          "public_gists": {
                            "type": "integer"
                          },
                          "total_gists": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_gists",
                          "private_gists",
                          "public_gists"
                        ],
                        "title": "Enterprise Gist Stats",
                        "type": "object"
                      },
                      "hooks": {
                        "properties": {
                          "active_hooks": {
                            "type": "integer"
                          },
                          "inactive_hooks": {
                            "type": "integer"
                          },
                          "total_hooks": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_hooks",
                          "active_hooks",
                          "inactive_hooks"
                        ],
                        "title": "Hooks Enterprise Stats",
                        "type": "object"
                      },
                      "issues": {
                        "properties": {
                          "closed_issues": {
                            "type": "integer"
                          },
                          "open_issues": {
                            "type": "integer"
                          },
                          "total_issues": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_issues",
                          "open_issues",
                          "closed_issues"
                        ],
                        "title": "Enterprise Issue Stats",
                        "type": "object"
                      },
                      "milestones": {
                        "properties": {
                          "closed_milestones": {
                            "type": "integer"
                          },
                          "open_milestones": {
                            "type": "integer"
                          },
                          "total_milestones": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_milestones",
                          "open_milestones",
                          "closed_milestones"
                        ],
                        "title": "Enterprise Milestone Stats",
                        "type": "object"
                      },
                      "orgs": {
                        "properties": {
                          "disabled_orgs": {
                            "type": "integer"
                          },
                          "total_orgs": {
                            "type": "integer"
                          },
                          "total_team_members": {
                            "type": "integer"
                          },
                          "total_teams": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_orgs",
                          "disabled_orgs",
                          "total_teams",
                          "total_team_members"
                        ],
                        "title": "Enterprise Organization Stats",
                        "type": "object"
                      },
                      "pages": {
                        "properties": {
                          "total_pages": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_pages"
                        ],
                        "title": "Enterprise Pages Stats",
                        "type": "object"
                      },
                      "pulls": {
                        "properties": {
                          "mergeable_pulls": {
                            "type": "integer"
                          },
                          "merged_pulls": {
                            "type": "integer"
                          },
                          "total_pulls": {
                            "type": "integer"
                          },
                          "unmergeable_pulls": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_pulls",
                          "merged_pulls",
                          "mergeable_pulls",
                          "unmergeable_pulls"
                        ],
                        "title": "Enterprise Pull Request Stats",
                        "type": "object"
                      },
                      "repos": {
                        "properties": {
                          "fork_repos": {
                            "type": "integer"
                          },
                          "org_repos": {
                            "type": "integer"
                          },
                          "root_repos": {
                            "type": "integer"
                          },
                          "total_pushes": {
                            "type": "integer"
                          },
                          "total_repos": {
                            "type": "integer"
                          },
                          "total_wikis": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_repos",
                          "root_repos",
                          "fork_repos",
                          "org_repos",
                          "total_pushes",
                          "total_wikis"
                        ],
                        "title": "Repository Enterprise Stats",
                        "type": "object"
                      },
                      "users": {
                        "properties": {
                          "admin_users": {
                            "type": "integer"
                          },
                          "suspended_users": {
                            "type": "integer"
                          },
                          "total_users": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_users",
                          "admin_users",
                          "suspended_users"
                        ],
                        "title": "Enterprise User Stats",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get all statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/comments": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-comment-statistics"
          },
          "operationId": "enterprise-admin/get-comment-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "total_commit_comments": 5000,
                        "total_gist_comments": 400,
                        "total_issue_comments": 10900,
                        "total_pull_request_comments": 9900
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "total_commit_comments": {
                        "type": "integer"
                      },
                      "total_gist_comments": {
                        "type": "integer"
                      },
                      "total_issue_comments": {
                        "type": "integer"
                      },
                      "total_pull_request_comments": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_commit_comments",
                      "total_gist_comments",
                      "total_issue_comments",
                      "total_pull_request_comments"
                    ],
                    "title": "Enterprise Comment Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get comment statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/gists": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-gist-statistics"
          },
          "operationId": "enterprise-admin/get-gist-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "private_gists": 30,
                        "public_gists": 470,
                        "total_gists": 500
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "private_gists": {
                        "type": "integer"
                      },
                      "public_gists": {
                        "type": "integer"
                      },
                      "total_gists": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_gists",
                      "private_gists",
                      "public_gists"
                    ],
                    "title": "Enterprise Gist Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get gist statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/hooks": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-hooks-statistics"
          },
          "operationId": "enterprise-admin/get-hooks-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "active_hooks": 47,
                        "inactive_hooks": 3,
                        "total_hooks": 50
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "active_hooks": {
                        "type": "integer"
                      },
                      "inactive_hooks": {
                        "type": "integer"
                      },
                      "total_hooks": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_hooks",
                      "active_hooks",
                      "inactive_hooks"
                    ],
                    "title": "Hooks Enterprise Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get hooks statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/issues": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-issues-statistics"
          },
          "operationId": "enterprise-admin/get-issue-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "closed_issues": 4700,
                        "open_issues": 300,
                        "total_issues": 5000
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "closed_issues": {
                        "type": "integer"
                      },
                      "open_issues": {
                        "type": "integer"
                      },
                      "total_issues": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_issues",
                      "open_issues",
                      "closed_issues"
                    ],
                    "title": "Enterprise Issue Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get issue statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/milestones": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-milestone-statistics"
          },
          "operationId": "enterprise-admin/get-milestone-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "closed_milestones": 80,
                        "open_milestones": 10,
                        "total_milestones": 90
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "closed_milestones": {
                        "type": "integer"
                      },
                      "open_milestones": {
                        "type": "integer"
                      },
                      "total_milestones": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_milestones",
                      "open_milestones",
                      "closed_milestones"
                    ],
                    "title": "Enterprise Milestone Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get milestone statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/orgs": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-organization-statistics"
          },
          "operationId": "enterprise-admin/get-org-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "disabled_orgs": 1,
                        "total_orgs": 50,
                        "total_team_members": 700,
                        "total_teams": 70
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "disabled_orgs": {
                        "type": "integer"
                      },
                      "total_orgs": {
                        "type": "integer"
                      },
                      "total_team_members": {
                        "type": "integer"
                      },
                      "total_teams": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_orgs",
                      "disabled_orgs",
                      "total_teams",
                      "total_team_members"
                    ],
                    "title": "Enterprise Organization Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get organization statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/pages": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-pages-statistics"
          },
          "operationId": "enterprise-admin/get-pages-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "total_pages": 20
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "total_pages": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_pages"
                    ],
                    "title": "Enterprise Pages Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get pages statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/pulls": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-pull-requests-statistics"
          },
          "operationId": "enterprise-admin/get-pull-request-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "mergeable_pulls": 90,
                        "merged_pulls": 1100,
                        "total_pulls": 1200,
                        "unmergeable_pulls": 10
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "mergeable_pulls": {
                        "type": "integer"
                      },
                      "merged_pulls": {
                        "type": "integer"
                      },
                      "total_pulls": {
                        "type": "integer"
                      },
                      "unmergeable_pulls": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_pulls",
                      "merged_pulls",
                      "mergeable_pulls",
                      "unmergeable_pulls"
                    ],
                    "title": "Enterprise Pull Request Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get pull request statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/repos": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-repository-statistics"
          },
          "operationId": "enterprise-admin/get-repo-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "fork_repos": 10,
                        "org_repos": 150,
                        "root_repos": 1,
                        "total_pushes": 39000,
                        "total_repos": 200,
                        "total_wikis": 5
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "fork_repos": {
                        "type": "integer"
                      },
                      "org_repos": {
                        "type": "integer"
                      },
                      "root_repos": {
                        "type": "integer"
                      },
                      "total_pushes": {
                        "type": "integer"
                      },
                      "total_repos": {
                        "type": "integer"
                      },
                      "total_wikis": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_repos",
                      "root_repos",
                      "fork_repos",
                      "org_repos",
                      "total_pushes",
                      "total_wikis"
                    ],
                    "title": "Repository Enterprise Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get repository statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/users": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-users-statistics"
          },
          "operationId": "enterprise-admin/get-user-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "example": {
                      "value": {
                        "admin_users": 3,
                        "suspended_users": 1,
                        "total_users": 100
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "admin_users": {
                        "type": "integer"
                      },
                      "suspended_users": {
                        "type": "integer"
                      },
                      "total_users": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_users",
                      "admin_users",
                      "suspended_users"
                    ],
                    "title": "Enterprise User Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get users statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprises/{enterprise}/actions/cache/usage": {
        "get": {
          "deprecated": null,
          "description": "Gets the total GitHub Actions cache usage for an enterprise.\nThe data fetched using this API is refreshed approximately every 5 minutes, so values returned from this endpoint may take at least 5 minutes to get updated.\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#get-github-actions-cache-usage-for-an-enterprise"
          },
          "operationId": "actions/get-actions-cache-usage-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "total_active_caches_count": 5,
                        "total_active_caches_size_in_bytes": 3344284
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "total_active_caches_count": {
                        "description": "The count of active caches across all repositories of an enterprise or an organization.",
                        "type": "integer"
                      },
                      "total_active_caches_size_in_bytes": {
                        "description": "The total size in bytes of all active cache items across all repositories of an enterprise or an organization.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_active_caches_count",
                      "total_active_caches_size_in_bytes"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "Get GitHub Actions cache usage for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "cache"
          }
        }
      },
      "/enterprises/{enterprise}/actions/cache/usage-policy": {
        "get": {
          "deprecated": null,
          "description": "Gets the GitHub Actions cache usage policy for an enterprise.\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\nGitHub Apps must have the `enterprise_administration:write` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#get-github-actions-cache-usage-policy-for-an-enterprise"
          },
          "operationId": "actions/get-actions-cache-usage-policy-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "max_repo_cache_size_limit_in_gb": 15,
                        "repo_cache_size_limit_in_gb": 10
                      }
                    }
                  },
                  "schema": {
                    "description": "GitHub Actions cache usage policy for an enterprise.",
                    "properties": {
                      "max_repo_cache_size_limit_in_gb": {
                        "description": "For repositories in an enterprise, the maximum value that can be set as the limit for the sum of all caches in a repository, in gigabytes.",
                        "example": 15,
                        "type": "integer"
                      },
                      "repo_cache_size_limit_in_gb": {
                        "description": "For repositories in an enterprise, the default size limit for the sum of all caches in a repository, in gigabytes.",
                        "example": 10,
                        "type": "integer"
                      }
                    },
                    "title": "Actions cache usage policy for an enterprise",
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "Get GitHub Actions cache usage policy for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "cache"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Sets the GitHub Actions cache usage policy for an enterprise.\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\nGitHub Apps must have the `enterprise_administration:write` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#set-github-actions-cache-usage-policy-for-an-enterprise"
          },
          "operationId": "actions/set-actions-cache-usage-policy-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "selected_actions": {
                    "value": {
                      "max_repo_cache_size_limit_in_gb": 15,
                      "repo_cache_size_limit_in_gb": 10
                    }
                  }
                },
                "schema": {
                  "description": "GitHub Actions cache usage policy for an enterprise.",
                  "properties": {
                    "max_repo_cache_size_limit_in_gb": {
                      "description": "For repositories in an enterprise, the maximum value that can be set as the limit for the sum of all caches in a repository, in gigabytes.",
                      "example": 15,
                      "type": "integer"
                    },
                    "repo_cache_size_limit_in_gb": {
                      "description": "For repositories in an enterprise, the default size limit for the sum of all caches in a repository, in gigabytes.",
                      "example": 10,
                      "type": "integer"
                    }
                  },
                  "title": "Actions cache usage policy for an enterprise",
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set GitHub Actions cache usage policy for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "cache"
          }
        }
      },
      "/enterprises/{enterprise}/actions/permissions": {
        "get": {
          "deprecated": null,
          "description": "Gets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#get-github-actions-permissions-for-an-enterprise"
          },
          "operationId": "enterprise-admin/get-github-actions-permissions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allowed_actions": "selected",
                        "enabled_organizations": "all",
                        "selected_actions_url": "https://api.github.com/enterprises/2/actions/permissions/selected-actions"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allowed_actions": {
                        "description": "The permissions policy that controls the actions that are allowed to run.",
                        "enum": [
                          "all",
                          "local_only",
                          "selected"
                        ],
                        "type": "string"
                      },
                      "enabled_organizations": {
                        "description": "The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions.",
                        "enum": [
                          "all",
                          "none",
                          "selected"
                        ],
                        "type": "string"
                      },
                      "selected_actions_url": {
                        "description": "The API URL to use to get or set the actions that are allowed to run, when `allowed_actions` is set to `selected`.",
                        "type": "string"
                      },
                      "selected_organizations_url": {
                        "description": "The API URL to use to get or set the selected organizations that are allowed to run GitHub Actions, when `enabled_organizations` is set to `selected`.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "enabled_organizations"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get GitHub Actions permissions for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "permissions"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Sets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#set-github-actions-permissions-for-an-enterprise"
          },
          "operationId": "enterprise-admin/set-github-actions-permissions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "allowed_actions": "selected",
                      "enabled_organizations": "all"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "allowed_actions": {
                      "description": "The permissions policy that controls the actions that are allowed to run.",
                      "enum": [
                        "all",
                        "local_only",
                        "selected"
                      ],
                      "type": "string"
                    },
                    "enabled_organizations": {
                      "description": "The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions.",
                      "enum": [
                        "all",
                        "none",
                        "selected"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "enabled_organizations"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set GitHub Actions permissions for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "permissions"
          }
        }
      },
      "/enterprises/{enterprise}/actions/permissions/organizations": {
        "get": {
          "deprecated": null,
          "description": "Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#list-selected-organizations-enabled-for-github-actions-in-an-enterprise"
          },
          "operationId": "enterprise-admin/list-selected-organizations-enabled-github-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "organizations": [
                          {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "description": "A great organization",
                            "events_url": "https://api.github.com/orgs/octo-org/events",
                            "hooks_url": "https://api.github.com/orgs/octo-org/hooks",
                            "id": 161335,
                            "issues_url": "https://api.github.com/orgs/octo-org/issues",
                            "login": "octocat",
                            "members_url": "https://api.github.com/orgs/octo-org/members{/member}",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "public_members_url": "https://api.github.com/orgs/octo-org/public_members{/member}",
                            "repos_url": "https://api.github.com/orgs/octo-org/repos",
                            "url": "https://api.github.com/orgs/octo-org"
                          }
                        ],
                        "total_count": 1
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "organizations": {
                        "items": {
                          "description": "A GitHub organization.",
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "type": "string"
                            },
                            "description": {
                              "example": "A great organization",
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/orgs/github/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "hooks_url": {
                              "example": "https://api.github.com/orgs/github/hooks",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "issues_url": {
                              "example": "https://api.github.com/orgs/github/issues",
                              "type": "string"
                            },
                            "login": {
                              "example": "github",
                              "type": "string"
                            },
                            "members_url": {
                              "example": "https://api.github.com/orgs/github/members{/member}",
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDEyOk9yZ2FuaXphdGlvbjE=",
                              "type": "string"
                            },
                            "public_members_url": {
                              "example": "https://api.github.com/orgs/github/public_members{/member}",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/orgs/github/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/orgs/github",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "login",
                            "url",
                            "id",
                            "node_id",
                            "repos_url",
                            "events_url",
                            "hooks_url",
                            "issues_url",
                            "members_url",
                            "public_members_url",
                            "avatar_url",
                            "description"
                          ],
                          "title": "Organization Simple",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "organizations"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List selected organizations enabled for GitHub Actions in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "permissions"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#set-selected-organizations-enabled-for-github-actions-in-an-enterprise"
          },
          "operationId": "enterprise-admin/set-selected-organizations-enabled-github-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "selected_organization_ids": [
                        32,
                        91
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "selected_organization_ids": {
                      "description": "List of organization IDs to enable for GitHub Actions.",
                      "items": {
                        "description": "Unique identifier of the organization.",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "selected_organization_ids"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set selected organizations enabled for GitHub Actions in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "permissions"
          }
        }
      },
      "/enterprises/{enterprise}/actions/permissions/selected-actions": {
        "get": {
          "deprecated": null,
          "description": "Gets the selected actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#get-allowed-actions-for-an-enterprise"
          },
          "operationId": "enterprise-admin/get-allowed-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "github_owned_allowed": true,
                        "patterns_allowed": [
                          "monalisa/octocat@*",
                          "docker/*"
                        ],
                        "verified_allowed": false
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "github_owned_allowed": {
                        "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.",
                        "type": "boolean"
                      },
                      "patterns_allowed": {
                        "description": "Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.\"",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "github_owned_allowed",
                      "patterns_allowed"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get allowed actions for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "permissions"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Sets the actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#set-allowed-actions-for-an-enterprise"
          },
          "operationId": "enterprise-admin/set-allowed-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "selected_actions": {
                    "value": {
                      "github_owned_allowed": true,
                      "patterns_allowed": [
                        "monalisa/octocat@*",
                        "docker/*"
                      ],
                      "verified_allowed": false
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "github_owned_allowed": {
                      "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.",
                      "type": "boolean"
                    },
                    "patterns_allowed": {
                      "description": "Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.\"",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "github_owned_allowed",
                    "patterns_allowed"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set allowed actions for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "permissions"
          }
        }
      },
      "/enterprises/{enterprise}/actions/permissions/workflow": {
        "get": {
          "deprecated": null,
          "description": "Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an enterprise,\nas well as whether GitHub Actions can submit approving pull request reviews. For more information, see\n\"[Enforcing a policy for workflow permissions in your enterprise](https://docs.github.com/enterprise-server@3.7/admin/policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-github-actions-in-your-enterprise#enforcing-a-policy-for-workflow-permissions-in-your-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\nGitHub Apps must have the `enterprise_administration:write` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#get-default-workflow-permissions-for-an-enterprise"
          },
          "operationId": "actions/get-github-actions-default-workflow-permissions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Give read-only permission, and allow approving PRs.",
                      "value": {
                        "can_approve_pull_request_reviews": true,
                        "default_workflow_permissions": "read"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "can_approve_pull_request_reviews": {
                        "description": "Whether GitHub Actions can approve pull requests. Enabling this can be a security risk.",
                        "type": "boolean"
                      },
                      "default_workflow_permissions": {
                        "description": "The default workflow permissions granted to the GITHUB_TOKEN when running workflows.",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "default_workflow_permissions",
                      "can_approve_pull_request_reviews"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Success response"
            }
          },
          "summary": "Get default workflow permissions for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "permissions"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an enterprise, and sets\nwhether GitHub Actions can submit approving pull request reviews. For more information, see\n\"[Enforcing a policy for workflow permissions in your enterprise](https://docs.github.com/enterprise-server@3.7/admin/policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-github-actions-in-your-enterprise#enforcing-a-policy-for-workflow-permissions-in-your-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\nGitHub Apps must have the `enterprise_administration:write` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#set-default-workflow-permissions-for-an-enterprise"
          },
          "operationId": "actions/set-github-actions-default-workflow-permissions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "summary": "Give read-only permission, and allow approving PRs.",
                    "value": {
                      "can_approve_pull_request_reviews": true,
                      "default_workflow_permissions": "read"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "can_approve_pull_request_reviews": {
                      "description": "Whether GitHub Actions can approve pull requests. Enabling this can be a security risk.",
                      "type": "boolean"
                    },
                    "default_workflow_permissions": {
                      "description": "The default workflow permissions granted to the GITHUB_TOKEN when running workflows.",
                      "enum": [
                        "read",
                        "write"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Success response"
            }
          },
          "summary": "Set default workflow permissions for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "permissions"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations": {
        "get": {
          "deprecated": null,
          "description": "Lists the organizations with access to a self-hosted runner group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#list-organization-access-to-a-self-hosted-runner-group-in-a-enterprise"
          },
          "operationId": "enterprise-admin/list-org-access-to-self-hosted-runner-group-in-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "organizations": [
                          {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "description": "A great organization",
                            "events_url": "https://api.github.com/orgs/octo-org/events",
                            "hooks_url": "https://api.github.com/orgs/octo-org/hooks",
                            "id": 161335,
                            "issues_url": "https://api.github.com/orgs/octo-org/issues",
                            "login": "octocat",
                            "members_url": "https://api.github.com/orgs/octo-org/members{/member}",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "public_members_url": "https://api.github.com/orgs/octo-org/public_members{/member}",
                            "repos_url": "https://api.github.com/orgs/octo-org/repos",
                            "url": "https://api.github.com/orgs/octo-org"
                          }
                        ],
                        "total_count": 1
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "organizations": {
                        "items": {
                          "description": "A GitHub organization.",
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "type": "string"
                            },
                            "description": {
                              "example": "A great organization",
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/orgs/github/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "hooks_url": {
                              "example": "https://api.github.com/orgs/github/hooks",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "issues_url": {
                              "example": "https://api.github.com/orgs/github/issues",
                              "type": "string"
                            },
                            "login": {
                              "example": "github",
                              "type": "string"
                            },
                            "members_url": {
                              "example": "https://api.github.com/orgs/github/members{/member}",
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDEyOk9yZ2FuaXphdGlvbjE=",
                              "type": "string"
                            },
                            "public_members_url": {
                              "example": "https://api.github.com/orgs/github/public_members{/member}",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/orgs/github/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/orgs/github",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "login",
                            "url",
                            "id",
                            "node_id",
                            "repos_url",
                            "events_url",
                            "hooks_url",
                            "issues_url",
                            "members_url",
                            "public_members_url",
                            "avatar_url",
                            "description"
                          ],
                          "title": "Organization Simple",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "organizations"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List organization access to a self-hosted runner group in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces the list of organizations that have access to a self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#set-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
          },
          "operationId": "enterprise-admin/set-org-access-to-self-hosted-runner-group-in-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "selected_organization_ids": [
                        32,
                        91
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "selected_organization_ids": {
                      "description": "List of organization IDs that can access the runner group.",
                      "items": {
                        "description": "Unique identifier of the organization.",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "selected_organization_ids"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set organization access for a self-hosted runner group in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners": {
        "get": {
          "deprecated": null,
          "description": "Lists the self-hosted runners that are in a specific enterprise group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-self-hosted-runners-in-group-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "runners": [
                          {
                            "busy": true,
                            "id": 23,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 11,
                                "name": "Linux",
                                "type": "read-only"
                              }
                            ],
                            "name": "linux_runner",
                            "os": "linux",
                            "status": "online"
                          },
                          {
                            "busy": false,
                            "id": 24,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 20,
                                "name": "macOS",
                                "type": "read-only"
                              },
                              {
                                "id": 21,
                                "name": "no-gpu",
                                "type": "custom"
                              }
                            ],
                            "name": "mac_runner",
                            "os": "macos",
                            "status": "offline"
                          }
                        ],
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "runners": {
                        "items": {
                          "description": "A self hosted runner",
                          "properties": {
                            "busy": {
                              "type": "boolean"
                            },
                            "id": {
                              "description": "The id of the runner.",
                              "example": 5,
                              "type": "integer"
                            },
                            "labels": {
                              "items": {
                                "description": "A label for a self hosted runner",
                                "properties": {
                                  "id": {
                                    "description": "Unique identifier of the label.",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the label.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                                    "enum": [
                                      "read-only",
                                      "custom"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "title": "Self hosted runner label",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the runner.",
                              "example": "iMac",
                              "type": "string"
                            },
                            "os": {
                              "description": "The Operating System of the runner.",
                              "example": "macos",
                              "type": "string"
                            },
                            "status": {
                              "description": "The status of the runner.",
                              "example": "online",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "os",
                            "status",
                            "busy",
                            "labels"
                          ],
                          "title": "Self hosted runners",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "runners"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List self-hosted runners in a group for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces the list of self-hosted runners that are part of an enterprise runner group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#set-self-hosted-runners-in-a-group-for-an-enterprise"
          },
          "operationId": "enterprise-admin/set-self-hosted-runners-in-group-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "runners": [
                        9,
                        2
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "runners": {
                      "description": "List of runner IDs to add to the runner group.",
                      "items": {
                        "description": "Unique identifier of the runner.",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "runners"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set self-hosted runners in a group for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners": {
        "get": {
          "deprecated": null,
          "description": "Lists all self-hosted runners configured for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#list-self-hosted-runners-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-self-hosted-runners-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "runners": [
                          {
                            "busy": true,
                            "id": 23,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 11,
                                "name": "Linux",
                                "type": "read-only"
                              }
                            ],
                            "name": "linux_runner",
                            "os": "linux",
                            "status": "online"
                          },
                          {
                            "busy": false,
                            "id": 24,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 20,
                                "name": "macOS",
                                "type": "read-only"
                              },
                              {
                                "id": 21,
                                "name": "no-gpu",
                                "type": "custom"
                              }
                            ],
                            "name": "mac_runner",
                            "os": "macos",
                            "status": "offline"
                          }
                        ],
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "runners": {
                        "items": {
                          "description": "A self hosted runner",
                          "properties": {
                            "busy": {
                              "type": "boolean"
                            },
                            "id": {
                              "description": "The id of the runner.",
                              "example": 5,
                              "type": "integer"
                            },
                            "labels": {
                              "items": {
                                "description": "A label for a self hosted runner",
                                "properties": {
                                  "id": {
                                    "description": "Unique identifier of the label.",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the label.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                                    "enum": [
                                      "read-only",
                                      "custom"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "title": "Self hosted runner label",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the runner.",
                              "example": "iMac",
                              "type": "string"
                            },
                            "os": {
                              "description": "The Operating System of the runner.",
                              "example": "macos",
                              "type": "string"
                            },
                            "status": {
                              "description": "The status of the runner.",
                              "example": "online",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "os",
                            "status",
                            "busy",
                            "labels"
                          ],
                          "title": "Self hosted runners",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List self-hosted runners for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/downloads": {
        "get": {
          "deprecated": null,
          "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#list-runner-applications-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-runner-applications-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "architecture": "x64",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.277.1/actions-runner-osx-x64-2.277.1.tar.gz",
                          "filename": "actions-runner-osx-x64-2.277.1.tar.gz",
                          "os": "osx",
                          "sha256_checksum": "f1fa173889dc9036cd529417e652e1729e5a3f4d35ec0151806d7480fda6b89b",
                          "temp_download_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJmSjdCUXpLdXhjWDc4WnJ5NUxnUW53ZFRrMCJ9.eyJuYW1laWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJzY3AiOiJBY3Rpb25zUnVudGltZS5QYWNrYWdlRG93bmxvYWQiLCJJZGVudGl0eVR5cGVDbGFpbSI6IlN5c3RlbTpTZXJ2aWNlSWRlbnRpdHkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9zaWQiOiJERERERERERC1ERERELUREREQtRERERC1EREREREREREREREQiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3ByaW1hcnlzaWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJhdWkiOiIwZTZkODAxYi02NzVlLTQ1YzAtOWM4NC1jYTkzNjdlZjc1NjciLCJzaWQiOiI4ZTE5MDliZC1kYzU1LTQ2MWYtOTk2Mi1hZTI0OTEzNzU4OWIiLCJpc3MiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJhdWQiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJuYmYiOjE2MTc5MDQxNzUsImV4cCI6MTYxNzkwODM3NX0.YNsRXL9pBuIfLVndnyVQOpru77Br8hgYIX7LPsOaMfKk4K88YG89a2VIXUWPyHRiOaC-4J0lIPei8ujezEtnMfNZCwHdWq0Niiy-2-ywcfGPmcz-RHz_ZglkPFbzKaiZWJcFKCGHCP0Ta3kdXumJQqiVJEIyppxIY-caR_Wsw2L4BZHOefJq-odsJ0guPgm9fVuU9FxVRkucho1UH_bzt0tAMl1gEWOLBLZ88U9LKCzHWaxheFeBV4DTt1lAcSm213gKP1eMbgAGn5heWhR4RMRBzZc2HO3Lf1syu4E8fW8a-esRAxEYPfqPHwN9LNj2jaU3D3nPwa8lHQLLtA1PNA"
                        },
                        {
                          "architecture": "x64",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.277.1/actions-runner-linux-x64-2.277.1.tar.gz",
                          "filename": "actions-runner-linux-x64-2.277.1.tar.gz",
                          "os": "linux",
                          "sha256_checksum": "02d710fc9e0008e641274bb7da7fde61f7c9aa1cbb541a2990d3450cc88f4e98",
                          "temp_download_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJmSjdCUXpLdXhjWDc4WnJ5NUxnUW53ZFRrMCJ9.eyJuYW1laWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJzY3AiOiJBY3Rpb25zUnVudGltZS5QYWNrYWdlRG93bmxvYWQiLCJJZGVudGl0eVR5cGVDbGFpbSI6IlN5c3RlbTpTZXJ2aWNlSWRlbnRpdHkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9zaWQiOiJERERERERERC1ERERELUREREQtRERERC1EREREREREREREREQiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3ByaW1hcnlzaWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJhdWkiOiIwZTZkODAxYi02NzVlLTQ1YzAtOWM4NC1jYTkzNjdlZjc1NjciLCJzaWQiOiI4ZTE5MDliZC1kYzU1LTQ2MWYtOTk2Mi1hZTI0OTEzNzU4OWIiLCJpc3MiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJhdWQiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJuYmYiOjE2MTc5MDQxNzUsImV4cCI6MTYxNzkwODM3NX0.YNsRXL9pBuIfLVndnyVQOpru77Br8hgYIX7LPsOaMfKk4K88YG89a2VIXUWPyHRiOaC-4J0lIPei8ujezEtnMfNZCwHdWq0Niiy-2-ywcfGPmcz-RHz_ZglkPFbzKaiZWJcFKCGHCP0Ta3kdXumJQqiVJEIyppxIY-caR_Wsw2L4BZHOefJq-odsJ0guPgm9fVuU9FxVRkucho1UH_bzt0tAMl1gEWOLBLZ88U9LKCzHWaxheFeBV4DTt1lAcSm213gKP1eMbgAGn5heWhR4RMRBzZc2HO3Lf1syu4E8fW8a-esRAxEYPfqPHwN9LNj2jaU3D3nPwa8lHQLLtA1PNA"
                        },
                        {
                          "architecture": "arm",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.277.1/actions-runner-linux-arm-2.277.1.tar.gz",
                          "filename": "actions-runner-linux-arm-2.277.1.tar.gz",
                          "os": "linux",
                          "sha256_checksum": "2f2bda21e2fd8fed6938b33182a293f6b1f74e4c5d09acd6d9a0fe3f979f5c85",
                          "temp_download_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJmSjdCUXpLdXhjWDc4WnJ5NUxnUW53ZFRrMCJ9.eyJuYW1laWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJzY3AiOiJBY3Rpb25zUnVudGltZS5QYWNrYWdlRG93bmxvYWQiLCJJZGVudGl0eVR5cGVDbGFpbSI6IlN5c3RlbTpTZXJ2aWNlSWRlbnRpdHkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9zaWQiOiJERERERERERC1ERERELUREREQtRERERC1EREREREREREREREQiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3ByaW1hcnlzaWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJhdWkiOiIyYTEzZDRmZC01ZDhkLTRjNzgtYjg2MS0zYTMxZGQ3MmYzNjQiLCJzaWQiOiI0MzZiNTg3YS04ODMyLTRiMTMtOWM2Ny05OWRkMjA2ZTQzNmMiLCJpc3MiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJhdWQiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJuYmYiOjE2MTc5MzE1NzEsImV4cCI6MTYxNzkzNTc3MX0.PMhU7-MOnZRDj5k5a4ieeFlQCmKPl2pQvpVRhGZq-9ByKF5s9G0rsnGBxDcolTYlbvEAmSSkeAEwF486F7P0kMVEb-GI14WbErqqMSyaPL81c3W7UHxMJLaSBnDs9ftHMv_IkJmRzaROS8q1ObzUW-ErlltxCdj2zF_5ruK9G2RR566AOAtiA3AHV6k7-FCY5--sDYJN_YXPgpwI0fPN1TM92fdPm93hJnoXuCJNpBYp1vl5W4gwGtU_Pa07ESdqqFN1YJJHUloedNhiIOczGfGVSapRc8vyGm9P_VCM_yKD8JI-MkOXl8JI5fCfhmjmKsw-vSAh9NW67RGvmehmpw"
                        },
                        {
                          "architecture": "x64",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.277.1/actions-runner-win-x64-2.277.1.zip",
                          "filename": "actions-runner-win-x64-2.277.1.zip",
                          "os": "win",
                          "sha256_checksum": "7215c75a462eeb6a839fa8ed298d79f620617d44d47d37c583114fc3f3b27b30",
                          "temp_download_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJmSjdCUXpLdXhjWDc4WnJ5NUxnUW53ZFRrMCJ9.eyJuYW1laWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJzY3AiOiJBY3Rpb25zUnVudGltZS5QYWNrYWdlRG93bmxvYWQiLCJJZGVudGl0eVR5cGVDbGFpbSI6IlN5c3RlbTpTZXJ2aWNlSWRlbnRpdHkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9zaWQiOiJERERERERERC1ERERELUREREQtRERERC1EREREREREREREREQiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3ByaW1hcnlzaWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJhdWkiOiIwZTZkODAxYi02NzVlLTQ1YzAtOWM4NC1jYTkzNjdlZjc1NjciLCJzaWQiOiI4ZTE5MDliZC1kYzU1LTQ2MWYtOTk2Mi1hZTI0OTEzNzU4OWIiLCJpc3MiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJhdWQiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJuYmYiOjE2MTc5MDQxNzUsImV4cCI6MTYxNzkwODM3NX0.YNsRXL9pBuIfLVndnyVQOpru77Br8hgYIX7LPsOaMfKk4K88YG89a2VIXUWPyHRiOaC-4J0lIPei8ujezEtnMfNZCwHdWq0Niiy-2-ywcfGPmcz-RHz_ZglkPFbzKaiZWJcFKCGHCP0Ta3kdXumJQqiVJEIyppxIY-caR_Wsw2L4BZHOefJq-odsJ0guPgm9fVuU9FxVRkucho1UH_bzt0tAMl1gEWOLBLZ88U9LKCzHWaxheFeBV4DTt1lAcSm213gKP1eMbgAGn5heWhR4RMRBzZc2HO3Lf1syu4E8fW8a-esRAxEYPfqPHwN9LNj2jaU3D3nPwa8lHQLLtA1PNA"
                        },
                        {
                          "architecture": "arm64",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.277.1/actions-runner-linux-arm64-2.277.1.tar.gz",
                          "filename": "actions-runner-linux-arm64-2.277.1.tar.gz",
                          "os": "linux",
                          "sha256_checksum": "a6aa6dd0ba217118ef2b4ea24e9e0a85b02b13c38052a5de0776d6ced3a79c64",
                          "temp_download_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJmSjdCUXpLdXhjWDc4WnJ5NUxnUW53ZFRrMCJ9.eyJuYW1laWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJzY3AiOiJBY3Rpb25zUnVudGltZS5QYWNrYWdlRG93bmxvYWQiLCJJZGVudGl0eVR5cGVDbGFpbSI6IlN5c3RlbTpTZXJ2aWNlSWRlbnRpdHkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9zaWQiOiJERERERERERC1ERERELUREREQtRERERC1EREREREREREREREQiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3ByaW1hcnlzaWQiOiJkZGRkZGRkZC1kZGRkLWRkZGQtZGRkZC1kZGRkZGRkZGRkZGQiLCJhdWkiOiIwZTZkODAxYi02NzVlLTQ1YzAtOWM4NC1jYTkzNjdlZjc1NjciLCJzaWQiOiI4ZTE5MDliZC1kYzU1LTQ2MWYtOTk2Mi1hZTI0OTEzNzU4OWIiLCJpc3MiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJhdWQiOiJ2c3Rva2VuLmNvZGVkZXYubXMiLCJuYmYiOjE2MTc5MDQxNzUsImV4cCI6MTYxNzkwODM3NX0.YNsRXL9pBuIfLVndnyVQOpru77Br8hgYIX7LPsOaMfKk4K88YG89a2VIXUWPyHRiOaC-4J0lIPei8ujezEtnMfNZCwHdWq0Niiy-2-ywcfGPmcz-RHz_ZglkPFbzKaiZWJcFKCGHCP0Ta3kdXumJQqiVJEIyppxIY-caR_Wsw2L4BZHOefJq-odsJ0guPgm9fVuU9FxVRkucho1UH_bzt0tAMl1gEWOLBLZ88U9LKCzHWaxheFeBV4DTt1lAcSm213gKP1eMbgAGn5heWhR4RMRBzZc2HO3Lf1syu4E8fW8a-esRAxEYPfqPHwN9LNj2jaU3D3nPwa8lHQLLtA1PNA"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "Runner Application",
                      "properties": {
                        "architecture": {
                          "type": "string"
                        },
                        "download_url": {
                          "type": "string"
                        },
                        "filename": {
                          "type": "string"
                        },
                        "os": {
                          "type": "string"
                        },
                        "sha256_checksum": {
                          "type": "string"
                        },
                        "temp_download_token": {
                          "description": "A short lived bearer token used to download the runner, if needed.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "os",
                        "architecture",
                        "download_url",
                        "filename"
                      ],
                      "title": "Runner Application",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List runner applications for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/registration-token": {
        "post": {
          "deprecated": null,
          "description": "Returns a token that you can pass to the `config` script. The token expires after one hour.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.\n\n#### Example using registration token\n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/enterprises/octo-enterprise --token TOKEN\n```",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#create-a-registration-token-for-an-enterprise"
          },
          "operationId": "enterprise-admin/create-registration-token-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "expires_at": "2020-01-22T12:13:35.123-08:00",
                        "token": "LLBF3JGZDX3P5PMEXLND6TS6FCWO6"
                      }
                    }
                  },
                  "schema": {
                    "description": "Authentication Token",
                    "properties": {
                      "expires_at": {
                        "description": "The time this token expires",
                        "example": "2016-07-11T22:14:10Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissions": {
                        "example": {
                          "deployments": "write",
                          "issues": "read"
                        },
                        "type": "object"
                      },
                      "repositories": {
                        "description": "The repositories this token has access to",
                        "items": {
                          "description": "A repository on GitHub.",
                          "properties": {
                            "allow_auto_merge": {
                              "default": false,
                              "description": "Whether to allow Auto-merge to be used on pull requests.",
                              "example": false,
                              "type": "boolean"
                            },
                            "allow_forking": {
                              "description": "Whether to allow forking this repo",
                              "type": "boolean"
                            },
                            "allow_merge_commit": {
                              "default": true,
                              "description": "Whether to allow merge commits for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_rebase_merge": {
                              "default": true,
                              "description": "Whether to allow rebase merges for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_squash_merge": {
                              "default": true,
                              "description": "Whether to allow squash merges for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_update_branch": {
                              "default": false,
                              "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
                              "example": false,
                              "type": "boolean"
                            },
                            "anonymous_access_enabled": {
                              "description": "Whether anonymous git access is enabled for this repository",
                              "type": "boolean"
                            },
                            "archive_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "type": "string"
                            },
                            "archived": {
                              "default": false,
                              "description": "Whether the repository is archived.",
                              "type": "boolean"
                            },
                            "assignees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "type": "string"
                            },
                            "blobs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "type": "string"
                            },
                            "branches_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "type": "string"
                            },
                            "clone_url": {
                              "example": "https://github.com/octocat/Hello-World.git",
                              "type": "string"
                            },
                            "collaborators_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "type": "string"
                            },
                            "comments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "type": "string"
                            },
                            "commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "type": "string"
                            },
                            "compare_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "type": "string"
                            },
                            "contents_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "type": "string"
                            },
                            "contributors_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                              "format": "uri",
                              "type": "string"
                            },
                            "created_at": {
                              "example": "2011-01-26T19:01:12Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "default_branch": {
                              "description": "The default branch of the repository.",
                              "example": "master",
                              "type": "string"
                            },
                            "delete_branch_on_merge": {
                              "default": false,
                              "description": "Whether to delete head branches when pull requests are merged",
                              "example": false,
                              "type": "boolean"
                            },
                            "deployments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                              "format": "uri",
                              "type": "string"
                            },
                            "description": {
                              "example": "This your first repo!",
                              "nullable": true,
                              "type": "string"
                            },
                            "disabled": {
                              "description": "Returns whether or not this repository disabled.",
                              "type": "boolean"
                            },
                            "downloads_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                              "format": "uri",
                              "type": "string"
                            },
                            "events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "fork": {
                              "type": "boolean"
                            },
                            "forks": {
                              "type": "integer"
                            },
                            "forks_count": {
                              "example": 9,
                              "type": "integer"
                            },
                            "forks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                              "format": "uri",
                              "type": "string"
                            },
                            "full_name": {
                              "example": "octocat/Hello-World",
                              "type": "string"
                            },
                            "git_commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "type": "string"
                            },
                            "git_refs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "type": "string"
                            },
                            "git_tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "type": "string"
                            },
                            "git_url": {
                              "example": "git:github.com/octocat/Hello-World.git",
                              "type": "string"
                            },
                            "has_discussions": {
                              "default": false,
                              "description": "Whether discussions are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_downloads": {
                              "default": true,
                              "description": "Whether downloads are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_issues": {
                              "default": true,
                              "description": "Whether issues are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_pages": {
                              "type": "boolean"
                            },
                            "has_projects": {
                              "default": true,
                              "description": "Whether projects are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_wiki": {
                              "default": true,
                              "description": "Whether the wiki is enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "homepage": {
                              "example": "https://github.com",
                              "format": "uri",
                              "nullable": true,
                              "type": "string"
                            },
                            "hooks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                              "format": "uri",
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "description": "Unique identifier of the repository",
                              "example": 42,
                              "type": "integer"
                            },
                            "is_template": {
                              "default": false,
                              "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                              "example": true,
                              "type": "boolean"
                            },
                            "issue_comment_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "type": "string"
                            },
                            "issue_events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "type": "string"
                            },
                            "issues_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "type": "string"
                            },
                            "keys_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "type": "string"
                            },
                            "labels_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "type": "string"
                            },
                            "language": {
                              "nullable": true,
                              "type": "string"
                            },
                            "languages_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                              "format": "uri",
                              "type": "string"
                            },
                            "license": {
                              "description": "License Simple",
                              "nullable": true,
                              "properties": {
                                "html_url": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "key": {
                                  "example": "mit",
                                  "type": "string"
                                },
                                "name": {
                                  "example": "MIT License",
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDc6TGljZW5zZW1pdA==",
                                  "type": "string"
                                },
                                "spdx_id": {
                                  "example": "MIT",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/licenses/mit",
                                  "format": "uri",
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "key",
                                "name",
                                "url",
                                "spdx_id",
                                "node_id"
                              ],
                              "title": "License Simple",
                              "type": "object"
                            },
                            "master_branch": {
                              "type": "string"
                            },
                            "merge_commit_message": {
                              "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
                              "enum": [
                                "PR_BODY",
                                "PR_TITLE",
                                "BLANK"
                              ],
                              "type": "string"
                            },
                            "merge_commit_title": {
                              "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
                              "enum": [
                                "PR_TITLE",
                                "MERGE_MESSAGE"
                              ],
                              "type": "string"
                            },
                            "merges_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                              "format": "uri",
                              "type": "string"
                            },
                            "milestones_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "type": "string"
                            },
                            "mirror_url": {
                              "example": "git:git.example.com/octocat/Hello-World",
                              "format": "uri",
                              "nullable": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the repository.",
                              "example": "Team Environment",
                              "type": "string"
                            },
                            "network_count": {
                              "type": "integer"
                            },
                            "node_id": {
                              "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "type": "string"
                            },
                            "notifications_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "type": "string"
                            },
                            "open_issues": {
                              "type": "integer"
                            },
                            "open_issues_count": {
                              "example": 0,
                              "type": "integer"
                            },
                            "organization": {
                              "description": "A GitHub user.",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "owner": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "permissions": {
                              "properties": {
                                "admin": {
                                  "type": "boolean"
                                },
                                "maintain": {
                                  "type": "boolean"
                                },
                                "pull": {
                                  "type": "boolean"
                                },
                                "push": {
                                  "type": "boolean"
                                },
                                "triage": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "admin",
                                "pull",
                                "push"
                              ],
                              "type": "object"
                            },
                            "private": {
                              "default": false,
                              "description": "Whether the repository is private or public.",
                              "type": "boolean"
                            },
                            "pulls_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "type": "string"
                            },
                            "pushed_at": {
                              "example": "2011-01-26T19:06:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "releases_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "type": "string"
                            },
                            "size": {
                              "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
                              "example": 108,
                              "type": "integer"
                            },
                            "squash_merge_commit_message": {
                              "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
                              "enum": [
                                "PR_BODY",
                                "COMMIT_MESSAGES",
                                "BLANK"
                              ],
                              "type": "string"
                            },
                            "squash_merge_commit_title": {
                              "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
                              "enum": [
                                "PR_TITLE",
                                "COMMIT_OR_PR_TITLE"
                              ],
                              "type": "string"
                            },
                            "ssh_url": {
                              "example": "git@github.com:octocat/Hello-World.git",
                              "type": "string"
                            },
                            "stargazers_count": {
                              "example": 80,
                              "type": "integer"
                            },
                            "stargazers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                              "format": "uri",
                              "type": "string"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:42Z\"",
                              "type": "string"
                            },
                            "statuses_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "type": "string"
                            },
                            "subscribers_count": {
                              "type": "integer"
                            },
                            "subscribers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                              "format": "uri",
                              "type": "string"
                            },
                            "subscription_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                              "format": "uri",
                              "type": "string"
                            },
                            "svn_url": {
                              "example": "https://svn.github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                              "format": "uri",
                              "type": "string"
                            },
                            "teams_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                              "format": "uri",
                              "type": "string"
                            },
                            "temp_clone_token": {
                              "type": "string"
                            },
                            "template_repository": {
                              "nullable": true,
                              "properties": {
                                "allow_auto_merge": {
                                  "type": "boolean"
                                },
                                "allow_merge_commit": {
                                  "type": "boolean"
                                },
                                "allow_rebase_merge": {
                                  "type": "boolean"
                                },
                                "allow_squash_merge": {
                                  "type": "boolean"
                                },
                                "allow_update_branch": {
                                  "type": "boolean"
                                },
                                "archive_url": {
                                  "type": "string"
                                },
                                "archived": {
                                  "type": "boolean"
                                },
                                "assignees_url": {
                                  "type": "string"
                                },
                                "blobs_url": {
                                  "type": "string"
                                },
                                "branches_url": {
                                  "type": "string"
                                },
                                "clone_url": {
                                  "type": "string"
                                },
                                "collaborators_url": {
                                  "type": "string"
                                },
                                "comments_url": {
                                  "type": "string"
                                },
                                "commits_url": {
                                  "type": "string"
                                },
                                "compare_url": {
                                  "type": "string"
                                },
                                "contents_url": {
                                  "type": "string"
                                },
                                "contributors_url": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "type": "string"
                                },
                                "default_branch": {
                                  "type": "string"
                                },
                                "delete_branch_on_merge": {
                                  "type": "boolean"
                                },
                                "deployments_url": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "disabled": {
                                  "type": "boolean"
                                },
                                "downloads_url": {
                                  "type": "string"
                                },
                                "events_url": {
                                  "type": "string"
                                },
                                "fork": {
                                  "type": "boolean"
                                },
                                "forks_count": {
                                  "type": "integer"
                                },
                                "forks_url": {
                                  "type": "string"
                                },
                                "full_name": {
                                  "type": "string"
                                },
                                "git_commits_url": {
                                  "type": "string"
                                },
                                "git_refs_url": {
                                  "type": "string"
                                },
                                "git_tags_url": {
                                  "type": "string"
                                },
                                "git_url": {
                                  "type": "string"
                                },
                                "has_downloads": {
                                  "type": "boolean"
                                },
                                "has_issues": {
                                  "type": "boolean"
                                },
                                "has_pages": {
                                  "type": "boolean"
                                },
                                "has_projects": {
                                  "type": "boolean"
                                },
                                "has_wiki": {
                                  "type": "boolean"
                                },
                                "homepage": {
                                  "type": "string"
                                },
                                "hooks_url": {
                                  "type": "string"
                                },
                                "html_url": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "integer"
                                },
                                "is_template": {
                                  "type": "boolean"
                                },
                                "issue_comment_url": {
                                  "type": "string"
                                },
                                "issue_events_url": {
                                  "type": "string"
                                },
                                "issues_url": {
                                  "type": "string"
                                },
                                "keys_url": {
                                  "type": "string"
                                },
                                "labels_url": {
                                  "type": "string"
                                },
                                "language": {
                                  "type": "string"
                                },
                                "languages_url": {
                                  "type": "string"
                                },
                                "merge_commit_message": {
                                  "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
                                  "enum": [
                                    "PR_BODY",
                                    "PR_TITLE",
                                    "BLANK"
                                  ],
                                  "type": "string"
                                },
                                "merge_commit_title": {
                                  "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
                                  "enum": [
                                    "PR_TITLE",
                                    "MERGE_MESSAGE"
                                  ],
                                  "type": "string"
                                },
                                "merges_url": {
                                  "type": "string"
                                },
                                "milestones_url": {
                                  "type": "string"
                                },
                                "mirror_url": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "network_count": {
                                  "type": "integer"
                                },
                                "node_id": {
                                  "type": "string"
                                },
                                "notifications_url": {
                                  "type": "string"
                                },
                                "open_issues_count": {
                                  "type": "integer"
                                },
                                "owner": {
                                  "properties": {
                                    "avatar_url": {
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "login": {
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "type": "string"
                                    },
                                    "site_admin": {
                                      "type": "boolean"
                                    },
                                    "starred_url": {
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "permissions": {
                                  "properties": {
                                    "admin": {
                                      "type": "boolean"
                                    },
                                    "maintain": {
                                      "type": "boolean"
                                    },
                                    "pull": {
                                      "type": "boolean"
                                    },
                                    "push": {
                                      "type": "boolean"
                                    },
                                    "triage": {
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "private": {
                                  "type": "boolean"
                                },
                                "pulls_url": {
                                  "type": "string"
                                },
                                "pushed_at": {
                                  "type": "string"
                                },
                                "releases_url": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "integer"
                                },
                                "squash_merge_commit_message": {
                                  "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
                                  "enum": [
                                    "PR_BODY",
                                    "COMMIT_MESSAGES",
                                    "BLANK"
                                  ],
                                  "type": "string"
                                },
                                "squash_merge_commit_title": {
                                  "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
                                  "enum": [
                                    "PR_TITLE",
                                    "COMMIT_OR_PR_TITLE"
                                  ],
                                  "type": "string"
                                },
                                "ssh_url": {
                                  "type": "string"
                                },
                                "stargazers_count": {
                                  "type": "integer"
                                },
                                "stargazers_url": {
                                  "type": "string"
                                },
                                "statuses_url": {
                                  "type": "string"
                                },
                                "subscribers_count": {
                                  "type": "integer"
                                },
                                "subscribers_url": {
                                  "type": "string"
                                },
                                "subscription_url": {
                                  "type": "string"
                                },
                                "svn_url": {
                                  "type": "string"
                                },
                                "tags_url": {
                                  "type": "string"
                                },
                                "teams_url": {
                                  "type": "string"
                                },
                                "temp_clone_token": {
                                  "type": "string"
                                },
                                "topics": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "trees_url": {
                                  "type": "string"
                                },
                                "updated_at": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                },
                                "use_squash_pr_title_as_default": {
                                  "type": "boolean"
                                },
                                "visibility": {
                                  "type": "string"
                                },
                                "watchers_count": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "topics": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "trees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "type": "string"
                            },
                            "updated_at": {
                              "example": "2011-01-26T19:14:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/repos/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "use_squash_pr_title_as_default": {
                              "default": false,
                              "deprecated": true,
                              "description": "Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
                              "type": "boolean"
                            },
                            "visibility": {
                              "default": "public",
                              "description": "The repository visibility: public, private, or internal.",
                              "type": "string"
                            },
                            "watchers": {
                              "type": "integer"
                            },
                            "watchers_count": {
                              "example": 80,
                              "type": "integer"
                            },
                            "web_commit_signoff_required": {
                              "default": false,
                              "description": "Whether to require contributors to sign off on web-based commits",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "archive_url",
                            "assignees_url",
                            "blobs_url",
                            "branches_url",
                            "collaborators_url",
                            "comments_url",
                            "commits_url",
                            "compare_url",
                            "contents_url",
                            "contributors_url",
                            "deployments_url",
                            "description",
                            "downloads_url",
                            "events_url",
                            "fork",
                            "forks_url",
                            "full_name",
                            "git_commits_url",
                            "git_refs_url",
                            "git_tags_url",
                            "hooks_url",
                            "html_url",
                            "id",
                            "node_id",
                            "issue_comment_url",
                            "issue_events_url",
                            "issues_url",
                            "keys_url",
                            "labels_url",
                            "languages_url",
                            "merges_url",
                            "milestones_url",
                            "name",
                            "notifications_url",
                            "owner",
                            "private",
                            "pulls_url",
                            "releases_url",
                            "stargazers_url",
                            "statuses_url",
                            "subscribers_url",
                            "subscription_url",
                            "tags_url",
                            "teams_url",
                            "trees_url",
                            "url",
                            "clone_url",
                            "default_branch",
                            "forks",
                            "forks_count",
                            "git_url",
                            "has_downloads",
                            "has_issues",
                            "has_projects",
                            "has_wiki",
                            "has_pages",
                            "homepage",
                            "language",
                            "archived",
                            "disabled",
                            "mirror_url",
                            "open_issues",
                            "open_issues_count",
                            "license",
                            "pushed_at",
                            "size",
                            "ssh_url",
                            "stargazers_count",
                            "svn_url",
                            "watchers",
                            "watchers_count",
                            "created_at",
                            "updated_at"
                          ],
                          "title": "Repository",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "repository_selection": {
                        "description": "Describe whether all repositories have been selected or there's a selection involved",
                        "enum": [
                          "all",
                          "selected"
                        ],
                        "type": "string"
                      },
                      "single_file": {
                        "example": "config.yaml",
                        "nullable": true,
                        "type": "string"
                      },
                      "token": {
                        "description": "The token used for authentication",
                        "example": "v1.1f699f1069f60xxx",
                        "type": "string"
                      }
                    },
                    "required": [
                      "token",
                      "expires_at"
                    ],
                    "title": "Authentication Token",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a registration token for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/remove-token": {
        "post": {
          "deprecated": null,
          "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an enterprise. The token expires after one hour.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.\n\n#### Example using remove token\n\nTo remove your self-hosted runner from an enterprise, replace `TOKEN` with the remove token provided by this\nendpoint.\n\n```\n./config.sh remove --token TOKEN\n```",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#create-a-remove-token-for-an-enterprise"
          },
          "operationId": "enterprise-admin/create-remove-token-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "expires_at": "2020-01-29T12:13:35.123-08:00",
                        "token": "AABF3JGZDX3P5PMEXLND6TS6FCWO6"
                      }
                    }
                  },
                  "schema": {
                    "description": "Authentication Token",
                    "properties": {
                      "expires_at": {
                        "description": "The time this token expires",
                        "example": "2016-07-11T22:14:10Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissions": {
                        "example": {
                          "deployments": "write",
                          "issues": "read"
                        },
                        "type": "object"
                      },
                      "repositories": {
                        "description": "The repositories this token has access to",
                        "items": {
                          "description": "A repository on GitHub.",
                          "properties": {
                            "allow_auto_merge": {
                              "default": false,
                              "description": "Whether to allow Auto-merge to be used on pull requests.",
                              "example": false,
                              "type": "boolean"
                            },
                            "allow_forking": {
                              "description": "Whether to allow forking this repo",
                              "type": "boolean"
                            },
                            "allow_merge_commit": {
                              "default": true,
                              "description": "Whether to allow merge commits for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_rebase_merge": {
                              "default": true,
                              "description": "Whether to allow rebase merges for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_squash_merge": {
                              "default": true,
                              "description": "Whether to allow squash merges for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_update_branch": {
                              "default": false,
                              "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
                              "example": false,
                              "type": "boolean"
                            },
                            "anonymous_access_enabled": {
                              "description": "Whether anonymous git access is enabled for this repository",
                              "type": "boolean"
                            },
                            "archive_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "type": "string"
                            },
                            "archived": {
                              "default": false,
                              "description": "Whether the repository is archived.",
                              "type": "boolean"
                            },
                            "assignees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "type": "string"
                            },
                            "blobs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "type": "string"
                            },
                            "branches_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "type": "string"
                            },
                            "clone_url": {
                              "example": "https://github.com/octocat/Hello-World.git",
                              "type": "string"
                            },
                            "collaborators_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "type": "string"
                            },
                            "comments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "type": "string"
                            },
                            "commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "type": "string"
                            },
                            "compare_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "type": "string"
                            },
                            "contents_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "type": "string"
                            },
                            "contributors_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                              "format": "uri",
                              "type": "string"
                            },
                            "created_at": {
                              "example": "2011-01-26T19:01:12Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "default_branch": {
                              "description": "The default branch of the repository.",
                              "example": "master",
                              "type": "string"
                            },
                            "delete_branch_on_merge": {
                              "default": false,
                              "description": "Whether to delete head branches when pull requests are merged",
                              "example": false,
                              "type": "boolean"
                            },
                            "deployments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                              "format": "uri",
                              "type": "string"
                            },
                            "description": {
                              "example": "This your first repo!",
                              "nullable": true,
                              "type": "string"
                            },
                            "disabled": {
                              "description": "Returns whether or not this repository disabled.",
                              "type": "boolean"
                            },
                            "downloads_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                              "format": "uri",
                              "type": "string"
                            },
                            "events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "fork": {
                              "type": "boolean"
                            },
                            "forks": {
                              "type": "integer"
                            },
                            "forks_count": {
                              "example": 9,
                              "type": "integer"
                            },
                            "forks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                              "format": "uri",
                              "type": "string"
                            },
                            "full_name": {
                              "example": "octocat/Hello-World",
                              "type": "string"
                            },
                            "git_commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "type": "string"
                            },
                            "git_refs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "type": "string"
                            },
                            "git_tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "type": "string"
                            },
                            "git_url": {
                              "example": "git:github.com/octocat/Hello-World.git",
                              "type": "string"
                            },
                            "has_discussions": {
                              "default": false,
                              "description": "Whether discussions are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_downloads": {
                              "default": true,
                              "description": "Whether downloads are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_issues": {
                              "default": true,
                              "description": "Whether issues are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_pages": {
                              "type": "boolean"
                            },
                            "has_projects": {
                              "default": true,
                              "description": "Whether projects are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_wiki": {
                              "default": true,
                              "description": "Whether the wiki is enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "homepage": {
                              "example": "https://github.com",
                              "format": "uri",
                              "nullable": true,
                              "type": "string"
                            },
                            "hooks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                              "format": "uri",
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "description": "Unique identifier of the repository",
                              "example": 42,
                              "type": "integer"
                            },
                            "is_template": {
                              "default": false,
                              "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                              "example": true,
                              "type": "boolean"
                            },
                            "issue_comment_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "type": "string"
                            },
                            "issue_events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "type": "string"
                            },
                            "issues_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "type": "string"
                            },
                            "keys_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "type": "string"
                            },
                            "labels_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "type": "string"
                            },
                            "language": {
                              "nullable": true,
                              "type": "string"
                            },
                            "languages_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                              "format": "uri",
                              "type": "string"
                            },
                            "license": {
                              "description": "License Simple",
                              "nullable": true,
                              "properties": {
                                "html_url": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "key": {
                                  "example": "mit",
                                  "type": "string"
                                },
                                "name": {
                                  "example": "MIT License",
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDc6TGljZW5zZW1pdA==",
                                  "type": "string"
                                },
                                "spdx_id": {
                                  "example": "MIT",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/licenses/mit",
                                  "format": "uri",
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "key",
                                "name",
                                "url",
                                "spdx_id",
                                "node_id"
                              ],
                              "title": "License Simple",
                              "type": "object"
                            },
                            "master_branch": {
                              "type": "string"
                            },
                            "merge_commit_message": {
                              "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
                              "enum": [
                                "PR_BODY",
                                "PR_TITLE",
                                "BLANK"
                              ],
                              "type": "string"
                            },
                            "merge_commit_title": {
                              "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
                              "enum": [
                                "PR_TITLE",
                                "MERGE_MESSAGE"
                              ],
                              "type": "string"
                            },
                            "merges_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                              "format": "uri",
                              "type": "string"
                            },
                            "milestones_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "type": "string"
                            },
                            "mirror_url": {
                              "example": "git:git.example.com/octocat/Hello-World",
                              "format": "uri",
                              "nullable": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the repository.",
                              "example": "Team Environment",
                              "type": "string"
                            },
                            "network_count": {
                              "type": "integer"
                            },
                            "node_id": {
                              "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "type": "string"
                            },
                            "notifications_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "type": "string"
                            },
                            "open_issues": {
                              "type": "integer"
                            },
                            "open_issues_count": {
                              "example": 0,
                              "type": "integer"
                            },
                            "organization": {
                              "description": "A GitHub user.",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "owner": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "permissions": {
                              "properties": {
                                "admin": {
                                  "type": "boolean"
                                },
                                "maintain": {
                                  "type": "boolean"
                                },
                                "pull": {
                                  "type": "boolean"
                                },
                                "push": {
                                  "type": "boolean"
                                },
                                "triage": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "admin",
                                "pull",
                                "push"
                              ],
                              "type": "object"
                            },
                            "private": {
                              "default": false,
                              "description": "Whether the repository is private or public.",
                              "type": "boolean"
                            },
                            "pulls_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "type": "string"
                            },
                            "pushed_at": {
                              "example": "2011-01-26T19:06:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "releases_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "type": "string"
                            },
                            "size": {
                              "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
                              "example": 108,
                              "type": "integer"
                            },
                            "squash_merge_commit_message": {
                              "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
                              "enum": [
                                "PR_BODY",
                                "COMMIT_MESSAGES",
                                "BLANK"
                              ],
                              "type": "string"
                            },
                            "squash_merge_commit_title": {
                              "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
                              "enum": [
                                "PR_TITLE",
                                "COMMIT_OR_PR_TITLE"
                              ],
                              "type": "string"
                            },
                            "ssh_url": {
                              "example": "git@github.com:octocat/Hello-World.git",
                              "type": "string"
                            },
                            "stargazers_count": {
                              "example": 80,
                              "type": "integer"
                            },
                            "stargazers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                              "format": "uri",
                              "type": "string"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:42Z\"",
                              "type": "string"
                            },
                            "statuses_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "type": "string"
                            },
                            "subscribers_count": {
                              "type": "integer"
                            },
                            "subscribers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                              "format": "uri",
                              "type": "string"
                            },
                            "subscription_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                              "format": "uri",
                              "type": "string"
                            },
                            "svn_url": {
                              "example": "https://svn.github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                              "format": "uri",
                              "type": "string"
                            },
                            "teams_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                              "format": "uri",
                              "type": "string"
                            },
                            "temp_clone_token": {
                              "type": "string"
                            },
                            "template_repository": {
                              "nullable": true,
                              "properties": {
                                "allow_auto_merge": {
                                  "type": "boolean"
                                },
                                "allow_merge_commit": {
                                  "type": "boolean"
                                },
                                "allow_rebase_merge": {
                                  "type": "boolean"
                                },
                                "allow_squash_merge": {
                                  "type": "boolean"
                                },
                                "allow_update_branch": {
                                  "type": "boolean"
                                },
                                "archive_url": {
                                  "type": "string"
                                },
                                "archived": {
                                  "type": "boolean"
                                },
                                "assignees_url": {
                                  "type": "string"
                                },
                                "blobs_url": {
                                  "type": "string"
                                },
                                "branches_url": {
                                  "type": "string"
                                },
                                "clone_url": {
                                  "type": "string"
                                },
                                "collaborators_url": {
                                  "type": "string"
                                },
                                "comments_url": {
                                  "type": "string"
                                },
                                "commits_url": {
                                  "type": "string"
                                },
                                "compare_url": {
                                  "type": "string"
                                },
                                "contents_url": {
                                  "type": "string"
                                },
                                "contributors_url": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "type": "string"
                                },
                                "default_branch": {
                                  "type": "string"
                                },
                                "delete_branch_on_merge": {
                                  "type": "boolean"
                                },
                                "deployments_url": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "disabled": {
                                  "type": "boolean"
                                },
                                "downloads_url": {
                                  "type": "string"
                                },
                                "events_url": {
                                  "type": "string"
                                },
                                "fork": {
                                  "type": "boolean"
                                },
                                "forks_count": {
                                  "type": "integer"
                                },
                                "forks_url": {
                                  "type": "string"
                                },
                                "full_name": {
                                  "type": "string"
                                },
                                "git_commits_url": {
                                  "type": "string"
                                },
                                "git_refs_url": {
                                  "type": "string"
                                },
                                "git_tags_url": {
                                  "type": "string"
                                },
                                "git_url": {
                                  "type": "string"
                                },
                                "has_downloads": {
                                  "type": "boolean"
                                },
                                "has_issues": {
                                  "type": "boolean"
                                },
                                "has_pages": {
                                  "type": "boolean"
                                },
                                "has_projects": {
                                  "type": "boolean"
                                },
                                "has_wiki": {
                                  "type": "boolean"
                                },
                                "homepage": {
                                  "type": "string"
                                },
                                "hooks_url": {
                                  "type": "string"
                                },
                                "html_url": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "integer"
                                },
                                "is_template": {
                                  "type": "boolean"
                                },
                                "issue_comment_url": {
                                  "type": "string"
                                },
                                "issue_events_url": {
                                  "type": "string"
                                },
                                "issues_url": {
                                  "type": "string"
                                },
                                "keys_url": {
                                  "type": "string"
                                },
                                "labels_url": {
                                  "type": "string"
                                },
                                "language": {
                                  "type": "string"
                                },
                                "languages_url": {
                                  "type": "string"
                                },
                                "merge_commit_message": {
                                  "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
                                  "enum": [
                                    "PR_BODY",
                                    "PR_TITLE",
                                    "BLANK"
                                  ],
                                  "type": "string"
                                },
                                "merge_commit_title": {
                                  "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
                                  "enum": [
                                    "PR_TITLE",
                                    "MERGE_MESSAGE"
                                  ],
                                  "type": "string"
                                },
                                "merges_url": {
                                  "type": "string"
                                },
                                "milestones_url": {
                                  "type": "string"
                                },
                                "mirror_url": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "network_count": {
                                  "type": "integer"
                                },
                                "node_id": {
                                  "type": "string"
                                },
                                "notifications_url": {
                                  "type": "string"
                                },
                                "open_issues_count": {
                                  "type": "integer"
                                },
                                "owner": {
                                  "properties": {
                                    "avatar_url": {
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "login": {
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "type": "string"
                                    },
                                    "site_admin": {
                                      "type": "boolean"
                                    },
                                    "starred_url": {
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "permissions": {
                                  "properties": {
                                    "admin": {
                                      "type": "boolean"
                                    },
                                    "maintain": {
                                      "type": "boolean"
                                    },
                                    "pull": {
                                      "type": "boolean"
                                    },
                                    "push": {
                                      "type": "boolean"
                                    },
                                    "triage": {
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "private": {
                                  "type": "boolean"
                                },
                                "pulls_url": {
                                  "type": "string"
                                },
                                "pushed_at": {
                                  "type": "string"
                                },
                                "releases_url": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "integer"
                                },
                                "squash_merge_commit_message": {
                                  "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
                                  "enum": [
                                    "PR_BODY",
                                    "COMMIT_MESSAGES",
                                    "BLANK"
                                  ],
                                  "type": "string"
                                },
                                "squash_merge_commit_title": {
                                  "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
                                  "enum": [
                                    "PR_TITLE",
                                    "COMMIT_OR_PR_TITLE"
                                  ],
                                  "type": "string"
                                },
                                "ssh_url": {
                                  "type": "string"
                                },
                                "stargazers_count": {
                                  "type": "integer"
                                },
                                "stargazers_url": {
                                  "type": "string"
                                },
                                "statuses_url": {
                                  "type": "string"
                                },
                                "subscribers_count": {
                                  "type": "integer"
                                },
                                "subscribers_url": {
                                  "type": "string"
                                },
                                "subscription_url": {
                                  "type": "string"
                                },
                                "svn_url": {
                                  "type": "string"
                                },
                                "tags_url": {
                                  "type": "string"
                                },
                                "teams_url": {
                                  "type": "string"
                                },
                                "temp_clone_token": {
                                  "type": "string"
                                },
                                "topics": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "trees_url": {
                                  "type": "string"
                                },
                                "updated_at": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                },
                                "use_squash_pr_title_as_default": {
                                  "type": "boolean"
                                },
                                "visibility": {
                                  "type": "string"
                                },
                                "watchers_count": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "topics": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "trees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "type": "string"
                            },
                            "updated_at": {
                              "example": "2011-01-26T19:14:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/repos/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "use_squash_pr_title_as_default": {
                              "default": false,
                              "deprecated": true,
                              "description": "Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
                              "type": "boolean"
                            },
                            "visibility": {
                              "default": "public",
                              "description": "The repository visibility: public, private, or internal.",
                              "type": "string"
                            },
                            "watchers": {
                              "type": "integer"
                            },
                            "watchers_count": {
                              "example": 80,
                              "type": "integer"
                            },
                            "web_commit_signoff_required": {
                              "default": false,
                              "description": "Whether to require contributors to sign off on web-based commits",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "archive_url",
                            "assignees_url",
                            "blobs_url",
                            "branches_url",
                            "collaborators_url",
                            "comments_url",
                            "commits_url",
                            "compare_url",
                            "contents_url",
                            "contributors_url",
                            "deployments_url",
                            "description",
                            "downloads_url",
                            "events_url",
                            "fork",
                            "forks_url",
                            "full_name",
                            "git_commits_url",
                            "git_refs_url",
                            "git_tags_url",
                            "hooks_url",
                            "html_url",
                            "id",
                            "node_id",
                            "issue_comment_url",
                            "issue_events_url",
                            "issues_url",
                            "keys_url",
                            "labels_url",
                            "languages_url",
                            "merges_url",
                            "milestones_url",
                            "name",
                            "notifications_url",
                            "owner",
                            "private",
                            "pulls_url",
                            "releases_url",
                            "stargazers_url",
                            "statuses_url",
                            "subscribers_url",
                            "subscription_url",
                            "tags_url",
                            "teams_url",
                            "trees_url",
                            "url",
                            "clone_url",
                            "default_branch",
                            "forks",
                            "forks_count",
                            "git_url",
                            "has_downloads",
                            "has_issues",
                            "has_projects",
                            "has_wiki",
                            "has_pages",
                            "homepage",
                            "language",
                            "archived",
                            "disabled",
                            "mirror_url",
                            "open_issues",
                            "open_issues_count",
                            "license",
                            "pushed_at",
                            "size",
                            "ssh_url",
                            "stargazers_count",
                            "svn_url",
                            "watchers",
                            "watchers_count",
                            "created_at",
                            "updated_at"
                          ],
                          "title": "Repository",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "repository_selection": {
                        "description": "Describe whether all repositories have been selected or there's a selection involved",
                        "enum": [
                          "all",
                          "selected"
                        ],
                        "type": "string"
                      },
                      "single_file": {
                        "example": "config.yaml",
                        "nullable": true,
                        "type": "string"
                      },
                      "token": {
                        "description": "The token used for authentication",
                        "example": "v1.1f699f1069f60xxx",
                        "type": "string"
                      }
                    },
                    "required": [
                      "token",
                      "expires_at"
                    ],
                    "title": "Authentication Token",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a remove token for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}": {
        "delete": {
          "deprecated": null,
          "description": "Remove a custom label from a self-hosted runner configured\nin an enterprise. Returns the remaining labels from the runner.\n\nThis endpoint returns a `404 Not Found` status if the custom label is not\npresent on the runner.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#remove-a-custom-label-from-a-self-hosted-runner-for-an-enterprise"
          },
          "operationId": "enterprise-admin/remove-custom-label-from-self-hosted-runner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "The name of a self-hosted runner's custom label.",
              "in": "path",
              "name": "name",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "labels": [
                          {
                            "id": 5,
                            "name": "self-hosted",
                            "type": "read-only"
                          },
                          {
                            "id": 7,
                            "name": "X64",
                            "type": "read-only"
                          },
                          {
                            "id": 20,
                            "name": "macOS",
                            "type": "read-only"
                          },
                          {
                            "id": 21,
                            "name": "no-gpu",
                            "type": "custom"
                          }
                        ],
                        "total_count": 4
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "labels": {
                        "items": {
                          "description": "A label for a self hosted runner",
                          "properties": {
                            "id": {
                              "description": "Unique identifier of the label.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the label.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                              "enum": [
                                "read-only",
                                "custom"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "title": "Self hosted runner label",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_count",
                      "labels"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error Simple",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error Simple",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Remove a custom label from a self-hosted runner for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/audit-log": {
        "get": {
          "deprecated": null,
          "description": "Gets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the `admin:enterprise` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-the-audit-log-for-an-enterprise"
          },
          "operationId": "enterprise-admin/get-audit-log",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-server@3.7/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).",
              "in": "query",
              "name": "phrase",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
              "in": "query",
              "name": "include",
              "required": false,
              "schema": {
                "enum": [
                  "web",
                  "git",
                  "all"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.7/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.",
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.7/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.",
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\nThe default is `desc`.",
              "in": "query",
              "name": "order",
              "required": false,
              "schema": {
                "enum": [
                  "desc",
                  "asc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "@timestamp": 1635940599755,
                          "action": "pull_request.merge",
                          "actor": "mona-admin",
                          "actor_id": 7,
                          "actor_ip": "88.123.45.123",
                          "actor_location": {
                            "city": "Louth",
                            "country_code": "GB",
                            "country_name": "United Kingdom",
                            "location": {
                              "lat": 53.4457,
                              "lon": 0.141
                            },
                            "postal_code": "LN11",
                            "region": "ENG",
                            "region_name": "England"
                          },
                          "business": "github",
                          "business_id": 1,
                          "created_at": 1635940599755,
                          "data": {
                            "actor_session": 1,
                            "category_type": "Resource Management",
                            "client_id": 322299977.1635936,
                            "controller_action": "merge",
                            "method": "POST",
                            "pull_request_id": 1,
                            "referrer": "https://example.com/octo-org/octo-repo/pull/1",
                            "request_category": "other",
                            "request_id": "e4dabc4d-ba16-4bca-1234-649be7ae1188",
                            "server_id": "5d17aab5-fd9f-abcd-a820-16bed246441b",
                            "url": "https://example.com/octo-org/octo-repo/pull/1/merge",
                            "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) ..."
                          },
                          "device_cookie": null,
                          "from": "pull_requests#merge",
                          "operation_type": "modify",
                          "org": "octo-org",
                          "org_id": 8,
                          "repo": "octo-org/octo-repo",
                          "repo_id": 17
                        },
                        {
                          "@timestamp": 1635940593079,
                          "action": "pull_request_review.submit",
                          "actor": "mona-admin",
                          "actor_id": 7,
                          "actor_ip": "88.123.45.123",
                          "actor_location": {
                            "city": "Louth",
                            "country_code": "GB",
                            "country_name": "United Kingdom",
                            "location": {
                              "lat": 53.4457,
                              "lon": 0.141
                            },
                            "postal_code": "LN11",
                            "region": "ENG",
                            "region_name": "England"
                          },
                          "business_id": 1,
                          "created_at": 1635940593079,
                          "data": {
                            "actor_session": 1,
                            "allowed": true,
                            "body": null,
                            "category_type": "Resource Management",
                            "client_id": 322299977.1635936,
                            "controller_action": "create",
                            "id": 1,
                            "issue_id": 1,
                            "method": "PUT",
                            "pull_request_id": 1,
                            "referrer": "https://example.com/octo-org/octo-repo/pull/1/files",
                            "request_category": "other",
                            "request_id": "c0f63bb7-17b6-4796-940c-12345c5a581b",
                            "review_id": 1,
                            "server_id": "2abc1234-f651-43e3-9696-e942ad5f8c89",
                            "spammy": false,
                            "state": 40,
                            "url": "https://example.com/octo-org/octo-repo/pull/1/reviews",
                            "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) ..."
                          },
                          "device_cookie": null,
                          "from": "pull_request_review_events#create",
                          "operation_type": "modify",
                          "org_id": 8
                        },
                        {
                          "@timestamp": 1635940554161,
                          "action": "pull_request.create",
                          "actor": "mona",
                          "actor_id": 9,
                          "actor_ip": "88.123.45.123",
                          "actor_location": {
                            "city": "Louth",
                            "country_code": "GB",
                            "country_name": "United Kingdom",
                            "location": {
                              "lat": 53.4457,
                              "lon": 0.141
                            },
                            "postal_code": "LN11",
                            "region": "ENG",
                            "region_name": "England"
                          },
                          "business": "github",
                          "business_id": 1,
                          "created_at": 1635940554161,
                          "data": {
                            "actor_session": 2,
                            "category_type": "Resource Management",
                            "client_id": 386351111.163594,
                            "controller_action": "create",
                            "method": "POST",
                            "pull_request_id": 1,
                            "referrer": "https://example.com/octo-org/octo-repo/compare/main...mona:patch-1",
                            "request_category": "other",
                            "request_id": "2773abeb-477f-4ebf-a017-f8e8a206c305",
                            "server_id": "796e3115-4ce8-4606-8fd0-99ea57a2e12b",
                            "url": "https://example.com/octo-org/octo-repo/pull/create?base=octo-org%3Amain&head=mona%3Apatch-1",
                            "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) ..."
                          },
                          "device_cookie": null,
                          "from": "pull_requests#create",
                          "operation_type": "create",
                          "org": "octo-org",
                          "org_id": 8,
                          "repo": "octo-org/octo-repo",
                          "repo_id": 17,
                          "user_id": 9
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "@timestamp": {
                          "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "_document_id": {
                          "description": "A unique identifier for an audit event.",
                          "type": "string"
                        },
                        "action": {
                          "description": "The name of the action that was performed, for example `user.login` or `repo.create`.",
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "active_was": {
                          "type": "boolean"
                        },
                        "actor": {
                          "description": "The actor who performed the action.",
                          "type": "string"
                        },
                        "actor_id": {
                          "description": "The id of the actor who performed the action.",
                          "type": "integer"
                        },
                        "actor_location": {
                          "properties": {
                            "country_name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "blocked_user": {
                          "description": "The username of the account being blocked.",
                          "type": "string"
                        },
                        "business": {
                          "type": "string"
                        },
                        "business_id": {
                          "type": "integer"
                        },
                        "config": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "config_was": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "content_type": {
                          "type": "string"
                        },
                        "created_at": {
                          "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "data": {
                          "additionalProperties": true,
                          "type": "object"
                        },
                        "deploy_key_fingerprint": {
                          "type": "string"
                        },
                        "emoji": {
                          "type": "string"
                        },
                        "events": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "events_were": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "explanation": {
                          "type": "string"
                        },
                        "fingerprint": {
                          "type": "string"
                        },
                        "hook_id": {
                          "type": "integer"
                        },
                        "limited_availability": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "old_user": {
                          "type": "string"
                        },
                        "openssh_public_key": {
                          "type": "string"
                        },
                        "operation_type": {
                          "type": "string"
                        },
                        "org": {
                          "type": "string"
                        },
                        "org_id": {
                          "type": "integer"
                        },
                        "previous_visibility": {
                          "type": "string"
                        },
                        "read_only": {
                          "type": "boolean"
                        },
                        "repo": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository_public": {
                          "type": "boolean"
                        },
                        "target_login": {
                          "type": "string"
                        },
                        "team": {
                          "type": "string"
                        },
                        "transport_protocol": {
                          "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "integer"
                        },
                        "transport_protocol_name": {
                          "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "string"
                        },
                        "user": {
                          "description": "The user that was affected by the action performed (if available).",
                          "type": "string"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "visibility": {
                          "description": "The repository visibility, for example `public` or `private`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the audit log for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "audit-log"
          },
          "x-octokit": {
            "changes": [
              {
                "before": {
                  "operationId": "audit-log/get-audit-log"
                },
                "date": "2021-04-30",
                "type": "OPERATION"
              }
            ]
          }
        }
      },
      "/enterprises/{enterprise}/code-scanning/alerts": {
        "get": {
          "deprecated": null,
          "description": "Lists code scanning alerts for the default branch for all eligible repositories in an enterprise. Eligible repositories are repositories that are owned by organizations that you own or for which you are a security manager. For more information, see \"[Managing security managers in your organization](https://docs.github.com/enterprise-server@3.7/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).\"\n\nTo use this endpoint, you must be a member of the enterprise,\nand you must use an access token with the `repo` scope or `security_events` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/code-scanning#list-code-scanning-alerts-for-an-enterprise"
          },
          "operationId": "code-scanning/list-alerts-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.",
              "in": "query",
              "name": "tool_name",
              "required": false,
              "schema": {
                "description": "The name of the tool used to generate the code scanning analysis.",
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.",
              "in": "query",
              "name": "tool_guid",
              "required": false,
              "schema": {
                "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                "nullable": true,
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.7/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for results before this cursor.",
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.7/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for results after this cursor.",
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The direction to sort the results by.",
              "in": "query",
              "name": "direction",
              "required": false,
              "schema": {
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "If specified, only code scanning alerts with this state will be returned.",
              "in": "query",
              "name": "state",
              "required": false,
              "schema": {
                "description": "State of a code scanning alert.",
                "enum": [
                  "open",
                  "closed",
                  "dismissed",
                  "fixed"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The property by which to sort the results.",
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "default": "created",
                "enum": [
                  "created",
                  "updated"
                ],
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "created_at": "2020-02-13T12:29:18Z",
                          "dismissed_at": null,
                          "dismissed_by": null,
                          "dismissed_comment": null,
                          "dismissed_reason": null,
                          "html_url": "https://github.com/octocat/hello-world/code-scanning/4",
                          "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4/instances",
                          "most_recent_instance": {
                            "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                            "classifications": [
                              "test"
                            ],
                            "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
                            "environment": "{}",
                            "location": {
                              "end_column": 18,
                              "end_line": 917,
                              "path": "spec-main/api-session-spec.ts",
                              "start_column": 7,
                              "start_line": 917
                            },
                            "message": {
                              "text": "This path depends on a user-provided value."
                            },
                            "ref": "refs/heads/main",
                            "state": "open"
                          },
                          "number": 4,
                          "repository": {
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                            "description": "This your first repo!",
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                            "fork": false,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                            "full_name": "octocat/Hello-World",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                            "html_url": "https://github.com/octocat/Hello-World",
                            "id": 1296269,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "name": "Hello-World",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "url": "https://api.github.com/repos/octocat/Hello-World"
                          },
                          "rule": {
                            "description": "Arbitrary file write during zip extraction",
                            "id": "js/zipslip",
                            "name": "js/zipslip",
                            "severity": "error",
                            "tags": [
                              "security",
                              "external/cwe/cwe-022"
                            ]
                          },
                          "state": "open",
                          "tool": {
                            "guid": null,
                            "name": "CodeQL",
                            "version": "2.4.0"
                          },
                          "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4"
                        },
                        {
                          "created_at": "2020-02-13T12:29:18Z",
                          "dismissed_at": "2020-02-14T12:29:18Z",
                          "dismissed_by": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "dismissed_comment": "This alert is not actually correct, because there's a sanitizer included in the library.",
                          "dismissed_reason": "false positive",
                          "html_url": "https://github.com/octocat/hello-world/code-scanning/3",
                          "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3/instances",
                          "most_recent_instance": {
                            "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                            "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
                            "environment": "{}",
                            "location": {
                              "end_column": 18,
                              "end_line": 917,
                              "path": "lib/ab12-gen.js",
                              "start_column": 7,
                              "start_line": 917
                            },
                            "message": {
                              "text": "This path depends on a user-provided value."
                            },
                            "ref": "refs/heads/main",
                            "state": "open"
                          },
                          "number": 3,
                          "repository": {
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                            "description": "This your first repo!",
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                            "fork": false,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                            "full_name": "octocat/Hello-World",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                            "html_url": "https://github.com/octocat/Hello-World",
                            "id": 1296269,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "name": "Hello-World",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "url": "https://api.github.com/repos/octocat/Hello-World"
                          },
                          "rule": {
                            "description": "Arbitrary file write during zip extraction",
                            "id": "js/zipslip",
                            "name": "js/zipslip",
                            "severity": "error",
                            "tags": [
                              "security",
                              "external/cwe/cwe-022"
                            ]
                          },
                          "state": "dismissed",
                          "tool": {
                            "guid": null,
                            "name": "CodeQL",
                            "version": "2.4.0"
                          },
                          "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string"
                        },
                        "dismissed_at": {
                          "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "format": "date-time",
                          "nullable": true,
                          "readOnly": true,
                          "type": "string"
                        },
                        "dismissed_by": {
                          "description": "A GitHub user.",
                          "nullable": true,
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                              "type": "string"
                            },
                            "followers_url": {
                              "example": "https://api.github.com/users/octocat/followers",
                              "format": "uri",
                              "type": "string"
                            },
                            "following_url": {
                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                              "type": "string"
                            },
                            "gists_url": {
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "type": "string"
                            },
                            "gravatar_id": {
                              "example": "41d064eb2195891e12d0413f63227ea7",
                              "nullable": true,
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "login": {
                              "example": "octocat",
                              "type": "string"
                            },
                            "name": {
                              "nullable": true,
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDQ6VXNlcjE=",
                              "type": "string"
                            },
                            "organizations_url": {
                              "example": "https://api.github.com/users/octocat/orgs",
                              "format": "uri",
                              "type": "string"
                            },
                            "received_events_url": {
                              "example": "https://api.github.com/users/octocat/received_events",
                              "format": "uri",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "site_admin": {
                              "type": "boolean"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:55Z\"",
                              "type": "string"
                            },
                            "starred_url": {
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "type": "string"
                            },
                            "subscriptions_url": {
                              "example": "https://api.github.com/users/octocat/subscriptions",
                              "format": "uri",
                              "type": "string"
                            },
                            "type": {
                              "example": "User",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/users/octocat",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "title": "Simple User",
                          "type": "object"
                        },
                        "dismissed_comment": {
                          "description": "The dismissal comment associated with the dismissal of the alert.",
                          "maxLength": 280,
                          "nullable": true,
                          "type": "string"
                        },
                        "dismissed_reason": {
                          "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert.",
                          "enum": [
                            null,
                            "false positive",
                            "won't fix",
                            "used in tests"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "fixed_at": {
                          "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "format": "date-time",
                          "nullable": true,
                          "readOnly": true,
                          "type": "string"
                        },
                        "html_url": {
                          "description": "The GitHub URL of the alert resource.",
                          "format": "uri",
                          "readOnly": true,
                          "type": "string"
                        },
                        "instances_url": {
                          "description": "The REST API URL for fetching the list of instances for an alert.",
                          "format": "uri",
                          "readOnly": true,
                          "type": "string"
                        },
                        "most_recent_instance": {
                          "properties": {
                            "analysis_key": {
                              "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.",
                              "type": "string"
                            },
                            "category": {
                              "description": "Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code.",
                              "type": "string"
                            },
                            "classifications": {
                              "description": "Classifications that have been applied to the file that triggered the alert.\nFor example identifying it as documentation, or a generated file.",
                              "items": {
                                "description": "A classification of the file. For example to identify it as generated.",
                                "enum": [
                                  "source",
                                  "generated",
                                  "test",
                                  "library"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "commit_sha": {
                              "type": "string"
                            },
                            "environment": {
                              "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed.",
                              "type": "string"
                            },
                            "html_url": {
                              "type": "string"
                            },
                            "location": {
                              "description": "Describe a region within a file for the alert.",
                              "properties": {
                                "end_column": {
                                  "type": "integer"
                                },
                                "end_line": {
                                  "type": "integer"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "start_column": {
                                  "type": "integer"
                                },
                                "start_line": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "message": {
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "ref": {
                              "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`.",
                              "type": "string"
                            },
                            "state": {
                              "description": "State of a code scanning alert.",
                              "enum": [
                                "open",
                                "closed",
                                "dismissed",
                                "fixed"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "number": {
                          "description": "The security alert number.",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "repository": {
                          "description": "A GitHub repository.",
                          "properties": {
                            "archive_url": {
                              "description": "A template for the API URL to download the repository as an archive.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "type": "string"
                            },
                            "assignees_url": {
                              "description": "A template for the API URL to list the available assignees for issues in the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "type": "string"
                            },
                            "blobs_url": {
                              "description": "A template for the API URL to create or retrieve a raw Git blob in the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "type": "string"
                            },
                            "branches_url": {
                              "description": "A template for the API URL to get information about branches in the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "type": "string"
                            },
                            "collaborators_url": {
                              "description": "A template for the API URL to get information about collaborators of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "type": "string"
                            },
                            "comments_url": {
                              "description": "A template for the API URL to get information about comments on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "type": "string"
                            },
                            "commits_url": {
                              "description": "A template for the API URL to get information about commits on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "type": "string"
                            },
                            "compare_url": {
                              "description": "A template for the API URL to compare two commits or refs.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "type": "string"
                            },
                            "contents_url": {
                              "description": "A template for the API URL to get the contents of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "type": "string"
                            },
                            "contributors_url": {
                              "description": "A template for the API URL to list the contributors to the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/contributors",
                              "format": "uri",
                              "type": "string"
                            },
                            "deployments_url": {
                              "description": "The API URL to list the deployments of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/deployments",
                              "format": "uri",
                              "type": "string"
                            },
                            "description": {
                              "description": "The repository description.",
                              "example": "This your first repo!",
                              "nullable": true,
                              "type": "string"
                            },
                            "downloads_url": {
                              "description": "The API URL to list the downloads on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/downloads",
                              "format": "uri",
                              "type": "string"
                            },
                            "events_url": {
                              "description": "The API URL to list the events of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "fork": {
                              "description": "Whether the repository is a fork.",
                              "type": "boolean"
                            },
                            "forks_url": {
                              "description": "The API URL to list the forks of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/forks",
                              "format": "uri",
                              "type": "string"
                            },
                            "full_name": {
                              "description": "The full, globally unique, name of the repository.",
                              "example": "octocat/Hello-World",
                              "type": "string"
                            },
                            "git_commits_url": {
                              "description": "A template for the API URL to get information about Git commits of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "type": "string"
                            },
                            "git_refs_url": {
                              "description": "A template for the API URL to get information about Git refs of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "type": "string"
                            },
                            "git_tags_url": {
                              "description": "A template for the API URL to get information about Git tags of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "type": "string"
                            },
                            "hooks_url": {
                              "description": "The API URL to list the hooks on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/hooks",
                              "format": "uri",
                              "type": "string"
                            },
                            "html_url": {
                              "description": "The URL to view the repository on GitHub.com.",
                              "example": "https://github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "description": "A unique identifier of the repository.",
                              "example": 1296269,
                              "type": "integer"
                            },
                            "issue_comment_url": {
                              "description": "A template for the API URL to get information about issue comments on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "type": "string"
                            },
                            "issue_events_url": {
                              "description": "A template for the API URL to get information about issue events on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "type": "string"
                            },
                            "issues_url": {
                              "description": "A template for the API URL to get information about issues on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "type": "string"
                            },
                            "keys_url": {
                              "description": "A template for the API URL to get information about deploy keys on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "type": "string"
                            },
                            "labels_url": {
                              "description": "A template for the API URL to get information about labels of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "type": "string"
                            },
                            "languages_url": {
                              "description": "The API URL to get information about the languages of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/languages",
                              "format": "uri",
                              "type": "string"
                            },
                            "merges_url": {
                              "description": "The API URL to merge branches in the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/merges",
                              "format": "uri",
                              "type": "string"
                            },
                            "milestones_url": {
                              "description": "A template for the API URL to get information about milestones of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the repository.",
                              "example": "Hello-World",
                              "type": "string"
                            },
                            "node_id": {
                              "description": "The GraphQL identifier of the repository.",
                              "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "type": "string"
                            },
                            "notifications_url": {
                              "description": "A template for the API URL to get information about notifications on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "type": "string"
                            },
                            "owner": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "private": {
                              "description": "Whether the repository is private.",
                              "type": "boolean"
                            },
                            "pulls_url": {
                              "description": "A template for the API URL to get information about pull requests on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "type": "string"
                            },
                            "releases_url": {
                              "description": "A template for the API URL to get information about releases on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "type": "string"
                            },
                            "stargazers_url": {
                              "description": "The API URL to list the stargazers on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                              "format": "uri",
                              "type": "string"
                            },
                            "statuses_url": {
                              "description": "A template for the API URL to get information about statuses of a commit.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "type": "string"
                            },
                            "subscribers_url": {
                              "description": "The API URL to list the subscribers on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                              "format": "uri",
                              "type": "string"
                            },
                            "subscription_url": {
                              "description": "The API URL to subscribe to notifications for this repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/subscription",
                              "format": "uri",
                              "type": "string"
                            },
                            "tags_url": {
                              "description": "The API URL to get information about tags on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/tags",
                              "format": "uri",
                              "type": "string"
                            },
                            "teams_url": {
                              "description": "The API URL to list the teams on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/teams",
                              "format": "uri",
                              "type": "string"
                            },
                            "trees_url": {
                              "description": "A template for the API URL to create or retrieve a raw Git tree of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "type": "string"
                            },
                            "url": {
                              "description": "The URL to get more information about the repository from the GitHub API.",
                              "example": "https://api.github.com/repos/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "archive_url",
                            "assignees_url",
                            "blobs_url",
                            "branches_url",
                            "collaborators_url",
                            "comments_url",
                            "commits_url",
                            "compare_url",
                            "contents_url",
                            "contributors_url",
                            "deployments_url",
                            "description",
                            "downloads_url",
                            "events_url",
                            "fork",
                            "forks_url",
                            "full_name",
                            "git_commits_url",
                            "git_refs_url",
                            "git_tags_url",
                            "hooks_url",
                            "html_url",
                            "id",
                            "node_id",
                            "issue_comment_url",
                            "issue_events_url",
                            "issues_url",
                            "keys_url",
                            "labels_url",
                            "languages_url",
                            "merges_url",
                            "milestones_url",
                            "name",
                            "notifications_url",
                            "owner",
                            "private",
                            "pulls_url",
                            "releases_url",
                            "stargazers_url",
                            "statuses_url",
                            "subscribers_url",
                            "subscription_url",
                            "tags_url",
                            "teams_url",
                            "trees_url",
                            "url"
                          ],
                          "title": "Simple Repository",
                          "type": "object"
                        },
                        "rule": {
                          "properties": {
                            "description": {
                              "description": "A short description of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "full_description": {
                              "description": "description of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "help": {
                              "description": "Detailed documentation for the rule as GitHub Flavored Markdown.",
                              "nullable": true,
                              "type": "string"
                            },
                            "help_uri": {
                              "description": "A link to the documentation for the rule used to detect the alert.",
                              "nullable": true,
                              "type": "string"
                            },
                            "id": {
                              "description": "A unique identifier for the rule used to detect the alert.",
                              "nullable": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "security_severity_level": {
                              "description": "The security severity of the alert.",
                              "enum": [
                                "low",
                                "medium",
                                "high",
                                "critical"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "severity": {
                              "description": "The severity of the alert.",
                              "enum": [
                                "none",
                                "note",
                                "warning",
                                "error"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "tags": {
                              "description": "A set of tags applicable for the rule.",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "state": {
                          "description": "State of a code scanning alert.",
                          "enum": [
                            "open",
                            "closed",
                            "dismissed",
                            "fixed"
                          ],
                          "type": "string"
                        },
                        "tool": {
                          "properties": {
                            "guid": {
                              "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                              "nullable": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the tool used to generate the code scanning analysis.",
                              "type": "string"
                            },
                            "version": {
                              "description": "The version of the tool used to generate the code scanning analysis.",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "updated_at": {
                          "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string"
                        },
                        "url": {
                          "description": "The REST API URL of the alert resource.",
                          "format": "uri",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "number",
                        "created_at",
                        "url",
                        "html_url",
                        "instances_url",
                        "state",
                        "dismissed_by",
                        "dismissed_at",
                        "dismissed_reason",
                        "rule",
                        "tool",
                        "most_recent_instance",
                        "repository"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "503": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Service unavailable"
            }
          },
          "summary": "List code scanning alerts for an enterprise",
          "tags": [
            "code-scanning"
          ],
          "x-github": {
            "category": "code-scanning",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": null
          }
        }
      },
      "/enterprises/{enterprise}/settings/billing/advanced-security": {
        "get": {
          "deprecated": null,
          "description": "Gets the GitHub Advanced Security active committers for an enterprise per repository.\n\nEach distinct user login across all repositories is counted as a single Advanced Security seat, so the `total_advanced_security_committers` is not the sum of active_users for each repository.\n\nThe total number of repositories with committer information is tracked by the `total_count` field.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/billing#export-advanced-security-active-committers-data-for-enterprise"
          },
          "operationId": "billing/get-github-advanced-security-billing-ghe",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "repositories": [
                          {
                            "advanced_security_committers": 2,
                            "advanced_security_committers_breakdown": [
                              {
                                "last_pushed_date": "2021-11-03",
                                "user_login": "octocat"
                              },
                              {
                                "last_pushed_date": "2021-10-25",
                                "user_login": "octokitten"
                              }
                            ],
                            "name": "octocat-org/Hello-World"
                          },
                          {
                            "advanced_security_committers": 1,
                            "advanced_security_committers_breakdown": [
                              {
                                "last_pushed_date": "2021-10-26",
                                "user_login": "octokitten"
                              }
                            ],
                            "name": "octocat-org/server"
                          }
                        ],
                        "total_advanced_security_committers": 2,
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "repositories": {
                        "items": {
                          "properties": {
                            "advanced_security_committers": {
                              "example": 25,
                              "type": "integer"
                            },
                            "advanced_security_committers_breakdown": {
                              "items": {
                                "properties": {
                                  "last_pushed_date": {
                                    "example": "2021-11-03",
                                    "type": "string"
                                  },
                                  "user_login": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "user_login",
                                  "last_pushed_date"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "example": "octocat/Hello-World",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "advanced_security_committers",
                            "advanced_security_committers_breakdown"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_advanced_security_committers": {
                        "example": 25,
                        "type": "integer"
                      },
                      "total_count": {
                        "example": 2,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "repositories"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Success"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Response if GitHub Advanced Security is not enabled for this repository"
            }
          },
          "summary": "Get GitHub Advanced Security active committers for an enterprise",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "billing"
          }
        }
      },
      "/organizations/{organization_id}/custom_roles": {
        "get": {
          "deprecated": null,
          "description": "List the custom repository roles available in this organization. In order to see custom\nrepository roles in an organization, the authenticated user must be an organization owner.\n\nTo use this endpoint the authenticated user must be an administrator for the organization or of an repository of the organization and must use an access token with `admin:org repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-server@3.7/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/orgs#list-custom-repository-roles-in-an-organization"
          },
          "operationId": "orgs/list-custom-roles",
          "parameters": [
            {
              "description": "The unique identifier of the organization.",
              "in": "path",
              "name": "organization_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "custom_roles": [
                          {
                            "id": 8030,
                            "name": "Developer"
                          },
                          {
                            "id": 8031,
                            "name": "Designer"
                          }
                        ],
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "custom_roles": {
                        "items": {
                          "description": "Custom repository roles created by organization administrators",
                          "properties": {
                            "id": {
                              "description": "The unique identifier of the custom role.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "The name of the custom role.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ],
                          "title": "Organization Custom Repository Role",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "description": "The number of custom roles in this organization",
                        "example": 3,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response - list of custom role names"
            }
          },
          "summary": "List custom repository roles in an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "custom_roles"
          }
        }
      },
      "/orgs/{org}/audit-log": {
        "get": {
          "deprecated": null,
          "description": "Gets the audit log for an organization. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/enterprise-server@3.7/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization).\"\n\nTo use this endpoint, you must be an organization owner, and you must use an access token with the `admin:org` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint.\n\nBy default, the response includes up to 30 events from the past three months. Use the `phrase` parameter to filter results and retrieve older events. For example, use the `phrase` parameter with the `created` qualifier to filter events based on when the events occurred. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/enterprise-server@3.7/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).\"\n\nUse pagination to retrieve fewer or more than 30 events. For more information, see \"[Resources in the REST API](https://docs.github.com/enterprise-server@3.7/rest/overview/resources-in-the-rest-api#pagination).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/orgs#get-audit-log"
          },
          "operationId": "orgs/get-audit-log",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-server@3.7/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).",
              "in": "query",
              "name": "phrase",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
              "in": "query",
              "name": "include",
              "required": false,
              "schema": {
                "enum": [
                  "web",
                  "git",
                  "all"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.7/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.",
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.7/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.",
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\nThe default is `desc`.",
              "in": "query",
              "name": "order",
              "required": false,
              "schema": {
                "enum": [
                  "desc",
                  "asc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "@timestamp": 1635940599755,
                          "action": "pull_request.merge",
                          "actor": "mona-admin",
                          "actor_id": 7,
                          "actor_ip": "88.123.45.123",
                          "actor_location": {
                            "city": "Louth",
                            "country_code": "GB",
                            "country_name": "United Kingdom",
                            "location": {
                              "lat": 53.4457,
                              "lon": 0.141
                            },
                            "postal_code": "LN11",
                            "region": "ENG",
                            "region_name": "England"
                          },
                          "business": "github",
                          "business_id": 1,
                          "created_at": 1635940599755,
                          "data": {
                            "actor_session": 1,
                            "category_type": "Resource Management",
                            "client_id": 322299977.1635936,
                            "controller_action": "merge",
                            "method": "POST",
                            "pull_request_id": 1,
                            "referrer": "https://example.com/octo-org/octo-repo/pull/1",
                            "request_category": "other",
                            "request_id": "e4dabc4d-ba16-4bca-1234-649be7ae1188",
                            "server_id": "5d17aab5-fd9f-abcd-a820-16bed246441b",
                            "url": "https://example.com/octo-org/octo-repo/pull/1/merge",
                            "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) ..."
                          },
                          "device_cookie": null,
                          "from": "pull_requests#merge",
                          "operation_type": "modify",
                          "org": "octo-org",
                          "org_id": 8,
                          "repo": "octo-org/octo-repo",
                          "repo_id": 17
                        },
                        {
                          "@timestamp": 1635940593079,
                          "action": "pull_request_review.submit",
                          "actor": "mona-admin",
                          "actor_id": 7,
                          "actor_ip": "88.123.45.123",
                          "actor_location": {
                            "city": "Louth",
                            "country_code": "GB",
                            "country_name": "United Kingdom",
                            "location": {
                              "lat": 53.4457,
                              "lon": 0.141
                            },
                            "postal_code": "LN11",
                            "region": "ENG",
                            "region_name": "England"
                          },
                          "business_id": 1,
                          "created_at": 1635940593079,
                          "data": {
                            "actor_session": 1,
                            "allowed": true,
                            "body": null,
                            "category_type": "Resource Management",
                            "client_id": 322299977.1635936,
                            "controller_action": "create",
                            "id": 1,
                            "issue_id": 1,
                            "method": "PUT",
                            "pull_request_id": 1,
                            "referrer": "https://example.com/octo-org/octo-repo/pull/1/files",
                            "request_category": "other",
                            "request_id": "c0f63bb7-17b6-4796-940c-12345c5a581b",
                            "review_id": 1,
                            "server_id": "2abc1234-f651-43e3-9696-e942ad5f8c89",
                            "spammy": false,
                            "state": 40,
                            "url": "https://example.com/octo-org/octo-repo/pull/1/reviews",
                            "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) ..."
                          },
                          "device_cookie": null,
                          "from": "pull_request_review_events#create",
                          "operation_type": "modify",
                          "org_id": 8
                        },
                        {
                          "@timestamp": 1635940554161,
                          "action": "pull_request.create",
                          "actor": "mona",
                          "actor_id": 9,
                          "actor_ip": "88.123.45.123",
                          "actor_location": {
                            "city": "Louth",
                            "country_code": "GB",
                            "country_name": "United Kingdom",
                            "location": {
                              "lat": 53.4457,
                              "lon": 0.141
                            },
                            "postal_code": "LN11",
                            "region": "ENG",
                            "region_name": "England"
                          },
                          "business": "github",
                          "business_id": 1,
                          "created_at": 1635940554161,
                          "data": {
                            "actor_session": 2,
                            "category_type": "Resource Management",
                            "client_id": 386351111.163594,
                            "controller_action": "create",
                            "method": "POST",
                            "pull_request_id": 1,
                            "referrer": "https://example.com/octo-org/octo-repo/compare/main...mona:patch-1",
                            "request_category": "other",
                            "request_id": "2773abeb-477f-4ebf-a017-f8e8a206c305",
                            "server_id": "796e3115-4ce8-4606-8fd0-99ea57a2e12b",
                            "url": "https://example.com/octo-org/octo-repo/pull/create?base=octo-org%3Amain&head=mona%3Apatch-1",
                            "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) ..."
                          },
                          "device_cookie": null,
                          "from": "pull_requests#create",
                          "operation_type": "create",
                          "org": "octo-org",
                          "org_id": 8,
                          "repo": "octo-org/octo-repo",
                          "repo_id": 17,
                          "user_id": 9
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "@timestamp": {
                          "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "_document_id": {
                          "description": "A unique identifier for an audit event.",
                          "type": "string"
                        },
                        "action": {
                          "description": "The name of the action that was performed, for example `user.login` or `repo.create`.",
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "active_was": {
                          "type": "boolean"
                        },
                        "actor": {
                          "description": "The actor who performed the action.",
                          "type": "string"
                        },
                        "actor_id": {
                          "description": "The id of the actor who performed the action.",
                          "type": "integer"
                        },
                        "actor_location": {
                          "properties": {
                            "country_name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "blocked_user": {
                          "description": "The username of the account being blocked.",
                          "type": "string"
                        },
                        "business": {
                          "type": "string"
                        },
                        "business_id": {
                          "type": "integer"
                        },
                        "config": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "config_was": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "content_type": {
                          "type": "string"
                        },
                        "created_at": {
                          "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "data": {
                          "additionalProperties": true,
                          "type": "object"
                        },
                        "deploy_key_fingerprint": {
                          "type": "string"
                        },
                        "emoji": {
                          "type": "string"
                        },
                        "events": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "events_were": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "explanation": {
                          "type": "string"
                        },
                        "fingerprint": {
                          "type": "string"
                        },
                        "hook_id": {
                          "type": "integer"
                        },
                        "limited_availability": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "old_user": {
                          "type": "string"
                        },
                        "openssh_public_key": {
                          "type": "string"
                        },
                        "operation_type": {
                          "type": "string"
                        },
                        "org": {
                          "type": "string"
                        },
                        "org_id": {
                          "type": "integer"
                        },
                        "previous_visibility": {
                          "type": "string"
                        },
                        "read_only": {
                          "type": "boolean"
                        },
                        "repo": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository_public": {
                          "type": "boolean"
                        },
                        "target_login": {
                          "type": "string"
                        },
                        "team": {
                          "type": "string"
                        },
                        "transport_protocol": {
                          "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "integer"
                        },
                        "transport_protocol_name": {
                          "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "string"
                        },
                        "user": {
                          "description": "The user that was affected by the action performed (if available).",
                          "type": "string"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "visibility": {
                          "description": "The repository visibility, for example `public` or `private`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the audit log for an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/orgs/{org}/external-group/{group_id}": {
        "get": {
          "deprecated": null,
          "description": "Displays information about the specific group's usage.  Provides a list of the group's external members as well as a list of teams that this group is connected to.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-server@3.7/github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/teams#external-idp-group-info-for-an-organization"
          },
          "operationId": "teams/external-idp-group-info-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the group.",
              "in": "path",
              "name": "group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "group_id": "123",
                        "group_name": "Octocat admins",
                        "members": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "teams": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "updated_at": "2021-01-24T11:31:04-06:00"
                      }
                    }
                  },
                  "schema": {
                    "description": "Information about an external group's usage and its members",
                    "properties": {
                      "group_id": {
                        "description": "The internal ID of the group",
                        "example": 1,
                        "type": "integer"
                      },
                      "group_name": {
                        "description": "The display name for the group",
                        "example": "group-azuread-test",
                        "type": "string"
                      },
                      "members": {
                        "description": "An array of external members linked to this group",
                        "example": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "items": {
                          "properties": {
                            "member_email": {
                              "description": "An email attached to a user",
                              "example": "mona_lisa@github.com",
                              "type": "string"
                            },
                            "member_id": {
                              "description": "The internal user ID of the identity",
                              "example": 1,
                              "type": "integer"
                            },
                            "member_login": {
                              "description": "The handle/login for the user",
                              "example": "mona-lisa_eocsaxrs",
                              "type": "string"
                            },
                            "member_name": {
                              "description": "The user display name/profile name",
                              "example": "Mona Lisa",
                              "type": "string"
                            }
                          },
                          "required": [
                            "member_id",
                            "member_login",
                            "member_name",
                            "member_email"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "teams": {
                        "description": "An array of teams linked to this group",
                        "example": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "team_id": {
                              "description": "The id for a team",
                              "example": 1,
                              "type": "integer"
                            },
                            "team_name": {
                              "description": "The name of the team",
                              "example": "team-test",
                              "type": "string"
                            }
                          },
                          "required": [
                            "team_id",
                            "team_name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "description": "The date when the group was last updated_at",
                        "example": "2021-01-03 22:27:15:000 -700",
                        "type": "string"
                      }
                    },
                    "required": [
                      "group_id",
                      "group_name",
                      "teams",
                      "members"
                    ],
                    "title": "ExternalGroup",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get an external group",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        }
      },
      "/orgs/{org}/external-groups": {
        "get": {
          "deprecated": null,
          "description": "Lists external groups available in an organization. You can query the groups using the `display_name` parameter, only groups with a `group_name` containing the text provided in the `display_name` parameter will be returned.  You can also limit your page results using the `per_page` parameter. GitHub Enterprise Server generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-server@3.7/github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/teams#list-external-idp-groups-for-an-organization"
          },
          "operationId": "teams/list-external-idp-groups-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page token",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Limits the list to groups containing the text in the group name",
              "in": "query",
              "name": "display_name",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_id": "123",
                            "group_name": "Octocat admins",
                            "updated_at": "2021-01-24T11:31:04-06:00"
                          },
                          {
                            "group_id": "456",
                            "group_name": "Octocat docs members",
                            "updated_at": "2021-03-24T11:31:04-06:00"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "A list of external groups available to be connected to a team",
                    "properties": {
                      "groups": {
                        "description": "An array of external groups available to be mapped to a team",
                        "example": [
                          {
                            "group_id": 1,
                            "group_name": "group-azuread-test",
                            "updated_at": "2021-01-03 22:27:15:000 -700"
                          },
                          {
                            "group_id": 2,
                            "group_name": "group-azuread-test2",
                            "updated_at": "2021-06-03 22:27:15:000 -700"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_id": {
                              "description": "The internal ID of the group",
                              "example": 1,
                              "type": "integer"
                            },
                            "group_name": {
                              "description": "The display name of the group",
                              "example": "group-azuread-test",
                              "type": "string"
                            },
                            "updated_at": {
                              "description": "The time of the last update for this group",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "updated_at"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ExternalGroups",
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?per_page=2&page=url-encoded-next-page-token>; rel=\"next\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List external groups in an organization",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        }
      },
      "/orgs/{org}/pre-receive-hooks": {
        "get": {
          "deprecated": null,
          "description": "List all pre-receive hooks that are enabled or testing for this organization as well as any disabled hooks that can be configured at the organization level. Globally disabled pre-receive hooks that do not allow downstream configuration are not listed.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#list-pre-receive-hooks-for-an-organization"
          },
          "operationId": "enterprise-admin/list-pre-receive-hooks-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The direction to sort the results by.",
              "in": "query",
              "name": "direction",
              "required": false,
              "schema": {
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The sort order for the response collection.",
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "default": "created",
                "enum": [
                  "created",
                  "updated",
                  "name"
                ],
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "allow_downstream_configuration": true,
                          "configuration_url": "https://github.example.com/api/v3/admin/pre-receive-hooks/42",
                          "enforcement": "disabled",
                          "id": 42,
                          "name": "Check Commits"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "allow_downstream_configuration": {
                          "type": "boolean"
                        },
                        "configuration_url": {
                          "type": "string"
                        },
                        "enforcement": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List pre-receive hooks for an organization",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "org-pre-receive-hooks"
          }
        }
      },
      "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}": {
        "delete": {
          "deprecated": null,
          "description": "Removes any overrides for this hook at the org level for this org.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-an-organization"
          },
          "operationId": "enterprise-admin/remove-pre-receive-hook-enforcement-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the pre-receive hook.",
              "in": "path",
              "name": "pre_receive_hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allow_downstream_configuration": true,
                        "configuration_url": "https://github.example.com/api/v3/admin/pre-receive-hooks/42",
                        "enforcement": "disabled",
                        "id": 42,
                        "name": "Check Commits"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allow_downstream_configuration": {
                        "type": "boolean"
                      },
                      "configuration_url": {
                        "type": "string"
                      },
                      "enforcement": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Remove pre-receive hook enforcement for an organization",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "org-pre-receive-hooks"
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-an-organization"
          },
          "operationId": "enterprise-admin/get-pre-receive-hook-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the pre-receive hook.",
              "in": "path",
              "name": "pre_receive_hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allow_downstream_configuration": true,
                        "configuration_url": "https://github.example.com/api/v3/admin/pre-receive-hooks/42",
                        "enforcement": "disabled",
                        "id": 42,
                        "name": "Check Commits"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allow_downstream_configuration": {
                        "type": "boolean"
                      },
                      "configuration_url": {
                        "type": "string"
                      },
                      "enforcement": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a pre-receive hook for an organization",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "org-pre-receive-hooks"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "For pre-receive hooks which are allowed to be configured at the org level, you can set `enforcement` and `allow_downstream_configuration`",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-an-organization"
          },
          "operationId": "enterprise-admin/update-pre-receive-hook-enforcement-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the pre-receive hook.",
              "in": "path",
              "name": "pre_receive_hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "allow_downstream_configuration": false,
                      "enforcement": "enabled"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "allow_downstream_configuration": {
                      "description": "Whether repositories can override enforcement.",
                      "type": "boolean"
                    },
                    "enforcement": {
                      "description": "The state of enforcement for the hook on this repository.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allow_downstream_configuration": false,
                        "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42",
                        "enforcement": "enabled",
                        "id": 42,
                        "name": "Check Commits"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allow_downstream_configuration": {
                        "type": "boolean"
                      },
                      "configuration_url": {
                        "type": "string"
                      },
                      "enforcement": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update pre-receive hook enforcement for an organization",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "org-pre-receive-hooks"
          }
        }
      },
      "/orgs/{org}/settings/billing/advanced-security": {
        "get": {
          "deprecated": null,
          "description": "Gets the GitHub Advanced Security active committers for an organization per repository.\n\nEach distinct user login across all repositories is counted as a single Advanced Security seat, so the `total_advanced_security_committers` is not the sum of advanced_security_committers for each repository.\n\nIf this organization defers to an enterprise for billing, the `total_advanced_security_committers` returned from the organization API may include some users that are in more than one organization, so they will only consume a single Advanced Security seat at the enterprise level.\n\nThe total number of repositories with committer information is tracked by the `total_count` field.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/billing#get-github-advanced-security-active-committers-for-an-organization"
          },
          "operationId": "billing/get-github-advanced-security-billing-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "repositories": [
                          {
                            "advanced_security_committers": 2,
                            "advanced_security_committers_breakdown": [
                              {
                                "last_pushed_date": "2021-11-03",
                                "user_login": "octocat"
                              },
                              {
                                "last_pushed_date": "2021-10-25",
                                "user_login": "octokitten"
                              }
                            ],
                            "name": "octocat-org/Hello-World"
                          },
                          {
                            "advanced_security_committers": 1,
                            "advanced_security_committers_breakdown": [
                              {
                                "last_pushed_date": "2021-10-26",
                                "user_login": "octokitten"
                              }
                            ],
                            "name": "octocat-org/server"
                          }
                        ],
                        "total_advanced_security_committers": 2,
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "repositories": {
                        "items": {
                          "properties": {
                            "advanced_security_committers": {
                              "example": 25,
                              "type": "integer"
                            },
                            "advanced_security_committers_breakdown": {
                              "items": {
                                "properties": {
                                  "last_pushed_date": {
                                    "example": "2021-11-03",
                                    "type": "string"
                                  },
                                  "user_login": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "user_login",
                                  "last_pushed_date"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "example": "octocat/Hello-World",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "advanced_security_committers",
                            "advanced_security_committers_breakdown"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_advanced_security_committers": {
                        "example": 25,
                        "type": "integer"
                      },
                      "total_count": {
                        "example": 2,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "repositories"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Success"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Response if GitHub Advanced Security is not enabled for this repository"
            }
          },
          "summary": "Get GitHub Advanced Security active committers for an organization",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "billing",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": null
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/external-groups": {
        "delete": {
          "deprecated": null,
          "description": "Deletes a connection between a team and an external group.\n\nYou can manage team membership with your IdP using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-server@3.7/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/teams#unlink-external-idp-group-team-connection"
          },
          "operationId": "teams/unlink-external-idp-group-from-team-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove the connection between an external group and a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Lists a connection between a team and an external group.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-server@3.7/github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/teams#list-external-idp-group-team-connection"
          },
          "operationId": "teams/list-linked-external-idp-groups-to-team-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_id": "123",
                            "group_name": "Octocat admins",
                            "updated_at": "2021-01-24T11:31:04-06:00"
                          },
                          {
                            "group_id": "456",
                            "group_name": "Octocat docs members",
                            "updated_at": "2021-03-24T11:31:04-06:00"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "A list of external groups available to be connected to a team",
                    "properties": {
                      "groups": {
                        "description": "An array of external groups available to be mapped to a team",
                        "example": [
                          {
                            "group_id": 1,
                            "group_name": "group-azuread-test",
                            "updated_at": "2021-01-03 22:27:15:000 -700"
                          },
                          {
                            "group_id": 2,
                            "group_name": "group-azuread-test2",
                            "updated_at": "2021-06-03 22:27:15:000 -700"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_id": {
                              "description": "The internal ID of the group",
                              "example": 1,
                              "type": "integer"
                            },
                            "group_name": {
                              "description": "The display name of the group",
                              "example": "group-azuread-test",
                              "type": "string"
                            },
                            "updated_at": {
                              "description": "The time of the last update for this group",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "updated_at"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ExternalGroups",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List a connection between an external group and a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Creates a connection between a team and an external group.  Only one external group can be linked to a team.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-server@3.7/github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/teams#link-external-idp-group-team-connection"
          },
          "operationId": "teams/link-external-idp-group-to-team-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "group_id": 123
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "group_id": {
                      "description": "External Group Id",
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "group_id"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "group_id": "123",
                        "group_name": "Octocat admins",
                        "members": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "teams": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "updated_at": "2021-01-24T11:31:04-06:00"
                      }
                    }
                  },
                  "schema": {
                    "description": "Information about an external group's usage and its members",
                    "properties": {
                      "group_id": {
                        "description": "The internal ID of the group",
                        "example": 1,
                        "type": "integer"
                      },
                      "group_name": {
                        "description": "The display name for the group",
                        "example": "group-azuread-test",
                        "type": "string"
                      },
                      "members": {
                        "description": "An array of external members linked to this group",
                        "example": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "items": {
                          "properties": {
                            "member_email": {
                              "description": "An email attached to a user",
                              "example": "mona_lisa@github.com",
                              "type": "string"
                            },
                            "member_id": {
                              "description": "The internal user ID of the identity",
                              "example": 1,
                              "type": "integer"
                            },
                            "member_login": {
                              "description": "The handle/login for the user",
                              "example": "mona-lisa_eocsaxrs",
                              "type": "string"
                            },
                            "member_name": {
                              "description": "The user display name/profile name",
                              "example": "Mona Lisa",
                              "type": "string"
                            }
                          },
                          "required": [
                            "member_id",
                            "member_login",
                            "member_name",
                            "member_email"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "teams": {
                        "description": "An array of teams linked to this group",
                        "example": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "team_id": {
                              "description": "The id for a team",
                              "example": 1,
                              "type": "integer"
                            },
                            "team_name": {
                              "description": "The name of the team",
                              "example": "team-test",
                              "type": "string"
                            }
                          },
                          "required": [
                            "team_id",
                            "team_name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "description": "The date when the group was last updated_at",
                        "example": "2021-01-03 22:27:15:000 -700",
                        "type": "string"
                      }
                    },
                    "required": [
                      "group_id",
                      "group_name",
                      "teams",
                      "members"
                    ],
                    "title": "ExternalGroup",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update the connection between an external group and a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        }
      },
      "/repos/{owner}/{repo}/actions/cache/usage-policy": {
        "get": {
          "deprecated": null,
          "description": "Gets GitHub Actions cache usage policy for a repository.\nYou must authenticate using an access token with the `repo` scope to use this endpoint.\nGitHub Apps must have the `actions:read` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#get-github-actions-cache-usage-policy-for-a-repository"
          },
          "operationId": "actions/get-actions-cache-usage-policy",
          "parameters": [
            {
              "description": "The account owner of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "repo_cache_size_limit_in_gb": 14
                      }
                    }
                  },
                  "schema": {
                    "description": "GitHub Actions cache usage policy for repository.",
                    "properties": {
                      "repo_cache_size_limit_in_gb": {
                        "description": "The size limit for the sum of all caches, in gigabytes.",
                        "example": 14,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "repo_cache_size_limit_in_gb"
                    ],
                    "title": "Actions cache usage policy for repository",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get GitHub Actions cache usage policy for a repository",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "cache"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Sets GitHub Actions cache usage policy for a repository.\nYou must authenticate using an access token with the `repo` scope to use this endpoint.\nGitHub Apps must have the `actions:write` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/actions#set-github-actions-cache-usage-policy-for-a-repository"
          },
          "operationId": "actions/set-actions-cache-usage-policy",
          "parameters": [
            {
              "description": "The account owner of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "selected_actions": {
                    "value": {
                      "repo_cache_size_limit_in_gb": 14
                    }
                  }
                },
                "schema": {
                  "description": "GitHub Actions cache usage policy for repository.",
                  "properties": {
                    "repo_cache_size_limit_in_gb": {
                      "description": "The size limit for the sum of all caches, in gigabytes.",
                      "example": 14,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "repo_cache_size_limit_in_gb"
                  ],
                  "title": "Actions cache usage policy for repository",
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set GitHub Actions cache usage policy for a repository",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "cache"
          }
        }
      },
      "/repos/{owner}/{repo}/pre-receive-hooks": {
        "get": {
          "deprecated": null,
          "description": "List all pre-receive hooks that are enabled or testing for this repository as well as any disabled hooks that are allowed to be enabled at the repository level. Pre-receive hooks that are disabled at a higher level and are not configurable will not be listed.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#list-pre-receive-hooks-for-a-repository"
          },
          "operationId": "enterprise-admin/list-pre-receive-hooks-for-repo",
          "parameters": [
            {
              "description": "The account owner of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The direction to sort the results by.",
              "in": "query",
              "name": "direction",
              "required": false,
              "schema": {
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "default": "created",
                "enum": [
                  "created",
                  "updated",
                  "name"
                ],
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42",
                          "enforcement": "disabled",
                          "id": 42,
                          "name": "Check Commits"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "configuration_url": {
                          "type": "string"
                        },
                        "enforcement": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List pre-receive hooks for a repository",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "repo-pre-receive-hooks"
          }
        }
      },
      "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}": {
        "delete": {
          "deprecated": null,
          "description": "Deletes any overridden enforcement on this repository for the specified hook.\n\nResponds with effective values inherited from owner and/or global level.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-a-repository"
          },
          "operationId": "enterprise-admin/remove-pre-receive-hook-enforcement-for-repo",
          "parameters": [
            {
              "description": "The account owner of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the pre-receive hook.",
              "in": "path",
              "name": "pre_receive_hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42",
                        "enforcement": "disabled",
                        "id": 42,
                        "name": "Check Commits"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "configuration_url": {
                        "type": "string"
                      },
                      "enforcement": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Responds with effective values inherited from owner and/or global level."
            }
          },
          "summary": "Remove pre-receive hook enforcement for a repository",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "repo-pre-receive-hooks"
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-a-repository"
          },
          "operationId": "enterprise-admin/get-pre-receive-hook-for-repo",
          "parameters": [
            {
              "description": "The account owner of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the pre-receive hook.",
              "in": "path",
              "name": "pre_receive_hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42",
                        "enforcement": "disabled",
                        "id": 42,
                        "name": "Check Commits"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "configuration_url": {
                        "type": "string"
                      },
                      "enforcement": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a pre-receive hook for a repository",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "repo-pre-receive-hooks"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "For pre-receive hooks which are allowed to be configured at the repo level, you can set `enforcement`",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-a-repository"
          },
          "operationId": "enterprise-admin/update-pre-receive-hook-enforcement-for-repo",
          "parameters": [
            {
              "description": "The account owner of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the pre-receive hook.",
              "in": "path",
              "name": "pre_receive_hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "enforcement": "enabled"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "enforcement": {
                      "description": "The state of enforcement for the hook on this repository.",
                      "enum": [
                        "enabled",
                        "disabled",
                        "testing"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "configuration_url": "https://github.example.com/api/v3/repos/octocat/hello-world/pre-receive-hooks/42",
                        "enforcement": "enabled",
                        "id": 42,
                        "name": "Check Commits"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "configuration_url": {
                        "type": "string"
                      },
                      "enforcement": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update pre-receive hook enforcement for a repository",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "repo-pre-receive-hooks"
          }
        }
      },
      "/repos/{owner}/{repo}/replicas/caches": {
        "get": {
          "deprecated": null,
          "description": "Lists the status of each repository cache replica.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/repos#list-repository-cache-replication-status"
          },
          "operationId": "repos/list-cache-info",
          "parameters": [
            {
              "description": "The account owner of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "git": [
                            {
                              "sync_status": "in_sync"
                            },
                            {
                              "last_sync": "2022-01-10T19:33:52Z"
                            }
                          ],
                          "host": "host-1",
                          "location": "berlin"
                        },
                        {
                          "git": [
                            {
                              "sync_status": "offline"
                            },
                            {
                              "last_sync": "2022-01-10T19:34:12Z"
                            }
                          ],
                          "host": "host-2",
                          "location": "chicago"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "Status for a cache replica",
                      "properties": {
                        "git": {
                          "properties": {
                            "last_sync": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "sync_status": {
                              "enum": [
                                "offline",
                                "inactive",
                                "in_sync",
                                "not_in_sync"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "sync_status",
                            "last_sync"
                          ],
                          "type": "object"
                        },
                        "host": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "host",
                        "location",
                        "git"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Status information for cache replicas",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "List repository cache replication status",
          "tags": [
            "repos"
          ],
          "x-github": {
            "category": "repos",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": null
          }
        }
      },
      "/scim/v2/Groups": {
        "get": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nLists provisioned SCIM groups in an enterprise.\n\nYou can improve query search time by using the `excludedAttributes` query parameter with a value of `members` to exclude members from the response.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#list-provisioned-scim-groups-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-provisioned-groups-enterprise",
          "parameters": [
            {
              "allowReserved": null,
              "description": "If specified, only results that match the specified filter will be returned. Multiple filters are not supported. Possible filters are `externalId`, `id`, and `displayName`. For example, `?filter=\"externalId eq '9138790-10932-109120392-12321'\"`.",
              "examples": {
                "displayName": {
                  "value": "Engineering"
                },
                "externalId": {
                  "value": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159"
                }
              },
              "in": "query",
              "name": "filter",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Excludes the specified attribute from being returned in the results. Using this parameter can speed up response time.",
              "in": "query",
              "name": "excludedAttributes",
              "required": false,
              "schema": {
                "example": "members",
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Used for pagination: the starting index of the first result to return when paginating through values.",
              "in": "query",
              "name": "startIndex",
              "required": false,
              "schema": {
                "default": 1,
                "example": 1,
                "format": "int32",
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Used for pagination: the number of results to return per page.",
              "in": "query",
              "name": "count",
              "required": false,
              "schema": {
                "default": 30,
                "example": 1,
                "format": "int32",
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "Resources": [
                          {
                            "displayName": "Engineering",
                            "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                            "id": "927fa2c08dcb4a7fae9e",
                            "members": [
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                                "displayName": "User 1",
                                "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                              },
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                                "displayName": "User 2",
                                "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                              }
                            ],
                            "meta": {
                              "created": "2012-03-27T19:59:26.000Z",
                              "lastModified": "2018-03-27T19:59:26.000Z",
                              "location": "https://api.github.localhost/scim/v2/Groups/927fa2c08dcb4a7fae9e",
                              "resourceType": "Group"
                            },
                            "schemas": [
                              "urn:ietf:params:scim:schemas:core:2.0:Group"
                            ]
                          }
                        ],
                        "itemsPerPage": 20,
                        "schemas": [
                          "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ],
                        "startIndex": 1,
                        "totalResults": 1
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "Resources": {
                        "description": "Information about each provisioned group.",
                        "items": {
                          "allOf": [
                            {
                              "properties": {
                                "displayName": {
                                  "description": "A human-readable name for a security group.",
                                  "example": "Engineering",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "externalId": {
                                  "description": "A unique identifier for the resource as defined by the provisioning client.",
                                  "example": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "members": {
                                  "description": "The group members.",
                                  "items": {
                                    "properties": {
                                      "$ref": {
                                        "type": "string"
                                      },
                                      "display": {
                                        "description": "The display name associated with the member",
                                        "example": "Monalisa Octocat",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The local unique identifier for the member",
                                        "example": "23a35c27-23d3-4c03-b4c5-6443c09e7173",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "value",
                                      "$ref"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "schemas": {
                                  "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                                  "example": [
                                    "urn:ietf:params:scim:schemas:core:2.0:Group"
                                  ],
                                  "items": {
                                    "enum": [
                                      "urn:ietf:params:scim:schemas:core:2.0:Group",
                                      "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                                    ],
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "schemas"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "id": {
                                  "description": "The internally generated id for the group object.",
                                  "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                                  "type": "string"
                                },
                                "members": {
                                  "description": "The security group members.",
                                  "example": [
                                    {
                                      "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                                      "displayName": "User 1",
                                      "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                                    },
                                    {
                                      "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                                      "displayName": "User 2",
                                      "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "meta": {
                                  "description": "The metadata associated with the creation/updates to the user.",
                                  "properties": {
                                    "created": {
                                      "description": "A date and time when the user was created.",
                                      "example": "2022-03-27T19:59:26.000Z",
                                      "type": "string"
                                    },
                                    "lastModified": {
                                      "description": "A data and time when the user was last modified.",
                                      "example": "2022-03-27T19:59:26.000Z",
                                      "type": "string"
                                    },
                                    "location": {
                                      "description": "A URL location of an object",
                                      "type": "string"
                                    },
                                    "resourceType": {
                                      "description": "A type of a resource",
                                      "enum": [
                                        "User",
                                        "Group"
                                      ],
                                      "example": "User",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "resourceType"
                                  ],
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "itemsPerPage": {
                        "description": "Number of objects per page",
                        "example": 20,
                        "type": "integer"
                      },
                      "schemas": {
                        "description": "The URIs that are used to indicate the namespaces of the list SCIM schemas.",
                        "example": [
                          "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ],
                        "items": {
                          "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "startIndex": {
                        "description": "A starting index for the returned page",
                        "example": 1,
                        "type": "integer"
                      },
                      "totalResults": {
                        "description": "Number of results found",
                        "example": 1,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "schemas",
                      "totalResults",
                      "Resources",
                      "startIndex",
                      "itemsPerPage"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Success, either groups were found or not found"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "List provisioned SCIM groups for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        },
        "post": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nCreates a SCIM group for an enterprise.\n\nIf members are included as part of the group provisioning payload, they will be created as external group members. It is up to a provider to store a mapping between the `externalId` and `id` of each user.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#provision-a-scim-enterprise-group"
          },
          "operationId": "enterprise-admin/provision-enterprise-group",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "group": {
                    "value": {
                      "displayName": "Engineering",
                      "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:Group"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "displayName": {
                      "description": "A human-readable name for a security group.",
                      "example": "Engineering",
                      "type": "string"
                    },
                    "externalId": {
                      "description": "A unique identifier for the resource as defined by the provisioning client.",
                      "example": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                      "type": "string"
                    },
                    "members": {
                      "description": "The group members.",
                      "items": {
                        "properties": {
                          "displayName": {
                            "description": "The display name associated with the member",
                            "example": "Monalisa Octocat",
                            "type": "string"
                          },
                          "value": {
                            "description": "The local unique identifier for the member",
                            "example": "23a35c27-23d3-4c03-b4c5-6443c09e7173",
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "displayName"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "schemas": {
                      "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                      "example": [
                        "urn:ietf:params:scim:schemas:core:2.0:Group"
                      ],
                      "items": {
                        "enum": [
                          "urn:ietf:params:scim:schemas:core:2.0:Group"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "schemas",
                    "externalId",
                    "displayName",
                    "members"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "group": {
                      "value": {
                        "displayName": "Engineering",
                        "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                        "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                        "members": [
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                            "displayName": "User 1",
                            "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                          },
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                            "displayName": "User 2",
                            "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                          }
                        ],
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Groups/927fa2c08dcb4a7fae9e",
                          "resourceType": "Group"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:Group"
                        ]
                      }
                    }
                  },
                  "schema": {
                    "allOf": [
                      {
                        "properties": {
                          "displayName": {
                            "description": "A human-readable name for a security group.",
                            "example": "Engineering",
                            "nullable": true,
                            "type": "string"
                          },
                          "externalId": {
                            "description": "A unique identifier for the resource as defined by the provisioning client.",
                            "example": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                            "nullable": true,
                            "type": "string"
                          },
                          "members": {
                            "description": "The group members.",
                            "items": {
                              "properties": {
                                "$ref": {
                                  "type": "string"
                                },
                                "display": {
                                  "description": "The display name associated with the member",
                                  "example": "Monalisa Octocat",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The local unique identifier for the member",
                                  "example": "23a35c27-23d3-4c03-b4c5-6443c09e7173",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "$ref"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "schemas": {
                            "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                            "example": [
                              "urn:ietf:params:scim:schemas:core:2.0:Group"
                            ],
                            "items": {
                              "enum": [
                                "urn:ietf:params:scim:schemas:core:2.0:Group",
                                "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "schemas"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "id": {
                            "description": "The internally generated id for the group object.",
                            "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                            "type": "string"
                          },
                          "members": {
                            "description": "The security group members.",
                            "example": [
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                                "displayName": "User 1",
                                "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                              },
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                                "displayName": "User 2",
                                "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                              }
                            ],
                            "type": "array"
                          },
                          "meta": {
                            "description": "The metadata associated with the creation/updates to the user.",
                            "properties": {
                              "created": {
                                "description": "A date and time when the user was created.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "lastModified": {
                                "description": "A data and time when the user was last modified.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "location": {
                                "description": "A URL location of an object",
                                "type": "string"
                              },
                              "resourceType": {
                                "description": "A type of a resource",
                                "enum": [
                                  "User",
                                  "Group"
                                ],
                                "example": "User",
                                "type": "string"
                              }
                            },
                            "required": [
                              "resourceType"
                            ],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "description": "Group has been created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "409": {
              "description": "Duplicate record detected"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Provision a SCIM enterprise group",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        }
      },
      "/scim/v2/Groups/{scim_group_id}": {
        "delete": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\n Deletes a SCIM group from an enterprise.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#delete-a-scim-group-from-an-enterprise"
          },
          "operationId": "enterprise-admin/delete-scim-group-from-enterprise",
          "parameters": [
            {
              "description": "A unique identifier of the SCIM group.",
              "in": "path",
              "name": "scim_group_id",
              "required": true,
              "schema": {
                "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Group was deleted, no content"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Delete a SCIM group from an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        },
        "get": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nGets information about a SCIM group.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-scim-provisioning-information-for-an-enterprise-group"
          },
          "operationId": "enterprise-admin/get-provisioning-information-for-enterprise-group",
          "parameters": [
            {
              "description": "A unique identifier of the SCIM group.",
              "in": "path",
              "name": "scim_group_id",
              "required": true,
              "schema": {
                "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "Excludes the specified attribute from being returned in the results. Using this parameter can speed up response time.",
              "in": "query",
              "name": "excludedAttributes",
              "required": false,
              "schema": {
                "example": "members",
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "displayName": "Engineering",
                        "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                        "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                        "members": [
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                            "displayName": "User 1",
                            "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                          },
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                            "displayName": "User 2",
                            "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                          }
                        ],
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Groups/927fa2c08dcb4a7fae9e",
                          "resourceType": "Group"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:Group"
                        ]
                      }
                    }
                  },
                  "schema": {
                    "allOf": [
                      {
                        "properties": {
                          "displayName": {
                            "description": "A human-readable name for a security group.",
                            "example": "Engineering",
                            "nullable": true,
                            "type": "string"
                          },
                          "externalId": {
                            "description": "A unique identifier for the resource as defined by the provisioning client.",
                            "example": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                            "nullable": true,
                            "type": "string"
                          },
                          "members": {
                            "description": "The group members.",
                            "items": {
                              "properties": {
                                "$ref": {
                                  "type": "string"
                                },
                                "display": {
                                  "description": "The display name associated with the member",
                                  "example": "Monalisa Octocat",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The local unique identifier for the member",
                                  "example": "23a35c27-23d3-4c03-b4c5-6443c09e7173",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "$ref"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "schemas": {
                            "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                            "example": [
                              "urn:ietf:params:scim:schemas:core:2.0:Group"
                            ],
                            "items": {
                              "enum": [
                                "urn:ietf:params:scim:schemas:core:2.0:Group",
                                "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "schemas"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "id": {
                            "description": "The internally generated id for the group object.",
                            "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                            "type": "string"
                          },
                          "members": {
                            "description": "The security group members.",
                            "example": [
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                                "displayName": "User 1",
                                "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                              },
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                                "displayName": "User 2",
                                "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                              }
                            ],
                            "type": "array"
                          },
                          "meta": {
                            "description": "The metadata associated with the creation/updates to the user.",
                            "properties": {
                              "created": {
                                "description": "A date and time when the user was created.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "lastModified": {
                                "description": "A data and time when the user was last modified.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "location": {
                                "description": "A URL location of an object",
                                "type": "string"
                              },
                              "resourceType": {
                                "description": "A type of a resource",
                                "enum": [
                                  "User",
                                  "Group"
                                ],
                                "example": "User",
                                "type": "string"
                              }
                            },
                            "required": [
                              "resourceType"
                            ],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "description": "Success, a group was found"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Get SCIM provisioning information for an enterprise group",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nUpdate a provisioned group’s individual attributes.\n\nTo change a group’s values, you must provide a specific Operations JSON format that contains at least one of the add, remove, or replace operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).  Update can also be used to add group memberships.\n\nGroup memberships can be sent one at a time or in batches for faster performance. **Note**: The memberships are referenced through a local user `id`, and the user will need to be created before they are referenced here.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-an-attribute-for-a-scim-enterprise-group"
          },
          "operationId": "enterprise-admin/update-attribute-for-enterprise-group",
          "parameters": [
            {
              "description": "A unique identifier of the SCIM group.",
              "in": "path",
              "name": "scim_group_id",
              "required": true,
              "schema": {
                "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "addMembers": {
                    "summary": "Add Members",
                    "value": {
                      "Operations": [
                        {
                          "op": "add",
                          "path": "members",
                          "value": [
                            {
                              "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                            },
                            {
                              "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                            }
                          ]
                        }
                      ],
                      "schemas": [
                        "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                      ]
                    }
                  },
                  "updateGroup": {
                    "summary": "Update Group",
                    "value": {
                      "Operations": [
                        {
                          "op": "replace",
                          "path": "displayName",
                          "value": "Employees"
                        }
                      ],
                      "schemas": [
                        "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "Operations": {
                      "description": "patch operations list",
                      "items": {
                        "properties": {
                          "op": {
                            "enum": [
                              "add",
                              "replace",
                              "remove"
                            ],
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "value": {
                            "description": "Corresponding 'value' of that field specified by 'path'",
                            "type": "string"
                          }
                        },
                        "required": [
                          "op"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "schemas": {
                      "items": {
                        "enum": [
                          "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "Operations",
                    "schemas"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "addMembers": {
                      "value": {
                        "displayName": "Engineering",
                        "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                        "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                        "members": [
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                            "displayName": "User 1",
                            "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                          },
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                            "displayName": "User 2",
                            "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                          }
                        ],
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Groups/927fa2c08dcb4a7fae9e",
                          "resourceType": "Group"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:Group"
                        ]
                      }
                    },
                    "updateGroup": {
                      "value": {
                        "displayName": "Engineering",
                        "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                        "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                        "members": [
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                            "displayName": "User 1",
                            "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                          },
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                            "displayName": "User 2",
                            "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                          }
                        ],
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Groups/927fa2c08dcb4a7fae9e",
                          "resourceType": "Group"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:Group"
                        ]
                      }
                    }
                  },
                  "schema": {
                    "allOf": [
                      {
                        "properties": {
                          "displayName": {
                            "description": "A human-readable name for a security group.",
                            "example": "Engineering",
                            "nullable": true,
                            "type": "string"
                          },
                          "externalId": {
                            "description": "A unique identifier for the resource as defined by the provisioning client.",
                            "example": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                            "nullable": true,
                            "type": "string"
                          },
                          "members": {
                            "description": "The group members.",
                            "items": {
                              "properties": {
                                "$ref": {
                                  "type": "string"
                                },
                                "display": {
                                  "description": "The display name associated with the member",
                                  "example": "Monalisa Octocat",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The local unique identifier for the member",
                                  "example": "23a35c27-23d3-4c03-b4c5-6443c09e7173",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "$ref"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "schemas": {
                            "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                            "example": [
                              "urn:ietf:params:scim:schemas:core:2.0:Group"
                            ],
                            "items": {
                              "enum": [
                                "urn:ietf:params:scim:schemas:core:2.0:Group",
                                "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "schemas"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "id": {
                            "description": "The internally generated id for the group object.",
                            "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                            "type": "string"
                          },
                          "members": {
                            "description": "The security group members.",
                            "example": [
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                                "displayName": "User 1",
                                "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                              },
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                                "displayName": "User 2",
                                "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                              }
                            ],
                            "type": "array"
                          },
                          "meta": {
                            "description": "The metadata associated with the creation/updates to the user.",
                            "properties": {
                              "created": {
                                "description": "A date and time when the user was created.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "lastModified": {
                                "description": "A data and time when the user was last modified.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "location": {
                                "description": "A URL location of an object",
                                "type": "string"
                              },
                              "resourceType": {
                                "description": "A type of a resource",
                                "enum": [
                                  "User",
                                  "Group"
                                ],
                                "example": "User",
                                "type": "string"
                              }
                            },
                            "required": [
                              "resourceType"
                            ],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "description": "Success, group was updated"
            },
            "204": {
              "description": "Response"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "409": {
              "description": "Duplicate record detected"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Update an attribute for a SCIM enterprise group",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        },
        "put": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nReplaces an existing provisioned group’s information.\n\nYou must provide all the information required for the group as if you were provisioning it for the first time. Any existing group information that you don't provide will be removed, including group membership. If you want to only update a specific attribute, use the [Update an attribute for a SCIM enterprise group](#update-an-attribute-for-a-scim-enterprise-group) endpoint instead.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#set-scim-information-for-a-provisioned-enterprise-group"
          },
          "operationId": "enterprise-admin/set-information-for-provisioned-enterprise-group",
          "parameters": [
            {
              "description": "A unique identifier of the SCIM group.",
              "in": "path",
              "name": "scim_group_id",
              "required": true,
              "schema": {
                "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "group": {
                    "summary": "Group",
                    "value": {
                      "displayName": "Engineering",
                      "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:Group"
                      ]
                    }
                  },
                  "groupWithMembers": {
                    "summary": "Group with member",
                    "value": {
                      "displayName": "Engineering",
                      "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                      "members": [
                        {
                          "displayName": "User 1",
                          "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                        },
                        {
                          "displayName": "User 2",
                          "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                        }
                      ],
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:Group"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "displayName": {
                      "description": "A human-readable name for a security group.",
                      "example": "Engineering",
                      "type": "string"
                    },
                    "externalId": {
                      "description": "A unique identifier for the resource as defined by the provisioning client.",
                      "example": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                      "type": "string"
                    },
                    "members": {
                      "description": "The group members.",
                      "items": {
                        "properties": {
                          "displayName": {
                            "description": "The display name associated with the member",
                            "example": "Monalisa Octocat",
                            "type": "string"
                          },
                          "value": {
                            "description": "The local unique identifier for the member",
                            "example": "23a35c27-23d3-4c03-b4c5-6443c09e7173",
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "displayName"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "schemas": {
                      "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                      "example": [
                        "urn:ietf:params:scim:schemas:core:2.0:Group"
                      ],
                      "items": {
                        "enum": [
                          "urn:ietf:params:scim:schemas:core:2.0:Group"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "schemas",
                    "externalId",
                    "displayName",
                    "members"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "group": {
                      "value": {
                        "displayName": "Engineering",
                        "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                        "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                        "members": [
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                            "displayName": "User 1",
                            "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                          },
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                            "displayName": "User 2",
                            "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                          }
                        ],
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Groups/927fa2c08dcb4a7fae9e",
                          "resourceType": "Group"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:Group"
                        ]
                      }
                    },
                    "groupWithMembers": {
                      "value": {
                        "displayName": "Engineering",
                        "externalId": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                        "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                        "members": [
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                            "displayName": "User 1",
                            "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                          },
                          {
                            "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                            "displayName": "User 2",
                            "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                          }
                        ],
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Groups/927fa2c08dcb4a7fae9e",
                          "resourceType": "Group"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:Group"
                        ]
                      }
                    }
                  },
                  "schema": {
                    "allOf": [
                      {
                        "properties": {
                          "displayName": {
                            "description": "A human-readable name for a security group.",
                            "example": "Engineering",
                            "nullable": true,
                            "type": "string"
                          },
                          "externalId": {
                            "description": "A unique identifier for the resource as defined by the provisioning client.",
                            "example": "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
                            "nullable": true,
                            "type": "string"
                          },
                          "members": {
                            "description": "The group members.",
                            "items": {
                              "properties": {
                                "$ref": {
                                  "type": "string"
                                },
                                "display": {
                                  "description": "The display name associated with the member",
                                  "example": "Monalisa Octocat",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The local unique identifier for the member",
                                  "example": "23a35c27-23d3-4c03-b4c5-6443c09e7173",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "$ref"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "schemas": {
                            "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                            "example": [
                              "urn:ietf:params:scim:schemas:core:2.0:Group"
                            ],
                            "items": {
                              "enum": [
                                "urn:ietf:params:scim:schemas:core:2.0:Group",
                                "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "schemas"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "id": {
                            "description": "The internally generated id for the group object.",
                            "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                            "type": "string"
                          },
                          "members": {
                            "description": "The security group members.",
                            "example": [
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/879db59-3bdf-4490-ad68-ab880a2694745",
                                "displayName": "User 1",
                                "value": "879db59-3bdf-4490-ad68-ab880a2694745"
                              },
                              {
                                "$+ref": "https://api.github.localhost/scim/v2/Users/0db508eb-91e2-46e4-809c-30dcbda0c685",
                                "displayName": "User 2",
                                "value": "0db508eb-91e2-46e4-809c-30dcbda0c685"
                              }
                            ],
                            "type": "array"
                          },
                          "meta": {
                            "description": "The metadata associated with the creation/updates to the user.",
                            "properties": {
                              "created": {
                                "description": "A date and time when the user was created.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "lastModified": {
                                "description": "A data and time when the user was last modified.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "location": {
                                "description": "A URL location of an object",
                                "type": "string"
                              },
                              "resourceType": {
                                "description": "A type of a resource",
                                "enum": [
                                  "User",
                                  "Group"
                                ],
                                "example": "User",
                                "type": "string"
                              }
                            },
                            "required": [
                              "resourceType"
                            ],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "description": "Group was updated"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "409": {
              "description": "Duplicate record detected"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Set SCIM information for a provisioned enterprise group",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        }
      },
      "/scim/v2/Users": {
        "get": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nLists provisioned SCIM enterprise members.\n\nWhen a user with a SCIM-provisioned external identity is removed from an enterprise through a `patch` with `active` flag set to `false`, the account's metadata is preserved to allow the user to re-join the enterprise in the future. However, the user's account will be suspended and the user will not be able to sign-in. In order to permanently suspend the users account with no ability to re-join the enterprise in the future, use the `delete` request. Users that were not permanently deleted will be visible in the returned results.\n\nYou can improve query search time by using the `excludedAttributes` query parameter with a value of `groups` to exclude groups from the response.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#list-scim-provisioned-identities-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-provisioned-identities-enterprise",
          "parameters": [
            {
              "allowReserved": null,
              "description": "If specified, only results that match the specified filter will be returned. Multiple filters are not supported. Possible filters are `userName`, `externalId`, `id`, and `displayName`. For example, `?filter=\"externalId eq '9138790-10932-109120392-12321'\"`.",
              "examples": {
                "externalId": {
                  "value": "externalId eq 'E012345'"
                },
                "userName": {
                  "value": "userName eq 'E012345'"
                }
              },
              "in": "query",
              "name": "filter",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Excludes the specified attribute from being returned in the results. Using this parameter can speed up response time.",
              "in": "query",
              "name": "excludedAttributes",
              "required": false,
              "schema": {
                "example": "members",
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Used for pagination: the starting index of the first result to return when paginating through values.",
              "in": "query",
              "name": "startIndex",
              "required": false,
              "schema": {
                "default": 1,
                "example": 1,
                "format": "int32",
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Used for pagination: the number of results to return per page.",
              "in": "query",
              "name": "count",
              "required": false,
              "schema": {
                "default": 30,
                "example": 1,
                "format": "int32",
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "Resources": [
                          {
                            "active": true,
                            "displayName": "Mona Lisa",
                            "emails": [
                              {
                                "primary": true,
                                "type": "work",
                                "value": "mlisa@example.com"
                              }
                            ],
                            "externalId": "E012345",
                            "id": "7fce0092-d52e-4f76-b727-3955bd72c939",
                            "name": {
                              "familyName": "Octocat",
                              "formatted": "Ms. Mona Lisa Octocat",
                              "givenName": "Mona",
                              "middleName": "Lisa"
                            },
                            "roles": [
                              {
                                "primary": false,
                                "value": "User"
                              }
                            ],
                            "schemas": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "userName": "E012345"
                          }
                        ],
                        "itemsPerPage": 20,
                        "schemas": [
                          "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ],
                        "startIndex": 1,
                        "totalResults": 1
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "Resources": {
                        "description": "Information about each provisioned account.",
                        "items": {
                          "allOf": [
                            {
                              "properties": {
                                "active": {
                                  "description": "Whether the user active in the IdP.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "displayName": {
                                  "description": "A human-readable name for the user.",
                                  "example": "Mona Lisa",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "emails": {
                                  "description": "The emails for the user.",
                                  "items": {
                                    "properties": {
                                      "primary": {
                                        "description": "Whether this email address is the primary address.",
                                        "example": true,
                                        "type": "boolean"
                                      },
                                      "type": {
                                        "description": "The type of email address.",
                                        "example": "work",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The email address.",
                                        "example": "mlisa@example.com",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "externalId": {
                                  "description": "A unique identifier for the resource as defined by the provisioning client.",
                                  "example": "E012345",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "name": {
                                  "properties": {
                                    "familyName": {
                                      "description": "The family name of the user.",
                                      "example": "Octocat",
                                      "type": "string"
                                    },
                                    "formatted": {
                                      "description": "The full name, including all middle names, titles, and suffixes as appropriate, formatted for display.",
                                      "example": "Ms. Mona Lisa Octocat",
                                      "type": "string"
                                    },
                                    "givenName": {
                                      "description": "The given name of the user.",
                                      "example": "Mona",
                                      "type": "string"
                                    },
                                    "middleName": {
                                      "description": "The middle name(s) of the user.",
                                      "example": "Lisa",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "roles": {
                                  "description": "The roles assigned to the user.",
                                  "items": {
                                    "properties": {
                                      "display": {
                                        "type": "string"
                                      },
                                      "primary": {
                                        "description": "Is the role a primary role for the user.",
                                        "example": false,
                                        "type": "boolean"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The role value representing a user role in GitHub.",
                                        "enum": [
                                          "User",
                                          "user",
                                          "27d9891d-2c17-4f45-a262-781a0e55c80a",
                                          "Restricted User",
                                          "restricted_user",
                                          "1ebc4a02-e56c-43a6-92a5-02ee09b90824",
                                          "Enterprise Owner",
                                          "enterprise_owner",
                                          "981df190-8801-4618-a08a-d91f6206c954",
                                          "ba4987ab-a1c3-412a-b58c-360fc407cb10",
                                          "Billing Manager",
                                          "billing_manager",
                                          "0e338b8c-cc7f-498a-928d-ea3470d7e7e3",
                                          "e6be2762-e4ad-4108-b72d-1bbe884a0f91"
                                        ],
                                        "example": "user",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "value"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "schemas": {
                                  "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                                  "example": [
                                    "urn:ietf:params:scim:schemas:core:2.0:User"
                                  ],
                                  "items": {
                                    "enum": [
                                      "urn:ietf:params:scim:schemas:core:2.0:User"
                                    ],
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "userName": {
                                  "description": "The username for the user.",
                                  "example": "E012345",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "schemas",
                                "active",
                                "emails"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "groups": {
                                  "description": "Provisioned SCIM groups that the user is a member of.",
                                  "type": "array"
                                },
                                "id": {
                                  "description": "The internally generated id for the user object.",
                                  "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                                  "type": "string"
                                },
                                "meta": {
                                  "description": "The metadata associated with the creation/updates to the user.",
                                  "properties": {
                                    "created": {
                                      "description": "A date and time when the user was created.",
                                      "example": "2022-03-27T19:59:26.000Z",
                                      "type": "string"
                                    },
                                    "lastModified": {
                                      "description": "A data and time when the user was last modified.",
                                      "example": "2022-03-27T19:59:26.000Z",
                                      "type": "string"
                                    },
                                    "location": {
                                      "description": "A URL location of an object",
                                      "type": "string"
                                    },
                                    "resourceType": {
                                      "description": "A type of a resource",
                                      "enum": [
                                        "User",
                                        "Group"
                                      ],
                                      "example": "User",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "resourceType"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "id",
                                "meta"
                              ],
                              "type": "object"
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "itemsPerPage": {
                        "description": "Number of objects per page",
                        "example": 20,
                        "type": "integer"
                      },
                      "schemas": {
                        "description": "The URIs that are used to indicate the namespaces of the list SCIM schemas.",
                        "example": [
                          "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ],
                        "items": {
                          "enum": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "startIndex": {
                        "description": "A starting index for the returned page",
                        "example": 1,
                        "type": "integer"
                      },
                      "totalResults": {
                        "description": "Number of results found",
                        "example": 1,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "schemas",
                      "totalResults",
                      "Resources",
                      "startIndex",
                      "itemsPerPage"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Success, either users were found or not found"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "List SCIM provisioned identities for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        },
        "post": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nCreates an external identity for a new SCIM enterprise user.\n\nSCIM does not authenticate users, it only provisions them. The authentication of users is done by SAML. However, when SCIM is enabled, all users need to be provisioned through SCIM before a user can sign in through SAML. The matching of a user to a SCIM provisioned user is done when the SAML assertion is consumed. The user will be matched on SAML response `NameID` to SCIM `userName`.\n\nWhen converting existing enterprise to use SCIM, the user handle (`userName`) from the SCIM payload will be used to match the provisioned user to an already existing user in the enterprise. Since the new identity record is created for newly provisioned users the matching for those records is done using a user's handle. Currently the matching will be performed to all of the users no matter if they were SAML JIT provisioned or created as local users.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#provision-a-scim-enterprise-user"
          },
          "operationId": "enterprise-admin/provision-enterprise-user",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "enterpriseOwner": {
                    "summary": "Enterprise Owner",
                    "value": {
                      "active": true,
                      "displayName": "Mona Lisa",
                      "emails": [
                        {
                          "primary": true,
                          "type": "work",
                          "value": "mlisa@example.com"
                        }
                      ],
                      "externalId": "E012345",
                      "name": {
                        "familyName": "Octocat",
                        "formatted": "Ms. Mona Lisa Octocat",
                        "givenName": "Mona",
                        "middleName": "Lisa"
                      },
                      "roles": [
                        {
                          "primary": false,
                          "value": "Enterprise Owner"
                        }
                      ],
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                      ],
                      "userName": "E012345"
                    }
                  },
                  "user": {
                    "summary": "User",
                    "value": {
                      "active": true,
                      "displayName": "Mona Lisa",
                      "emails": [
                        {
                          "primary": true,
                          "type": "work",
                          "value": "mlisa@example.com"
                        }
                      ],
                      "externalId": "E012345",
                      "name": {
                        "familyName": "Octocat",
                        "formatted": "Ms. Mona Lisa Octocat",
                        "givenName": "Mona",
                        "middleName": "Lisa"
                      },
                      "roles": [
                        {
                          "primary": false,
                          "value": "User"
                        }
                      ],
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                      ],
                      "userName": "E012345"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "active": {
                      "description": "Whether the user active in the IdP.",
                      "example": true,
                      "type": "boolean"
                    },
                    "displayName": {
                      "description": "A human-readable name for the user.",
                      "example": "Mona Lisa",
                      "type": "string"
                    },
                    "emails": {
                      "description": "The emails for the user.",
                      "items": {
                        "properties": {
                          "primary": {
                            "description": "Whether this email address is the primary address.",
                            "example": true,
                            "type": "boolean"
                          },
                          "type": {
                            "description": "The type of email address.",
                            "example": "work",
                            "type": "string"
                          },
                          "value": {
                            "description": "The email address.",
                            "example": "mlisa@example.com",
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "type",
                          "primary"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "externalId": {
                      "description": "A unique identifier for the resource as defined by the provisioning client.",
                      "example": "E012345",
                      "type": "string"
                    },
                    "name": {
                      "properties": {
                        "familyName": {
                          "description": "The family name of the user.",
                          "example": "Octocat",
                          "type": "string"
                        },
                        "formatted": {
                          "description": "The full name, including all middle names, titles, and suffixes as appropriate, formatted for display.",
                          "example": "Ms. Mona Lisa Octocat",
                          "type": "string"
                        },
                        "givenName": {
                          "description": "The given name of the user.",
                          "example": "Mona",
                          "type": "string"
                        },
                        "middleName": {
                          "description": "The middle name(s) of the user.",
                          "example": "Lisa",
                          "type": "string"
                        }
                      },
                      "required": [
                        "familyName",
                        "givenName"
                      ],
                      "type": "object"
                    },
                    "roles": {
                      "description": "The roles assigned to the user.",
                      "items": {
                        "properties": {
                          "display": {
                            "type": "string"
                          },
                          "primary": {
                            "description": "Is the role a primary role for the user.",
                            "example": false,
                            "type": "boolean"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "description": "The role value representing a user role in GitHub.",
                            "enum": [
                              "User",
                              "user",
                              "27d9891d-2c17-4f45-a262-781a0e55c80a",
                              "Restricted User",
                              "restricted_user",
                              "1ebc4a02-e56c-43a6-92a5-02ee09b90824",
                              "Enterprise Owner",
                              "enterprise_owner",
                              "981df190-8801-4618-a08a-d91f6206c954",
                              "ba4987ab-a1c3-412a-b58c-360fc407cb10",
                              "Billing Manager",
                              "billing_manager",
                              "0e338b8c-cc7f-498a-928d-ea3470d7e7e3",
                              "e6be2762-e4ad-4108-b72d-1bbe884a0f91"
                            ],
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "schemas": {
                      "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                      "example": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                      ],
                      "items": {
                        "enum": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userName": {
                      "description": "The username for the user.",
                      "example": "E012345",
                      "type": "string"
                    }
                  },
                  "required": [
                    "schemas",
                    "externalId",
                    "userName",
                    "active",
                    "displayName",
                    "emails"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "enterpriseOwner": {
                      "value": {
                        "active": true,
                        "displayName": "Mona Lisa",
                        "emails": [
                          {
                            "primary": true,
                            "type": "work",
                            "value": "mlisa@example.com"
                          }
                        ],
                        "externalId": "E012345",
                        "id": "7fce0092-d52e-4f76-b727-3955bd72c939",
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Users/7fce0092-d52e-4f76-b727-3955bd72c939",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Ms. Mona Lisa Octocat",
                          "givenName": "Mona",
                          "middleName": "Lisa"
                        },
                        "roles": [
                          {
                            "primary": false,
                            "value": "User"
                          }
                        ],
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "E012345"
                      }
                    },
                    "user": {
                      "value": {
                        "active": true,
                        "displayName": "Mona Lisa",
                        "emails": [
                          {
                            "primary": true,
                            "type": "work",
                            "value": "mlisa@example.com"
                          }
                        ],
                        "externalId": "E012345",
                        "id": "7fce0092-d52e-4f76-b727-3955bd72c939",
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Users/7fce0092-d52e-4f76-b727-3955bd72c939",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Ms. Mona Lisa Octocat",
                          "givenName": "Mona",
                          "middleName": "Lisa"
                        },
                        "roles": [
                          {
                            "primary": false,
                            "value": "User"
                          }
                        ],
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "E012345"
                      }
                    }
                  },
                  "schema": {
                    "allOf": [
                      {
                        "properties": {
                          "active": {
                            "description": "Whether the user active in the IdP.",
                            "example": true,
                            "type": "boolean"
                          },
                          "displayName": {
                            "description": "A human-readable name for the user.",
                            "example": "Mona Lisa",
                            "nullable": true,
                            "type": "string"
                          },
                          "emails": {
                            "description": "The emails for the user.",
                            "items": {
                              "properties": {
                                "primary": {
                                  "description": "Whether this email address is the primary address.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "type": {
                                  "description": "The type of email address.",
                                  "example": "work",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The email address.",
                                  "example": "mlisa@example.com",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "externalId": {
                            "description": "A unique identifier for the resource as defined by the provisioning client.",
                            "example": "E012345",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "properties": {
                              "familyName": {
                                "description": "The family name of the user.",
                                "example": "Octocat",
                                "type": "string"
                              },
                              "formatted": {
                                "description": "The full name, including all middle names, titles, and suffixes as appropriate, formatted for display.",
                                "example": "Ms. Mona Lisa Octocat",
                                "type": "string"
                              },
                              "givenName": {
                                "description": "The given name of the user.",
                                "example": "Mona",
                                "type": "string"
                              },
                              "middleName": {
                                "description": "The middle name(s) of the user.",
                                "example": "Lisa",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "roles": {
                            "description": "The roles assigned to the user.",
                            "items": {
                              "properties": {
                                "display": {
                                  "type": "string"
                                },
                                "primary": {
                                  "description": "Is the role a primary role for the user.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The role value representing a user role in GitHub.",
                                  "enum": [
                                    "User",
                                    "user",
                                    "27d9891d-2c17-4f45-a262-781a0e55c80a",
                                    "Restricted User",
                                    "restricted_user",
                                    "1ebc4a02-e56c-43a6-92a5-02ee09b90824",
                                    "Enterprise Owner",
                                    "enterprise_owner",
                                    "981df190-8801-4618-a08a-d91f6206c954",
                                    "ba4987ab-a1c3-412a-b58c-360fc407cb10",
                                    "Billing Manager",
                                    "billing_manager",
                                    "0e338b8c-cc7f-498a-928d-ea3470d7e7e3",
                                    "e6be2762-e4ad-4108-b72d-1bbe884a0f91"
                                  ],
                                  "example": "user",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "schemas": {
                            "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                            "example": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "items": {
                              "enum": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "userName": {
                            "description": "The username for the user.",
                            "example": "E012345",
                            "type": "string"
                          }
                        },
                        "required": [
                          "schemas",
                          "active",
                          "emails"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "groups": {
                            "description": "Provisioned SCIM groups that the user is a member of.",
                            "type": "array"
                          },
                          "id": {
                            "description": "The internally generated id for the user object.",
                            "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                            "type": "string"
                          },
                          "meta": {
                            "description": "The metadata associated with the creation/updates to the user.",
                            "properties": {
                              "created": {
                                "description": "A date and time when the user was created.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "lastModified": {
                                "description": "A data and time when the user was last modified.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "location": {
                                "description": "A URL location of an object",
                                "type": "string"
                              },
                              "resourceType": {
                                "description": "A type of a resource",
                                "enum": [
                                  "User",
                                  "Group"
                                ],
                                "example": "User",
                                "type": "string"
                              }
                            },
                            "required": [
                              "resourceType"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "meta"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "description": "User has been created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "409": {
              "description": "Duplicate record detected"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Provision a SCIM enterprise user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        }
      },
      "/scim/v2/Users/{scim_user_id}": {
        "delete": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nPermanently suspends a SCIM user from an enterprise, removes all data for the user, obfuscates the login, email, and display name of the user, removes all external-identity SCIM attributes, and deletes the emails, avatar, PATs, SSH keys, OAuth authorizations credentials, GPG keys, and SAML mappings for the user. You will not be able to undo this action.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#delete-a-scim-user-from-an-enterprise"
          },
          "operationId": "enterprise-admin/delete-user-from-enterprise",
          "parameters": [
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "User was deleted, no content"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Delete a SCIM user from an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        },
        "get": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nGets information about a SCIM user.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-scim-provisioning-information-for-an-enterprise-user"
          },
          "operationId": "enterprise-admin/get-provisioning-information-for-enterprise-user",
          "parameters": [
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "displayName": "Mona Lisa",
                        "emails": [
                          {
                            "primary": true,
                            "type": "work",
                            "value": "mlisa@example.com"
                          }
                        ],
                        "externalId": "E012345",
                        "id": "7fce0092-d52e-4f76-b727-3955bd72c939",
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Users/7fce0092-d52e-4f76-b727-3955bd72c939",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Ms. Mona Lisa Octocat",
                          "givenName": "Mona",
                          "middleName": "Lisa"
                        },
                        "roles": [
                          {
                            "primary": false,
                            "value": "User"
                          }
                        ],
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "E012345"
                      }
                    }
                  },
                  "schema": {
                    "allOf": [
                      {
                        "properties": {
                          "active": {
                            "description": "Whether the user active in the IdP.",
                            "example": true,
                            "type": "boolean"
                          },
                          "displayName": {
                            "description": "A human-readable name for the user.",
                            "example": "Mona Lisa",
                            "nullable": true,
                            "type": "string"
                          },
                          "emails": {
                            "description": "The emails for the user.",
                            "items": {
                              "properties": {
                                "primary": {
                                  "description": "Whether this email address is the primary address.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "type": {
                                  "description": "The type of email address.",
                                  "example": "work",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The email address.",
                                  "example": "mlisa@example.com",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "externalId": {
                            "description": "A unique identifier for the resource as defined by the provisioning client.",
                            "example": "E012345",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "properties": {
                              "familyName": {
                                "description": "The family name of the user.",
                                "example": "Octocat",
                                "type": "string"
                              },
                              "formatted": {
                                "description": "The full name, including all middle names, titles, and suffixes as appropriate, formatted for display.",
                                "example": "Ms. Mona Lisa Octocat",
                                "type": "string"
                              },
                              "givenName": {
                                "description": "The given name of the user.",
                                "example": "Mona",
                                "type": "string"
                              },
                              "middleName": {
                                "description": "The middle name(s) of the user.",
                                "example": "Lisa",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "roles": {
                            "description": "The roles assigned to the user.",
                            "items": {
                              "properties": {
                                "display": {
                                  "type": "string"
                                },
                                "primary": {
                                  "description": "Is the role a primary role for the user.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The role value representing a user role in GitHub.",
                                  "enum": [
                                    "User",
                                    "user",
                                    "27d9891d-2c17-4f45-a262-781a0e55c80a",
                                    "Restricted User",
                                    "restricted_user",
                                    "1ebc4a02-e56c-43a6-92a5-02ee09b90824",
                                    "Enterprise Owner",
                                    "enterprise_owner",
                                    "981df190-8801-4618-a08a-d91f6206c954",
                                    "ba4987ab-a1c3-412a-b58c-360fc407cb10",
                                    "Billing Manager",
                                    "billing_manager",
                                    "0e338b8c-cc7f-498a-928d-ea3470d7e7e3",
                                    "e6be2762-e4ad-4108-b72d-1bbe884a0f91"
                                  ],
                                  "example": "user",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "schemas": {
                            "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                            "example": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "items": {
                              "enum": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "userName": {
                            "description": "The username for the user.",
                            "example": "E012345",
                            "type": "string"
                          }
                        },
                        "required": [
                          "schemas",
                          "active",
                          "emails"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "groups": {
                            "description": "Provisioned SCIM groups that the user is a member of.",
                            "type": "array"
                          },
                          "id": {
                            "description": "The internally generated id for the user object.",
                            "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                            "type": "string"
                          },
                          "meta": {
                            "description": "The metadata associated with the creation/updates to the user.",
                            "properties": {
                              "created": {
                                "description": "A date and time when the user was created.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "lastModified": {
                                "description": "A data and time when the user was last modified.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "location": {
                                "description": "A URL location of an object",
                                "type": "string"
                              },
                              "resourceType": {
                                "description": "A type of a resource",
                                "enum": [
                                  "User",
                                  "Group"
                                ],
                                "example": "User",
                                "type": "string"
                              }
                            },
                            "required": [
                              "resourceType"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "meta"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "description": "Success, a user was found"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Get SCIM provisioning information for an enterprise user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nUpdate a provisioned user's individual attributes.\n\nTo change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** Setting `active: false` will suspend a user and obfuscate the user handle and user email. Since the implementation is a generic SCIM implementation and does not differentiate yet between different IdP providers, for Okta, the user GDPR data will not be purged and the credentials will not be removed.\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n```",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-an-attribute-for-a-scim-enterprise-user"
          },
          "operationId": "enterprise-admin/update-attribute-for-enterprise-user",
          "parameters": [
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "disableUser": {
                    "summary": "Disable User",
                    "value": {
                      "Operations": [
                        {
                          "op": "replace",
                          "path": "active",
                          "value": false
                        }
                      ],
                      "schemas": [
                        "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                      ]
                    }
                  },
                  "userMultiValuedProperties": {
                    "summary": "Multi Valued Property",
                    "value": {
                      "Operations": [
                        {
                          "op": "replace",
                          "path": "emails[type eq 'work'].value",
                          "value": "updatedEmail@microsoft.com"
                        },
                        {
                          "op": "replace",
                          "path": "name.familyName",
                          "value": "updatedFamilyName"
                        }
                      ],
                      "schemas": [
                        "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                      ]
                    }
                  },
                  "userSingleValuedProperties": {
                    "summary": "Single Valued Property",
                    "value": {
                      "Operations": [
                        {
                          "op": "replace",
                          "path": "userName",
                          "value": "5b50642d-79fc-4410-9e90-4c077cdd1a59@testuser.com"
                        },
                        {
                          "op": "replace",
                          "path": "displayName",
                          "value": "Monalisa Octocat"
                        }
                      ],
                      "schemas": [
                        "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "Operations": {
                      "description": "patch operations list",
                      "items": {
                        "properties": {
                          "op": {
                            "enum": [
                              "add",
                              "replace",
                              "remove"
                            ],
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "value": {
                            "description": "Corresponding 'value' of that field specified by 'path'",
                            "type": "string"
                          }
                        },
                        "required": [
                          "op"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "schemas": {
                      "items": {
                        "enum": [
                          "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "Operations",
                    "schemas"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "disableUser": {
                      "value": {
                        "active": true,
                        "displayName": "Mona Lisa",
                        "emails": [
                          {
                            "primary": true,
                            "type": "work",
                            "value": "mlisa@example.com"
                          }
                        ],
                        "externalId": "E012345",
                        "id": "7fce0092-d52e-4f76-b727-3955bd72c939",
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Users/7fce0092-d52e-4f76-b727-3955bd72c939",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Ms. Mona Lisa Octocat",
                          "givenName": "Mona",
                          "middleName": "Lisa"
                        },
                        "roles": [
                          {
                            "primary": false,
                            "value": "User"
                          }
                        ],
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "E012345"
                      }
                    },
                    "userMultiValuedProperties": {
                      "value": {
                        "active": true,
                        "displayName": "Mona Lisa",
                        "emails": [
                          {
                            "primary": true,
                            "type": "work",
                            "value": "mlisa@example.com"
                          }
                        ],
                        "externalId": "E012345",
                        "id": "7fce0092-d52e-4f76-b727-3955bd72c939",
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Users/7fce0092-d52e-4f76-b727-3955bd72c939",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Ms. Mona Lisa Octocat",
                          "givenName": "Mona",
                          "middleName": "Lisa"
                        },
                        "roles": [
                          {
                            "primary": false,
                            "value": "User"
                          }
                        ],
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "E012345"
                      }
                    },
                    "userSingleValuedProperties": {
                      "value": {
                        "active": true,
                        "displayName": "Mona Lisa",
                        "emails": [
                          {
                            "primary": true,
                            "type": "work",
                            "value": "mlisa@example.com"
                          }
                        ],
                        "externalId": "E012345",
                        "id": "7fce0092-d52e-4f76-b727-3955bd72c939",
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Users/7fce0092-d52e-4f76-b727-3955bd72c939",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Ms. Mona Lisa Octocat",
                          "givenName": "Mona",
                          "middleName": "Lisa"
                        },
                        "roles": [
                          {
                            "primary": false,
                            "value": "User"
                          }
                        ],
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "E012345"
                      }
                    }
                  },
                  "schema": {
                    "allOf": [
                      {
                        "properties": {
                          "active": {
                            "description": "Whether the user active in the IdP.",
                            "example": true,
                            "type": "boolean"
                          },
                          "displayName": {
                            "description": "A human-readable name for the user.",
                            "example": "Mona Lisa",
                            "nullable": true,
                            "type": "string"
                          },
                          "emails": {
                            "description": "The emails for the user.",
                            "items": {
                              "properties": {
                                "primary": {
                                  "description": "Whether this email address is the primary address.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "type": {
                                  "description": "The type of email address.",
                                  "example": "work",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The email address.",
                                  "example": "mlisa@example.com",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "externalId": {
                            "description": "A unique identifier for the resource as defined by the provisioning client.",
                            "example": "E012345",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "properties": {
                              "familyName": {
                                "description": "The family name of the user.",
                                "example": "Octocat",
                                "type": "string"
                              },
                              "formatted": {
                                "description": "The full name, including all middle names, titles, and suffixes as appropriate, formatted for display.",
                                "example": "Ms. Mona Lisa Octocat",
                                "type": "string"
                              },
                              "givenName": {
                                "description": "The given name of the user.",
                                "example": "Mona",
                                "type": "string"
                              },
                              "middleName": {
                                "description": "The middle name(s) of the user.",
                                "example": "Lisa",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "roles": {
                            "description": "The roles assigned to the user.",
                            "items": {
                              "properties": {
                                "display": {
                                  "type": "string"
                                },
                                "primary": {
                                  "description": "Is the role a primary role for the user.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The role value representing a user role in GitHub.",
                                  "enum": [
                                    "User",
                                    "user",
                                    "27d9891d-2c17-4f45-a262-781a0e55c80a",
                                    "Restricted User",
                                    "restricted_user",
                                    "1ebc4a02-e56c-43a6-92a5-02ee09b90824",
                                    "Enterprise Owner",
                                    "enterprise_owner",
                                    "981df190-8801-4618-a08a-d91f6206c954",
                                    "ba4987ab-a1c3-412a-b58c-360fc407cb10",
                                    "Billing Manager",
                                    "billing_manager",
                                    "0e338b8c-cc7f-498a-928d-ea3470d7e7e3",
                                    "e6be2762-e4ad-4108-b72d-1bbe884a0f91"
                                  ],
                                  "example": "user",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "schemas": {
                            "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                            "example": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "items": {
                              "enum": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "userName": {
                            "description": "The username for the user.",
                            "example": "E012345",
                            "type": "string"
                          }
                        },
                        "required": [
                          "schemas",
                          "active",
                          "emails"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "groups": {
                            "description": "Provisioned SCIM groups that the user is a member of.",
                            "type": "array"
                          },
                          "id": {
                            "description": "The internally generated id for the user object.",
                            "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                            "type": "string"
                          },
                          "meta": {
                            "description": "The metadata associated with the creation/updates to the user.",
                            "properties": {
                              "created": {
                                "description": "A date and time when the user was created.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "lastModified": {
                                "description": "A data and time when the user was last modified.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "location": {
                                "description": "A URL location of an object",
                                "type": "string"
                              },
                              "resourceType": {
                                "description": "A type of a resource",
                                "enum": [
                                  "User",
                                  "Group"
                                ],
                                "example": "User",
                                "type": "string"
                              }
                            },
                            "required": [
                              "resourceType"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "meta"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "description": "Success, user was updated"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "409": {
              "description": "Duplicate record detected"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Update an attribute for a SCIM enterprise user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        },
        "put": {
          "deprecated": null,
          "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.\n\nReplaces an existing provisioned user's information.\n\nYou must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](#update-an-attribute-for-a-scim-enterprise-user) endpoint instead.\n\n**Warning:** Setting `active: false` will suspend a user and obfuscate the user handle and user email. Since the implementation is a generic SCIM implementation and does not differentiate yet between different IdP providers, for Okta, the user GDPR data will not be purged and the credentials will not be removed.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#set-scim-information-for-a-provisioned-enterprise-user"
          },
          "operationId": "enterprise-admin/set-information-for-provisioned-enterprise-user",
          "parameters": [
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "user": {
                    "summary": "User",
                    "value": {
                      "active": true,
                      "displayName": "Mona Lisa",
                      "emails": [
                        {
                          "primary": true,
                          "type": "work",
                          "value": "mlisa@example.com"
                        }
                      ],
                      "externalId": "E012345",
                      "name": {
                        "familyName": "Octocat",
                        "formatted": "Ms. Mona Lisa Octocat",
                        "givenName": "Mona",
                        "middleName": "Lisa"
                      },
                      "roles": [
                        {
                          "primary": false,
                          "value": "User"
                        }
                      ],
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                      ],
                      "userName": "E012345"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "active": {
                      "description": "Whether the user active in the IdP.",
                      "example": true,
                      "type": "boolean"
                    },
                    "displayName": {
                      "description": "A human-readable name for the user.",
                      "example": "Mona Lisa",
                      "type": "string"
                    },
                    "emails": {
                      "description": "The emails for the user.",
                      "items": {
                        "properties": {
                          "primary": {
                            "description": "Whether this email address is the primary address.",
                            "example": true,
                            "type": "boolean"
                          },
                          "type": {
                            "description": "The type of email address.",
                            "example": "work",
                            "type": "string"
                          },
                          "value": {
                            "description": "The email address.",
                            "example": "mlisa@example.com",
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "type",
                          "primary"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "externalId": {
                      "description": "A unique identifier for the resource as defined by the provisioning client.",
                      "example": "E012345",
                      "type": "string"
                    },
                    "name": {
                      "properties": {
                        "familyName": {
                          "description": "The family name of the user.",
                          "example": "Octocat",
                          "type": "string"
                        },
                        "formatted": {
                          "description": "The full name, including all middle names, titles, and suffixes as appropriate, formatted for display.",
                          "example": "Ms. Mona Lisa Octocat",
                          "type": "string"
                        },
                        "givenName": {
                          "description": "The given name of the user.",
                          "example": "Mona",
                          "type": "string"
                        },
                        "middleName": {
                          "description": "The middle name(s) of the user.",
                          "example": "Lisa",
                          "type": "string"
                        }
                      },
                      "required": [
                        "familyName",
                        "givenName"
                      ],
                      "type": "object"
                    },
                    "roles": {
                      "description": "The roles assigned to the user.",
                      "items": {
                        "properties": {
                          "display": {
                            "type": "string"
                          },
                          "primary": {
                            "description": "Is the role a primary role for the user.",
                            "example": false,
                            "type": "boolean"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "description": "The role value representing a user role in GitHub.",
                            "enum": [
                              "User",
                              "user",
                              "27d9891d-2c17-4f45-a262-781a0e55c80a",
                              "Restricted User",
                              "restricted_user",
                              "1ebc4a02-e56c-43a6-92a5-02ee09b90824",
                              "Enterprise Owner",
                              "enterprise_owner",
                              "981df190-8801-4618-a08a-d91f6206c954",
                              "ba4987ab-a1c3-412a-b58c-360fc407cb10",
                              "Billing Manager",
                              "billing_manager",
                              "0e338b8c-cc7f-498a-928d-ea3470d7e7e3",
                              "e6be2762-e4ad-4108-b72d-1bbe884a0f91"
                            ],
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "schemas": {
                      "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                      "example": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                      ],
                      "items": {
                        "enum": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userName": {
                      "description": "The username for the user.",
                      "example": "E012345",
                      "type": "string"
                    }
                  },
                  "required": [
                    "schemas",
                    "externalId",
                    "userName",
                    "active",
                    "displayName",
                    "emails"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "user": {
                      "value": {
                        "active": true,
                        "displayName": "Mona Lisa",
                        "emails": [
                          {
                            "primary": true,
                            "type": "work",
                            "value": "mlisa@example.com"
                          }
                        ],
                        "externalId": "E012345",
                        "id": "7fce0092-d52e-4f76-b727-3955bd72c939",
                        "meta": {
                          "created": "2012-03-27T19:59:26.000Z",
                          "lastModified": "2018-03-27T19:59:26.000Z",
                          "location": "https://api.github.localhost/scim/v2/Users/7fce0092-d52e-4f76-b727-3955bd72c939",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Ms. Mona Lisa Octocat",
                          "givenName": "Mona",
                          "middleName": "Lisa"
                        },
                        "roles": [
                          {
                            "primary": false,
                            "value": "User"
                          }
                        ],
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "E012345"
                      }
                    }
                  },
                  "schema": {
                    "allOf": [
                      {
                        "properties": {
                          "active": {
                            "description": "Whether the user active in the IdP.",
                            "example": true,
                            "type": "boolean"
                          },
                          "displayName": {
                            "description": "A human-readable name for the user.",
                            "example": "Mona Lisa",
                            "nullable": true,
                            "type": "string"
                          },
                          "emails": {
                            "description": "The emails for the user.",
                            "items": {
                              "properties": {
                                "primary": {
                                  "description": "Whether this email address is the primary address.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "type": {
                                  "description": "The type of email address.",
                                  "example": "work",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The email address.",
                                  "example": "mlisa@example.com",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "externalId": {
                            "description": "A unique identifier for the resource as defined by the provisioning client.",
                            "example": "E012345",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "properties": {
                              "familyName": {
                                "description": "The family name of the user.",
                                "example": "Octocat",
                                "type": "string"
                              },
                              "formatted": {
                                "description": "The full name, including all middle names, titles, and suffixes as appropriate, formatted for display.",
                                "example": "Ms. Mona Lisa Octocat",
                                "type": "string"
                              },
                              "givenName": {
                                "description": "The given name of the user.",
                                "example": "Mona",
                                "type": "string"
                              },
                              "middleName": {
                                "description": "The middle name(s) of the user.",
                                "example": "Lisa",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "roles": {
                            "description": "The roles assigned to the user.",
                            "items": {
                              "properties": {
                                "display": {
                                  "type": "string"
                                },
                                "primary": {
                                  "description": "Is the role a primary role for the user.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The role value representing a user role in GitHub.",
                                  "enum": [
                                    "User",
                                    "user",
                                    "27d9891d-2c17-4f45-a262-781a0e55c80a",
                                    "Restricted User",
                                    "restricted_user",
                                    "1ebc4a02-e56c-43a6-92a5-02ee09b90824",
                                    "Enterprise Owner",
                                    "enterprise_owner",
                                    "981df190-8801-4618-a08a-d91f6206c954",
                                    "ba4987ab-a1c3-412a-b58c-360fc407cb10",
                                    "Billing Manager",
                                    "billing_manager",
                                    "0e338b8c-cc7f-498a-928d-ea3470d7e7e3",
                                    "e6be2762-e4ad-4108-b72d-1bbe884a0f91"
                                  ],
                                  "example": "user",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "schemas": {
                            "description": "The URIs that are used to indicate the namespaces of the SCIM schemas.",
                            "example": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "items": {
                              "enum": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "userName": {
                            "description": "The username for the user.",
                            "example": "E012345",
                            "type": "string"
                          }
                        },
                        "required": [
                          "schemas",
                          "active",
                          "emails"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "groups": {
                            "description": "Provisioned SCIM groups that the user is a member of.",
                            "type": "array"
                          },
                          "id": {
                            "description": "The internally generated id for the user object.",
                            "example": "7fce0092-d52e-4f76-b727-3955bd72c939",
                            "type": "string"
                          },
                          "meta": {
                            "description": "The metadata associated with the creation/updates to the user.",
                            "properties": {
                              "created": {
                                "description": "A date and time when the user was created.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "lastModified": {
                                "description": "A data and time when the user was last modified.",
                                "example": "2022-03-27T19:59:26.000Z",
                                "type": "string"
                              },
                              "location": {
                                "description": "A URL location of an object",
                                "type": "string"
                              },
                              "resourceType": {
                                "description": "A type of a resource",
                                "enum": [
                                  "User",
                                  "Group"
                                ],
                                "example": "User",
                                "type": "string"
                              }
                            },
                            "required": [
                              "resourceType"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "meta"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                }
              },
              "description": "User was updated"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "401": {
              "description": "Authorization failure"
            },
            "403": {
              "description": "Permission denied"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "409": {
              "description": "Duplicate record detected"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Set SCIM information for a provisioned enterprise user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "subcategory": "scim"
          }
        }
      },
      "/setup/api/configcheck": {
        "get": {
          "deprecated": null,
          "description": "This endpoint allows you to check the status of the most recent configuration process:\n\nNote that you may need to wait several seconds after you start a process before you can check its status.\n\nThe different statuses are:\n\n| Status        | Description                       |\n| ------------- | --------------------------------- |\n| `PENDING`     | The job has not started yet       |\n| `CONFIGURING` | The job is running                |\n| `DONE`        | The job has finished correctly    |\n| `FAILED`      | The job has finished unexpectedly |",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-the-configuration-status"
          },
          "operationId": "enterprise-admin/get-configuration-status",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "progress": [
                          {
                            "key": "Appliance core components",
                            "status": "DONE"
                          },
                          {
                            "key": "GitHub utilities",
                            "status": "DONE"
                          },
                          {
                            "key": "GitHub applications",
                            "status": "DONE"
                          },
                          {
                            "key": "GitHub services",
                            "status": "CONFIGURING"
                          },
                          {
                            "key": "Reloading appliance services",
                            "status": "PENDING"
                          }
                        ],
                        "status": "running"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "progress": {
                        "items": {
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "status",
                            "key"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "status": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Get the configuration status",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        }
      },
      "/setup/api/configure": {
        "post": {
          "deprecated": null,
          "description": "This endpoint allows you to start a configuration process at any time for your updated settings to take effect:",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#start-a-configuration-process"
          },
          "operationId": "enterprise-admin/start-configuration-process",
          "responses": {
            "202": {
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Start a configuration process",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        }
      },
      "/setup/api/maintenance": {
        "get": {
          "deprecated": null,
          "description": "Check your installation's maintenance status:",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-the-maintenance-status"
          },
          "operationId": "enterprise-admin/get-maintenance-status",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "connection_services": [
                          {
                            "name": "git operations",
                            "number": 0
                          },
                          {
                            "name": "mysql queries",
                            "number": 233
                          },
                          {
                            "name": "aqueduct jobs",
                            "number": 34
                          },
                          {
                            "name": "resque jobs",
                            "number": 54
                          }
                        ],
                        "scheduled_time": "Tuesday, January 22 at 15:34 -0800",
                        "status": "scheduled"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "connection_services": {
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "number": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "name",
                            "number"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "scheduled_time": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Get the maintenance status",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        },
        "post": {
          "deprecated": null,
          "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#enable-or-disable-maintenance-mode"
          },
          "operationId": "enterprise-admin/enable-or-disable-maintenance-mode",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "examples": {
                  "default": {
                    "value": {
                      "maintenance": "{\"enabled\":true, \"when\":\"now\"}"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "maintenance": {
                      "description": "A JSON string with the attributes `enabled` and `when`.\n\nThe possible values for `enabled` are `true` and `false`. When it's `false`, the attribute `when` is ignored and the maintenance mode is turned off. `when` defines the time period when the maintenance was enabled.\n\nThe possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).",
                      "type": "string"
                    }
                  },
                  "required": [
                    "maintenance"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "connection_services": [
                          {
                            "name": "git operations",
                            "number": 0
                          },
                          {
                            "name": "mysql queries",
                            "number": 233
                          },
                          {
                            "name": "aqueduct jobs",
                            "number": 34
                          },
                          {
                            "name": "resque jobs",
                            "number": 54
                          }
                        ],
                        "scheduled_time": "Tuesday, January 22 at 15:34 -0800",
                        "status": "scheduled"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "connection_services": {
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "number": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "name",
                            "number"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "scheduled_time": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Enable or disable maintenance mode",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        }
      },
      "/setup/api/settings": {
        "get": {
          "deprecated": null,
          "description": "Gets the settings for your instance. To change settings, see the [Set settings endpoint](https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#set-settings).\n\n**Note:** You cannot retrieve the management console password with the Enterprise administration API.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-settings"
          },
          "operationId": "enterprise-admin/get-settings",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "enterprise": {
                          "admin_password": null,
                          "assets": null,
                          "auth_mode": "default",
                          "avatar": {
                            "enabled": false
                          },
                          "cas": {
                            "url": null
                          },
                          "collectd": {
                            "enabled": false,
                            "encryption": null,
                            "password": null,
                            "port": 0,
                            "server": null,
                            "username": null
                          },
                          "configuration_id": 1401777404,
                          "configuration_run_count": 4,
                          "customer": {
                            "email": "stannis@themannis.biz",
                            "name": "GitHub",
                            "public_key_data": "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1.4.10 (GNU/Linux)\n\nmI0ETqzZYgEEALSe6snowdenXyqvLfSQ34HWD6C7....\n-----END PGP PUBLIC KEY BLOCK-----\n",
                            "secret_key_data": "-----BEGIN PGP PRIVATE KEY BLOCK-----\nVersion: GnuPG v1.4.10 (GNU/Linux)\n\nlQcYBE5TCgsBEACk4yHpUcapplebaumBMXYMiLF+nCQ0lxpx...\n-----END PGP PRIVATE KEY BLOCK-----\n",
                            "uuid": "af6cac80-e4e1-012e-d822-1231380e52e9"
                          },
                          "expire_sessions": false,
                          "github_hostname": "ghe.local",
                          "github_oauth": {
                            "client_id": "12313412",
                            "client_secret": "kj123131132",
                            "organization_name": "Homestar Runners",
                            "organization_team": "homestarrunners/characters"
                          },
                          "github_ssl": {
                            "cert": null,
                            "enabled": false,
                            "key": null
                          },
                          "http_proxy": null,
                          "identicons_host": "dotcom",
                          "ldap": {
                            "admin_group": null,
                            "bind_dn": null,
                            "host": null,
                            "method": "Plain",
                            "password": null,
                            "port": 0,
                            "posix_support": true,
                            "profile": {
                              "key": null,
                              "mail": null,
                              "name": null,
                              "uid": "uid"
                            },
                            "reconciliation": {
                              "org": null,
                              "user": null
                            },
                            "recursive_group_search": false,
                            "search_strategy": "detect",
                            "sync_enabled": false,
                            "team_sync_interval": 4,
                            "uid": null,
                            "user_sync_emails": false,
                            "user_sync_interval": 4,
                            "user_sync_keys": false,
                            "virtual_attribute_enabled": false
                          },
                          "license": {
                            "cluster_support": false,
                            "evaluation": false,
                            "expire_at": "2016-04-27T00:00:00-07:00",
                            "perpetual": false,
                            "seats": 0,
                            "ssh_allowed": true,
                            "support_key": "ssh-rsa AAAAB3N....",
                            "unlimited_seating": true
                          },
                          "load_balancer": null,
                          "mapping": {
                            "basemap": "company.map-qsz2zrvs",
                            "enabled": true,
                            "tileserver": null,
                            "token": null
                          },
                          "ntp": {
                            "primary_server": "0.pool.ntp.org",
                            "secondary_server": "1.pool.ntp.org"
                          },
                          "pages": {
                            "enabled": true
                          },
                          "private_mode": false,
                          "public_pages": false,
                          "saml": {
                            "certificate": null,
                            "certificate_path": null,
                            "disable_admin_demote": false,
                            "idp_initiated_sso": false,
                            "issuer": null,
                            "sso_url": null
                          },
                          "signup_enabled": false,
                          "smtp": {
                            "address": "smtp.example.com",
                            "authentication": "plain",
                            "discard-to-noreply-address": true,
                            "domain": "blah",
                            "enable_starttls_auto": true,
                            "enabled": true,
                            "noreply_address": "noreply@github.com",
                            "password": "bar",
                            "port": "1234",
                            "support_address": "enterprise@github.com",
                            "support_address_type": "email",
                            "user_name": "mr_foo",
                            "username": "foo"
                          },
                          "snmp": {
                            "enabled": false
                          },
                          "subdomain_isolation": true,
                          "syslog": {
                            "enabled": false,
                            "protocol_name": "udp",
                            "server": null
                          },
                          "timezone": null
                        },
                        "run_list": [
                          "recipe[enterprise-configure]"
                        ]
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "enterprise": {
                        "properties": {
                          "admin_password": {
                            "nullable": true,
                            "type": "string"
                          },
                          "assets": {
                            "nullable": true,
                            "type": "string"
                          },
                          "auth_mode": {
                            "type": "string"
                          },
                          "avatar": {
                            "properties": {
                              "enabled": {
                                "type": "boolean"
                              },
                              "uri": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "cas": {
                            "properties": {
                              "url": {
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "collectd": {
                            "properties": {
                              "enabled": {
                                "type": "boolean"
                              },
                              "encryption": {
                                "nullable": true,
                                "type": "string"
                              },
                              "password": {
                                "nullable": true,
                                "type": "string"
                              },
                              "port": {
                                "type": "integer"
                              },
                              "server": {
                                "nullable": true,
                                "type": "string"
                              },
                              "username": {
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "configuration_id": {
                            "type": "integer"
                          },
                          "configuration_run_count": {
                            "type": "integer"
                          },
                          "customer": {
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "public_key_data": {
                                "type": "string"
                              },
                              "secret_key_data": {
                                "type": "string"
                              },
                              "uuid": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "expire_sessions": {
                            "type": "boolean"
                          },
                          "github_hostname": {
                            "type": "string"
                          },
                          "github_oauth": {
                            "properties": {
                              "client_id": {
                                "type": "string"
                              },
                              "client_secret": {
                                "type": "string"
                              },
                              "organization_name": {
                                "type": "string"
                              },
                              "organization_team": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "github_ssl": {
                            "properties": {
                              "cert": {
                                "nullable": true,
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "key": {
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "http_proxy": {
                            "nullable": true,
                            "type": "string"
                          },
                          "identicons_host": {
                            "type": "string"
                          },
                          "ldap": {
                            "properties": {
                              "admin_group": {
                                "nullable": true,
                                "type": "string"
                              },
                              "base": {
                                "type": "array"
                              },
                              "bind_dn": {
                                "nullable": true,
                                "type": "string"
                              },
                              "host": {
                                "nullable": true,
                                "type": "string"
                              },
                              "method": {
                                "type": "string"
                              },
                              "password": {
                                "nullable": true,
                                "type": "string"
                              },
                              "port": {
                                "type": "integer"
                              },
                              "posix_support": {
                                "type": "boolean"
                              },
                              "profile": {
                                "properties": {
                                  "key": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "mail": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "uid": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "reconciliation": {
                                "properties": {
                                  "org": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "user": {
                                    "nullable": true,
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "recursive_group_search": {
                                "type": "boolean"
                              },
                              "search_strategy": {
                                "type": "string"
                              },
                              "sync_enabled": {
                                "type": "boolean"
                              },
                              "team_sync_interval": {
                                "type": "integer"
                              },
                              "uid": {
                                "nullable": true,
                                "type": "string"
                              },
                              "user_groups": {
                                "type": "array"
                              },
                              "user_sync_emails": {
                                "type": "boolean"
                              },
                              "user_sync_interval": {
                                "type": "integer"
                              },
                              "user_sync_keys": {
                                "type": "boolean"
                              },
                              "virtual_attribute_enabled": {
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "license": {
                            "properties": {
                              "cluster_support": {
                                "type": "boolean"
                              },
                              "evaluation": {
                                "type": "boolean"
                              },
                              "expire_at": {
                                "type": "string"
                              },
                              "perpetual": {
                                "type": "boolean"
                              },
                              "seats": {
                                "type": "integer"
                              },
                              "ssh_allowed": {
                                "type": "boolean"
                              },
                              "support_key": {
                                "type": "string"
                              },
                              "unlimited_seating": {
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "load_balancer": {
                            "nullable": true,
                            "type": "string"
                          },
                          "mapping": {
                            "properties": {
                              "basemap": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "tileserver": {
                                "nullable": true,
                                "type": "string"
                              },
                              "token": {
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "ntp": {
                            "properties": {
                              "primary_server": {
                                "type": "string"
                              },
                              "secondary_server": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "pages": {
                            "properties": {
                              "enabled": {
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "private_mode": {
                            "type": "boolean"
                          },
                          "public_pages": {
                            "type": "boolean"
                          },
                          "saml": {
                            "properties": {
                              "certificate": {
                                "nullable": true,
                                "type": "string"
                              },
                              "certificate_path": {
                                "nullable": true,
                                "type": "string"
                              },
                              "disable_admin_demote": {
                                "type": "boolean"
                              },
                              "idp_initiated_sso": {
                                "type": "boolean"
                              },
                              "issuer": {
                                "nullable": true,
                                "type": "string"
                              },
                              "sso_url": {
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "signup_enabled": {
                            "type": "boolean"
                          },
                          "smtp": {
                            "properties": {
                              "address": {
                                "type": "string"
                              },
                              "authentication": {
                                "type": "string"
                              },
                              "discard-to-noreply-address": {
                                "type": "boolean"
                              },
                              "domain": {
                                "type": "string"
                              },
                              "enable_starttls_auto": {
                                "type": "boolean"
                              },
                              "enabled": {
                                "type": "boolean"
                              },
                              "noreply_address": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "port": {
                                "type": "string"
                              },
                              "support_address": {
                                "type": "string"
                              },
                              "support_address_type": {
                                "type": "string"
                              },
                              "user_name": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "snmp": {
                            "properties": {
                              "community": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "subdomain_isolation": {
                            "type": "boolean"
                          },
                          "syslog": {
                            "properties": {
                              "enabled": {
                                "type": "boolean"
                              },
                              "protocol_name": {
                                "type": "string"
                              },
                              "server": {
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "timezone": {
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "run_list": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Get settings",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Applies settings on your instance. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-settings).\n\n**Notes:**\n\n- The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).\n- You cannot set the management console password with the Enterprise administration API. Use the `ghe-set-password` utility to change the management console password. For more information, see \"[Command-line utilities](https://docs.github.com/enterprise-server@3.7/admin/configuration/configuring-your-enterprise/command-line-utilities#ghe-set-password).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#set-settings"
          },
          "operationId": "enterprise-admin/set-settings",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "examples": {
                  "204": {
                    "value": {
                      "settings": "{ \"enterprise\": { \"public_pages\": true }}"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "settings": {
                      "description": "A JSON string with the new settings. Note that you only need to pass the specific settings you want to modify. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-settings).",
                      "type": "string"
                    }
                  },
                  "required": [
                    "settings"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Set settings",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        }
      },
      "/setup/api/settings/authorized-keys": {
        "delete": {
          "deprecated": null,
          "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#remove-an-authorized-ssh-key"
          },
          "operationId": "enterprise-admin/remove-authorized-ssh-key",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "examples": {
                  "default": {
                    "value": {
                      "authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCssTL/Vtu/ODLTj0VtZoRAbvf7uiv5997GyDq0MoAZUjb5jmA5wYe2/wF6sFuhiZTnZoF1ZtCHunPp0hM/GHrn6VySBhNncx14YO8FPt1CIhEeRMSEjUK9cY3xAbS365oXY8vnUHJsS9+1tr/2bx/+4NJfcUt/Ezf1OR/0LStQXw=="
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "authorized_key": {
                      "description": "The public SSH key.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "authorized_key"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                          "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                        },
                        {
                          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                          "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                        },
                        {
                          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                          "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "pretty-print": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Remove an authorized SSH key",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-all-authorized-ssh-keys"
          },
          "operationId": "enterprise-admin/get-all-authorized-ssh-keys",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                          "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                        },
                        {
                          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                          "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                        },
                        {
                          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                          "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "pretty-print": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Get all authorized SSH keys",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        },
        "post": {
          "deprecated": null,
          "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#add-an-authorized-ssh-key"
          },
          "operationId": "enterprise-admin/add-authorized-ssh-key",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "examples": {
                  "default": {
                    "value": {
                      "authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCssTL/Vtu/ODLTj0VtZoRAbvf7uiv5997GyDq0MoAZUjb5jmA5wYe2/wF6sFuhiZTnZoF1ZtCHunPp0hM/GHrn6VySBhNncx14YO8FPt1CIhEeRMSEjUK9cY3xAbS365oXY8vnUHJsS9+1tr/2bx/+4NJfcUt/Ezf1OR/0LStQXw=="
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "authorized_key": {
                      "description": "The public SSH key.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "authorized_key"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                          "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                        },
                        {
                          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                          "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                        },
                        {
                          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                          "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "pretty-print": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Add an authorized SSH key",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        }
      },
      "/setup/api/start": {
        "post": {
          "deprecated": null,
          "description": "When you boot a GitHub instance for the first time, you can use the following endpoint to upload a license.\n\nNote that you need to `POST` to [`/setup/api/configure`](https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#start-a-configuration-process) to start the actual configuration process.\n\nWhen using this endpoint, your GitHub instance must have a password set. This can be accomplished two ways:\n\n1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.\n2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.\n\n**Note:** The request body for this operation must be submitted as `multipart/form-data` data. You can can reference the license file by prefixing the filename with the `@` symbol using `curl`. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#-F).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#create-a-github-enterprise-server-license"
          },
          "operationId": "enterprise-admin/create-enterprise-server-license",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "examples": {
                  "default": {
                    "value": {
                      "license": "@enterprise.ghl",
                      "password": "secret"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "license": {
                      "description": "The content of your _.ghl_ license file.",
                      "type": "string"
                    },
                    "password": {
                      "description": "You **must** provide a password _only if_ you are uploading your license for the first time. If you previously set a password through the web interface, you don't need this parameter.",
                      "type": "string"
                    },
                    "settings": {
                      "description": "An optional JSON string containing the installation settings. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#get-settings).",
                      "type": "string"
                    }
                  },
                  "required": [
                    "license"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "202": {
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Create a GitHub license",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        }
      },
      "/setup/api/upgrade": {
        "post": {
          "deprecated": null,
          "description": "This API upgrades your license and also triggers the configuration process.\n\n**Note:** The request body for this operation must be submitted as `multipart/form-data` data. You can can reference the license file by prefixing the filename with the `@` symbol using `curl`. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#-F).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#upgrade-a-license"
          },
          "operationId": "enterprise-admin/upgrade-license",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "examples": {
                  "default": {
                    "value": {
                      "license": "@enterprise.ghl"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "license": {
                      "description": "The content of your new _.ghl_ license file.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "202": {
              "description": "Response"
            }
          },
          "servers": [
            {
              "url": "{protocol}://{hostname}",
              "variables": {
                "hostname": {
                  "default": "HOSTNAME",
                  "description": "Self-hosted Enterprise Server hostname"
                },
                "protocol": {
                  "default": "http",
                  "description": "Self-hosted Enterprise Server protocol"
                }
              }
            }
          ],
          "summary": "Upgrade a license",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "management-console"
          }
        }
      },
      "/users/{username}/site_admin": {
        "delete": {
          "deprecated": null,
          "description": "You can demote any user account except your own.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#demote-a-site-administrator"
          },
          "operationId": "enterprise-admin/demote-site-administrator",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Demote a site administrator",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@3.7/rest/overview/resources-in-the-rest-api#http-verbs).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#promote-a-user-to-be-a-site-administrator"
          },
          "operationId": "enterprise-admin/promote-user-to-be-site-administrator",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Promote a user to be a site administrator",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/users/{username}/suspended": {
        "delete": {
          "deprecated": null,
          "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/enterprise-server@3.7/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#unsuspend-a-user"
          },
          "operationId": "enterprise-admin/unsuspend-user",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "reason": {
                    "value": {
                      "reason": "Unsuspended after leave of absence."
                    }
                  }
                },
                "schema": {
                  "nullable": true,
                  "properties": {
                    "reason": {
                      "description": "The reason the user is being unsuspended. This message will be logged in the [audit log](https://docs.github.com/enterprise-server@3.7/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/about-the-audit-log-for-your-enterprise). If you don't provide a `reason`, it will default to \"Unsuspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Unsuspend a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        },
        "put": {
          "deprecated": null,
          "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/enterprise-server@3.7/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.\n\nYou can suspend any user account except your own.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@3.7/rest/overview/resources-in-the-rest-api#http-verbs).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#suspend-a-user"
          },
          "operationId": "enterprise-admin/suspend-user",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "reason": {
                    "value": {
                      "reason": "Suspended during leave of absence."
                    }
                  }
                },
                "schema": {
                  "nullable": true,
                  "properties": {
                    "reason": {
                      "description": "The reason the user is being suspended. This message will be logged in the [audit log](https://docs.github.com/enterprise-server@3.7/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/about-the-audit-log-for-your-enterprise). If you don't provide a `reason`, it will default to \"Suspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Suspend a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      }
    },
    "changed": {
      "/app/installations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "permissions": {
                                "properties_changed": {
                                  "removed": [
                                    "organization_announcement_banners",
                                    "organization_custom_roles",
                                    "repository_announcement_banners"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations/{installation_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_announcement_banners",
                                  "organization_custom_roles",
                                  "repository_announcement_banners"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations/{installation_id}/access_tokens": {
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "permissions": {
                          "properties_changed": {
                            "removed": [
                              "organization_announcement_banners",
                              "organization_custom_roles",
                              "repository_announcement_banners"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_announcement_banners",
                                  "organization_custom_roles",
                                  "repository_announcement_banners"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/applications/{client_id}/token": {
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "removed": [
                                        "organization_announcement_banners",
                                        "organization_custom_roles",
                                        "repository_announcement_banners"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "removed": [
                                        "organization_announcement_banners",
                                        "organization_custom_roles",
                                        "repository_announcement_banners"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/applications/{client_id}/token/scoped": {
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "permissions": {
                          "properties_changed": {
                            "removed": [
                              "organization_announcement_banners",
                              "organization_custom_roles",
                              "repository_announcement_banners"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "removed": [
                                        "organization_announcement_banners",
                                        "organization_custom_roles",
                                        "repository_announcement_banners"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/enterprises/{enterprise}/secret-scanning/alerts": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "resolution_comment"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/meta": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "added": [
                            [
                              "installed_version",
                              {
                                "example": "3.7.0",
                                "type": "string"
                              }
                            ]
                          ],
                          "removed": [
                            "actions",
                            "api",
                            "git",
                            "hooks",
                            "importer",
                            "pages",
                            "ssh_key_fingerprints",
                            "ssh_keys",
                            "web"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/notifications": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "removed": [
                                    "security_and_analysis"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/notifications/threads/{thread_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "secret_scanning_push_protection_custom_link",
                            "secret_scanning_push_protection_custom_link_enabled"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "members_can_create_private_pages",
                        "members_can_create_public_pages",
                        "secret_scanning_push_protection_custom_link",
                        "secret_scanning_push_protection_custom_link_enabled"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "secret_scanning_push_protection_custom_link",
                            "secret_scanning_push_protection_custom_link_enabled"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/permissions/selected-actions": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "verified_allowed"
                          ]
                        },
                        "required_changed": {
                          "added": [
                            "github_owned_allowed",
                            "patterns_allowed"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "verified_allowed"
                      ]
                    },
                    "required_changed": {
                      "added": [
                        "github_owned_allowed",
                        "patterns_allowed"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "removed": [
                                    "security_and_analysis"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/secrets/{secret_name}/repositories": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "removed": [
                                    "security_and_analysis"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/code-scanning/alerts": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "If specified, only code scanning alerts with this severity will be returned.",
                "in": "query",
                "name": "severity",
                "required": false,
                "schema": {
                  "description": "Severity of a code scanning alert.",
                  "enum": [
                    "critical",
                    "high",
                    "medium",
                    "low",
                    "warning",
                    "note",
                    "error"
                  ],
                  "type": "string"
                },
                "style": "form"
              }
            ]
          }
        }
      },
      "/orgs/{org}/dependabot/secrets/{secret_name}/repositories": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "removed": [
                                    "security_and_analysis"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/installation": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_announcement_banners",
                                  "organization_custom_roles",
                                  "repository_announcement_banners"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/installations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installations": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "permissions": {
                                      "properties_changed": {
                                        "removed": [
                                          "organization_announcement_banners",
                                          "organization_custom_roles",
                                          "repository_announcement_banners"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/repos": {
        "get": {
          "parameters": {
            "changed": {
              "type": {
                "schema": {
                  "enum_changed": {
                    "added": false,
                    "removed": false,
                    "values_added": [
                      "internal"
                    ]
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "security_and_analysis"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "visibility": {
                          "enum_changed": {
                            "added": false,
                            "removed": false,
                            "values_added": [
                              "internal"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/secret-scanning/alerts": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "resolution_comment"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams": {
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "added": [
                        [
                          "ldap_dn",
                          {
                            "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. LDAP synchronization must be enabled to map LDAP entries to a team. Use the \"[Update LDAP mapping for a team](https://docs.github.com/enterprise-server@3.7/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team)\" endpoint to change the LDAP DN. For more information, see \"[Using LDAP](https://docs.github.com/enterprise-server@3.7/admin/identity-and-access-management/authenticating-users-for-your-github-enterprise-server-instance/using-ldap#enabling-ldap-sync).\"",
                            "type": "string"
                          }
                        ]
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/repos": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "security_and_analysis"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/rate_limit": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "resources": {
                              "properties_changed": {
                                "removed": [
                                  "dependency_snapshots"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}": {
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "visibility": {
                          "enum_changed": {
                            "added": false,
                            "removed": false,
                            "values_added": [
                              "internal"
                            ]
                          }
                        }
                      },
                      "removed": [
                        "allow_auto_merge",
                        "security_and_analysis"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/jobs/{job_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "head_branch",
                            "workflow_name"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/permissions/access": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "access_level": {
                              "enum_changed": {
                                "added": false,
                                "removed": false,
                                "values_removed": [
                                  "user"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "access_level": {
                          "enum_changed": {
                            "added": false,
                            "removed": false,
                            "values_removed": [
                              "user"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/permissions/selected-actions": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "verified_allowed"
                          ]
                        },
                        "required_changed": {
                          "added": [
                            "github_owned_allowed",
                            "patterns_allowed"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "verified_allowed"
                      ]
                    },
                    "required_changed": {
                      "added": [
                        "github_owned_allowed",
                        "patterns_allowed"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runs": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "workflow_runs": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "head_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "security_and_analysis"
                                        ]
                                      }
                                    },
                                    "repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "security_and_analysis"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "display_title"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runs/{run_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "head_repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            },
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "display_title"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "head_repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            },
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "display_title"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "jobs": {
                              "items_changed": {
                                "properties_changed": {
                                  "removed": [
                                    "head_branch",
                                    "workflow_name"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "jobs": {
                              "items_changed": {
                                "properties_changed": {
                                  "removed": [
                                    "head_branch",
                                    "workflow_name"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "workflow_runs": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "head_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "security_and_analysis"
                                        ]
                                      }
                                    },
                                    "repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "security_and_analysis"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "display_title"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "protection": {
                                "properties_changed": {
                                  "changed": {
                                    "required_pull_request_reviews": {
                                      "properties_changed": {
                                        "removed": [
                                          "require_last_push_approval"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "allow_fork_syncing",
                                    "lock_branch"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches/{branch}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "protection": {
                              "properties_changed": {
                                "changed": {
                                  "required_pull_request_reviews": {
                                    "properties_changed": {
                                      "removed": [
                                        "require_last_push_approval"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "allow_fork_syncing",
                                  "lock_branch"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches/{branch}/protection": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "required_pull_request_reviews": {
                              "properties_changed": {
                                "removed": [
                                  "require_last_push_approval"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "allow_fork_syncing",
                            "lock_branch"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "required_pull_request_reviews": {
                          "properties_changed": {
                            "removed": [
                              "require_last_push_approval"
                            ]
                          }
                        }
                      },
                      "removed": [
                        "allow_fork_syncing",
                        "lock_branch"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "required_pull_request_reviews": {
                              "properties_changed": {
                                "removed": [
                                  "require_last_push_approval"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "allow_fork_syncing",
                            "lock_branch"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "require_last_push_approval"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "require_last_push_approval"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "require_last_push_approval"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches/{branch}/rename": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "protection": {
                              "properties_changed": {
                                "changed": {
                                  "required_pull_request_reviews": {
                                    "properties_changed": {
                                      "removed": [
                                        "require_last_push_approval"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "allow_fork_syncing",
                                  "lock_branch"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/check-suites": {
        "post": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/check-suites/preferences": {
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/check-suites/{check_suite_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/code-scanning/sarifs": {
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "validate"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/collaborators": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "Filter collaborators by the permissions they have on the repository. If not specified, all collaborators will be returned.",
                "in": "query",
                "name": "permission",
                "required": false,
                "schema": {
                  "enum": [
                    "pull",
                    "triage",
                    "push",
                    "maintain",
                    "admin"
                  ],
                  "type": "string"
                },
                "style": "form"
              }
            ]
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "required_changed": {
                            "removed": [
                              "role_name"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/collaborators/{username}": {
        "put": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/collaborators/{username}/permission": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "user": {
                              "required_changed": {
                                "removed": [
                                  "role_name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}/check-suites": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "check_suites": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "security_and_analysis"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}/status": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/dependency-graph/compare/{basehead}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "scope"
                            ]
                          },
                          "required_changed": {
                            "removed": [
                              "scope"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/forks": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "security_and_analysis"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/installation": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_announcement_banners",
                                  "organization_custom_roles",
                                  "repository_announcement_banners"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/invitations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "removed": [
                                    "security_and_analysis"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/invitations/{invitation_id}": {
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "removed": [
                                  "security_and_analysis"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/notifications": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "removed": [
                                    "security_and_analysis"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "discussion_url"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "discussion_category_name",
                        "make_latest"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "discussion_url"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "removed": [
              "404"
            ]
          }
        }
      },
      "/repos/{owner}/{repo}/releases/latest": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "discussion_url"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases/tags/{tag}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "discussion_url"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases/{release_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "discussion_url"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "discussion_category_name",
                        "make_latest"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "discussion_url"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "removed": [
              "404"
            ]
          }
        }
      },
      "/repos/{owner}/{repo}/secret-scanning/alerts": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "resolution_comment"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "resolution_comment"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "resolution_comment"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "resolution_comment"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "removed": [
              "400"
            ]
          }
        }
      },
      "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "type": {
                                "enum_changed": {
                                  "added": false,
                                  "removed": false,
                                  "values_removed": [
                                    "issue_title",
                                    "issue_body",
                                    "issue_comment"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/transfer": {
        "post": {
          "responses": {
            "changed": {
              "202": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "security_and_analysis"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repositories": {
        "get": {
          "parameters": {
            "added": [
              {
                "description": "Specifies the types of repositories to return. This endpoint will only list repositories available to all users on the enterprise.",
                "in": "query",
                "name": "visibility",
                "required": false,
                "schema": {
                  "default": "public",
                  "enum": [
                    "all",
                    "public"
                  ],
                  "example": "all",
                  "type": "string"
                },
                "style": "form"
              }
            ]
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "security_and_analysis"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/search/code": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "items": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "security_and_analysis"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/search/commits": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "items": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "security_and_analysis"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/repos": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "security_and_analysis"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/installations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installations": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "permissions": {
                                      "properties_changed": {
                                        "removed": [
                                          "organization_announcement_banners",
                                          "organization_custom_roles",
                                          "repository_announcement_banners"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/migrations/{migration_id}/repositories": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "security_and_analysis"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/repository_invitations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "removed": [
                                    "security_and_analysis"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/subscriptions": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "security_and_analysis"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/installation": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_announcement_banners",
                                  "organization_custom_roles",
                                  "repository_announcement_banners"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/repos": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "security_and_analysis"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/subscriptions": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "security_and_analysis"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "removed": {
      "/enterprises/{enterprise}/code_security_and_analysis": [
        "get",
        "patch"
      ],
      "/enterprises/{enterprise}/dependabot/alerts": [
        "get"
      ],
      "/enterprises/{enterprise}/{security_product}/{enablement}": [
        "post"
      ],
      "/marketplace_listing/accounts/{account_id}": [
        "get"
      ],
      "/marketplace_listing/plans": [
        "get"
      ],
      "/marketplace_listing/plans/{plan_id}/accounts": [
        "get"
      ],
      "/marketplace_listing/stubbed/accounts/{account_id}": [
        "get"
      ],
      "/marketplace_listing/stubbed/plans": [
        "get"
      ],
      "/marketplace_listing/stubbed/plans/{plan_id}/accounts": [
        "get"
      ],
      "/orgs/{org}/actions/required_workflows": [
        "get",
        "post"
      ],
      "/orgs/{org}/actions/required_workflows/{required_workflow_id}": [
        "get",
        "delete",
        "patch"
      ],
      "/orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories": [
        "get",
        "put"
      ],
      "/orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}": [
        "put",
        "delete"
      ],
      "/orgs/{org}/actions/variables": [
        "get",
        "post"
      ],
      "/orgs/{org}/actions/variables/{name}": [
        "get",
        "delete",
        "patch"
      ],
      "/orgs/{org}/actions/variables/{name}/repositories": [
        "get",
        "put"
      ],
      "/orgs/{org}/actions/variables/{name}/repositories/{repository_id}": [
        "put",
        "delete"
      ],
      "/orgs/{org}/blocks": [
        "get"
      ],
      "/orgs/{org}/blocks/{username}": [
        "get",
        "put",
        "delete"
      ],
      "/orgs/{org}/codespaces": [
        "get"
      ],
      "/orgs/{org}/codespaces/billing": [
        "put"
      ],
      "/orgs/{org}/codespaces/secrets": [
        "get"
      ],
      "/orgs/{org}/codespaces/secrets/public-key": [
        "get"
      ],
      "/orgs/{org}/codespaces/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/orgs/{org}/codespaces/secrets/{secret_name}/repositories": [
        "get",
        "put"
      ],
      "/orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}": [
        "put",
        "delete"
      ],
      "/orgs/{org}/dependabot/alerts": [
        "get"
      ],
      "/orgs/{org}/failed_invitations": [
        "get"
      ],
      "/orgs/{org}/interaction-limits": [
        "get",
        "put",
        "delete"
      ],
      "/orgs/{org}/invitations": [
        "get",
        "post"
      ],
      "/orgs/{org}/invitations/{invitation_id}": [
        "delete"
      ],
      "/orgs/{org}/invitations/{invitation_id}/teams": [
        "get"
      ],
      "/orgs/{org}/members/{username}/codespaces": [
        "get"
      ],
      "/orgs/{org}/members/{username}/codespaces/{codespace_name}": [
        "delete"
      ],
      "/orgs/{org}/members/{username}/codespaces/{codespace_name}/stop": [
        "post"
      ],
      "/orgs/{org}/migrations/{migration_id}/archive": [
        "get",
        "delete"
      ],
      "/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock": [
        "delete"
      ],
      "/orgs/{org}/migrations/{migration_id}/repositories": [
        "get"
      ],
      "/orgs/{org}/packages": [
        "get"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}": [
        "get",
        "delete"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}/restore": [
        "post"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}/versions": [
        "get"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}": [
        "get",
        "delete"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": [
        "post"
      ],
      "/orgs/{org}/settings/billing/actions": [
        "get"
      ],
      "/orgs/{org}/settings/billing/packages": [
        "get"
      ],
      "/orgs/{org}/settings/billing/shared-storage": [
        "get"
      ],
      "/orgs/{org}/teams/{team_slug}/invitations": [
        "get"
      ],
      "/repos/{org}/{repo}/actions/required_workflows": [
        "get"
      ],
      "/repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}": [
        "get"
      ],
      "/repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/timing": [
        "get"
      ],
      "/repos/{owner}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/runs": [
        "get"
      ],
      "/repos/{owner}/{repo}/actions/runs/{run_id}/approve": [
        "post"
      ],
      "/repos/{owner}/{repo}/actions/runs/{run_id}/timing": [
        "get"
      ],
      "/repos/{owner}/{repo}/actions/variables": [
        "get",
        "post"
      ],
      "/repos/{owner}/{repo}/actions/variables/{name}": [
        "get",
        "delete",
        "patch"
      ],
      "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing": [
        "get"
      ],
      "/repos/{owner}/{repo}/automated-security-fixes": [
        "put",
        "delete"
      ],
      "/repos/{owner}/{repo}/code-scanning/codeql/databases": [
        "get"
      ],
      "/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces": [
        "get",
        "post"
      ],
      "/repos/{owner}/{repo}/codespaces/devcontainers": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/machines": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/new": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/secrets": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/secrets/public-key": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/repos/{owner}/{repo}/community/profile": [
        "get"
      ],
      "/repos/{owner}/{repo}/dependabot/alerts": [
        "get"
      ],
      "/repos/{owner}/{repo}/dependabot/alerts/{alert_number}": [
        "get",
        "patch"
      ],
      "/repos/{owner}/{repo}/import": [
        "get",
        "put",
        "delete",
        "patch"
      ],
      "/repos/{owner}/{repo}/import/authors": [
        "get"
      ],
      "/repos/{owner}/{repo}/import/authors/{author_id}": [
        "patch"
      ],
      "/repos/{owner}/{repo}/import/large_files": [
        "get"
      ],
      "/repos/{owner}/{repo}/import/lfs": [
        "patch"
      ],
      "/repos/{owner}/{repo}/interaction-limits": [
        "get",
        "put",
        "delete"
      ],
      "/repos/{owner}/{repo}/pages/health": [
        "get"
      ],
      "/repos/{owner}/{repo}/pulls/{pull_number}/codespaces": [
        "post"
      ],
      "/repos/{owner}/{repo}/traffic/clones": [
        "get"
      ],
      "/repos/{owner}/{repo}/traffic/popular/paths": [
        "get"
      ],
      "/repos/{owner}/{repo}/traffic/popular/referrers": [
        "get"
      ],
      "/repos/{owner}/{repo}/traffic/views": [
        "get"
      ],
      "/repos/{owner}/{repo}/vulnerability-alerts": [
        "get",
        "put",
        "delete"
      ],
      "/repositories/{repository_id}/environments/{environment_name}/variables": [
        "get",
        "post"
      ],
      "/repositories/{repository_id}/environments/{environment_name}/variables/{name}": [
        "get",
        "delete",
        "patch"
      ],
      "/teams/{team_id}/invitations": [
        "get"
      ],
      "/user/blocks": [
        "get"
      ],
      "/user/blocks/{username}": [
        "get",
        "put",
        "delete"
      ],
      "/user/codespaces": [
        "get",
        "post"
      ],
      "/user/codespaces/secrets": [
        "get"
      ],
      "/user/codespaces/secrets/public-key": [
        "get"
      ],
      "/user/codespaces/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/user/codespaces/secrets/{secret_name}/repositories": [
        "get",
        "put"
      ],
      "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}": [
        "put",
        "delete"
      ],
      "/user/codespaces/{codespace_name}": [
        "get",
        "delete",
        "patch"
      ],
      "/user/codespaces/{codespace_name}/exports": [
        "post"
      ],
      "/user/codespaces/{codespace_name}/exports/{export_id}": [
        "get"
      ],
      "/user/codespaces/{codespace_name}/machines": [
        "get"
      ],
      "/user/codespaces/{codespace_name}/publish": [
        "post"
      ],
      "/user/codespaces/{codespace_name}/start": [
        "post"
      ],
      "/user/codespaces/{codespace_name}/stop": [
        "post"
      ],
      "/user/email/visibility": [
        "patch"
      ],
      "/user/interaction-limits": [
        "get",
        "put",
        "delete"
      ],
      "/user/marketplace_purchases": [
        "get"
      ],
      "/user/marketplace_purchases/stubbed": [
        "get"
      ],
      "/user/migrations/{migration_id}": [
        "get"
      ],
      "/user/migrations/{migration_id}/repos/{repo_name}/lock": [
        "delete"
      ],
      "/user/packages": [
        "get"
      ],
      "/user/packages/{package_type}/{package_name}": [
        "get",
        "delete"
      ],
      "/user/packages/{package_type}/{package_name}/restore": [
        "post"
      ],
      "/user/packages/{package_type}/{package_name}/versions": [
        "get"
      ],
      "/user/packages/{package_type}/{package_name}/versions/{package_version_id}": [
        "get",
        "delete"
      ],
      "/user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": [
        "post"
      ],
      "/users/{username}/packages": [
        "get"
      ],
      "/users/{username}/packages/{package_type}/{package_name}": [
        "get",
        "delete"
      ],
      "/users/{username}/packages/{package_type}/{package_name}/restore": [
        "post"
      ],
      "/users/{username}/packages/{package_type}/{package_name}/versions": [
        "get"
      ],
      "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}": [
        "get",
        "delete"
      ],
      "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": [
        "post"
      ],
      "/users/{username}/settings/billing/actions": [
        "get"
      ],
      "/users/{username}/settings/billing/packages": [
        "get"
      ],
      "/users/{username}/settings/billing/shared-storage": [
        "get"
      ],
      "/versions": [
        "get"
      ]
    }
  },
  "servers": {
    "added": [
      {
        "url": "{protocol}://{hostname}/api/v3",
        "variables": {
          "hostname": {
            "default": "HOSTNAME",
            "description": "Self-hosted Enterprise Server hostname"
          },
          "protocol": {
            "default": "http",
            "description": "Self-hosted Enterprise Server protocol"
          }
        }
      }
    ],
    "removed": [
      {
        "url": "https://api.github.com"
      }
    ]
  }
}